<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Waher.Content.Asn1</name>
    </assembly>
    <members>
        <member name="T:Waher.Content.Asn1.Asn1Document">
            <summary>
            Represents an ASN.1 document.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Asn1Document.#ctor(System.String)">
            <summary>
            Represents an ASN.1 document.
            </summary>
            <param name="Text">ASN.1 text to parse.</param>
        </member>
        <member name="P:Waher.Content.Asn1.Asn1Document.Root">
            <summary>
            ASN.1 Root node
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Asn1Document.Text">
            <summary>
            ASN.1 text
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Asn1Document.ExportCSharp(System.String,Waher.Content.Asn1.CSharpExportSettings)">
            <summary>
            Exports ASN.1 schemas to C#
            </summary>
            <param name="Namespace">What namespace to generate classes in.</param>
            <param name="Settings">C# export settings.</param>
            <returns>C# code</returns>
        </member>
        <member name="M:Waher.Content.Asn1.Asn1Document.ExportCSharp(System.Text.StringBuilder,System.String,Waher.Content.Asn1.CSharpExportSettings)">
            <summary>
            Exports ASN.1 schemas to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Namespace">What namespace to generate classes in.</param>
            <param name="Settings">C# export settings.</param>
        </member>
        <member name="T:Waher.Content.Asn1.CSharpExportSettings">
            <summary>
            C# export settings
            </summary>
        </member>
        <member name="F:Waher.Content.Asn1.CSharpExportSettings.Codecs">
            <summary>
            What encoders and decoders to include in the generation of C# code.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.EncodingSchemes">
            <summary>
            Available ASN.1 encoding schemes.
            </summary>
        </member>
        <member name="F:Waher.Content.Asn1.EncodingSchemes.BER">
            <summary>
            Basic Encoding Rules (BER)
            </summary>
        </member>
        <member name="F:Waher.Content.Asn1.EncodingSchemes.All">
            <summary>
            All supported encoding schemes.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Exceptions.Asn1Exception">
            <summary>
            Base class from ASN.1 exceptions.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Exceptions.Asn1Exception.#ctor(System.String)">
            <summary>
            Base class from ASN.1 exceptions.
            </summary>
            <param name="Message">Exception message.</param>
        </member>
        <member name="T:Waher.Content.Asn1.Exceptions.Asn1SyntaxException">
            <summary>
            ASN.1 syntax exceptions.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Exceptions.Asn1SyntaxException.#ctor(System.String,System.String,System.Int32)">
            <summary>
            ASN.1 syntax exceptions.
            </summary>
            <param name="Message">Exception message.</param>
            <param name="Text">ASN.1 text</param>
            <param name="Position">Position where exception was raised.</param>
        </member>
        <member name="P:Waher.Content.Asn1.Exceptions.Asn1SyntaxException.Text">
            <summary>
            ASN.1 text
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Exceptions.Asn1SyntaxException.Position">
            <summary>
            Position into text where exception was raised.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Choice">
            <summary>
            Represents a ASN.1 CHOICE construct.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Choice.#ctor(System.String,Waher.Content.Asn1.Model.Asn1Node[])">
            <summary>
            Represents a ASN.1 CHOICE construct.
            </summary>
            <param name="FieldName">Optional field name.</param>
            <param name="Nodes">Nodes</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Choice.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Choice.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Choice.ExportImplicitCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports implicit definitions to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Tags">
            <summary>
            How ASN.1 tags are managed.
            </summary>
        </member>
        <member name="F:Waher.Content.Asn1.Model.Asn1Tags.Automatic">
            <summary>
            Automatically
            </summary>
        </member>
        <member name="F:Waher.Content.Asn1.Model.Asn1Tags.Implicit">
            <summary>
            Implicitly
            </summary>
        </member>
        <member name="F:Waher.Content.Asn1.Model.Asn1Tags.Explicit">
            <summary>
            Explicitly
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Definitions">
            <summary>
            Represents a collection of ASN.1 definitions.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Definitions.#ctor(System.String,Waher.Content.Asn1.Model.Asn1Oid,System.Nullable{Waher.Content.Asn1.Model.Asn1Tags},System.Boolean,Waher.Content.Asn1.Model.Asn1Node)">
            <summary>
            Represents a collection of ASN.1 definitions.
            </summary>
            <param name="Identifier">Identifier</param>
            <param name="Oid">Optional Object ID</param>
            <param name="Tags">How tags are handled.</param>
            <param name="Abstract">If abstract syntax is used.</param>
            <param name="Body">Definition body.</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Definitions.Identifier">
            <summary>
            Identifier
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Definitions.Oid">
            <summary>
            Optional Object ID
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Definitions.Tags">
            <summary>
            How tags are handled.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Definitions.Abstract">
            <summary>
            If abstract syntax is used.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Definitions.Body">
            <summary>
            Definition body.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Definitions.ExportCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Enumeration">
            <summary>
            ENUMERATED
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Enumeration.#ctor(System.String,Waher.Content.Asn1.Model.Asn1Node[])">
            <summary>
            ENUMERATED
            </summary>
            <param name="FieldName">Optional field name.</param>
            <param name="Nodes">Nodes</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Enumeration.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Enumeration.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Enumeration.ExportImplicitCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports implicit definitions to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Extension">
            <summary>
            Extensions follow.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Extension.#ctor">
            <summary>
            Extensions follow.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Field">
            <summary>
            Represents an ASN.1 named field.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1FieldDefinition">
            <summary>
            Represents an ASN.1 field definition.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1FieldDefinition.#ctor(System.String,System.Nullable{System.Int32},Waher.Content.Asn1.Model.Asn1Type,Waher.Content.Asn1.Model.Asn1Restriction,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Waher.Content.Asn1.Model.Asn1Node,Waher.Content.Asn1.Model.Values.Asn1NamedValue[])">
            <summary>
            Represents an ASN.1 field definition.
            </summary>
            <param name="FieldName">Field name.</param>
            <param name="Type">Type.</param>
            <param name="Restriction">Optional restrictions.</param>
            <param name="Optional">If field is optional.</param>
            <param name="Unique">If field value is unique.</param>
            <param name="Present">If an optional field must be present.</param>
            <param name="Absent">If an optional field must be absent.</param>
            <param name="Default">Default value if field not provided.</param>
            <param name="NamedOptions">Named options.</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1FieldDefinition.FieldName">
            <summary>
            Field Name
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1FieldDefinition.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1FieldDefinition.Restriction">
            <summary>
            Optional restrictions.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1FieldDefinition.Optional">
            <summary>
            If field is optional.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1FieldDefinition.Unique">
            <summary>
            If field value is unique.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1FieldDefinition.Present">
            <summary>
            If an optional field must be present.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1FieldDefinition.Absent">
            <summary>
            If an optional field must be absent.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1FieldDefinition.Default">
            <summary>
            Default value if field not provided.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1FieldDefinition.NamedOptions">
            <summary>
            Named options.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1FieldDefinition.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1FieldDefinition.ExportCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1FieldDefinition.ExportImplicitCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports implicit definitions to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1FieldValueDefinition">
            <summary>
            Represents an ASN.1 field value definition.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1FieldValueDefinition.#ctor(System.String,System.String,Waher.Content.Asn1.Model.Asn1Node)">
            <summary>
            Represents an ASN.1 field value definition.
            </summary>
            <param name="FieldName">Field name.</param>
            <param name="TypeName">Type name.</param>
            <param name="Value">Value</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1FieldValueDefinition.FieldName">
            <summary>
            Field Name
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1FieldValueDefinition.TypeName">
            <summary>
            Type Name
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1FieldValueDefinition.Value">
            <summary>
            Type definition
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Import">
            <summary>
            Represents one import instruction.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Import.#ctor(System.String,System.String)">
            <summary>
            Represents one import instruction.
            </summary>
            <param name="Identifier">Identifier to import.</param>
            <param name="Module">Optional module reference.</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Import.Identifier">
            <summary>
            Identifier to import.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Import.Module">
            <summary>
            Optional module reference.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1List">
            <summary>
            Abstract base class for list constructs.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1List.#ctor(System.String,Waher.Content.Asn1.Model.Asn1Node[])">
            <summary>
            Abstract base class for list constructs.
            </summary>
            <param name="FieldName">Optional field name.</param>
            <param name="Nodes">Nodes</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1List.Nodes">
            <summary>
            Nodes
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1List.FieldName">
            <summary>
            Optional field name.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Module">
            <summary>
            Represents an ASN.1 module.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Module.#ctor(Waher.Content.Asn1.Model.Asn1Import[],System.String[],Waher.Content.Asn1.Model.Asn1Node[])">
            <summary>
            Represents an ASN.1 module.
            </summary>
            <param name="Imports">Optional Import instructions.</param>
            <param name="Exports">Optional Export instructions.</param>
            <param name="Items">Items in module.</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Module.Imports">
            <summary>
            Optional Import instructions.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Module.Exports">
            <summary>
            Optional Export instructions.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Module.Items">
            <summary>
            Items in module.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Module.ExportCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Node">
            <summary>
            Base class for all ASN.1 nodes.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Node.ExportCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Node.ExportImplicitCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports implicit definitions to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Oid">
            <summary>
            Represents an ASN.1 Object ID
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Oid.#ctor(Waher.Content.Asn1.Model.Asn1Node[])">
            <summary>
            Represents an ASN.1 Object ID
            </summary>
            <param name="Values">OID values.</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Oid.Values">
            <summary>
            OID values.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Restriction">
            <summary>
            Abstract base class for ASN.1 restrictions.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Sequence">
            <summary>
            Represents a ASN.1 SEQUENCE construct.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Sequence.#ctor(System.String,Waher.Content.Asn1.Model.Asn1Node[])">
            <summary>
            Represents a ASN.1 SEQUENCE construct.
            </summary>
            <param name="FieldName">Optional field name.</param>
            <param name="Nodes">Nodes</param>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Sequence.ExportCSharpTypeDefinition(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32,System.String)">
            <summary>
            Exports to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
            <param name="TypeName">Type name.</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Sequence.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Sequence.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Sequence.ExportImplicitCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports implicit definitions to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1SequenceOf">
            <summary>
            Represents a ASN.1 SEQUENCE OF construct.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1SequenceOf.#ctor(Waher.Content.Asn1.Model.Asn1Values,System.String)">
            <summary>
            Represents a ASN.1 SEQUENCE OF construct.
            </summary>
            <param name="Size">Optional SIZE</param>
            <param name="TypeName">Type name</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1SequenceOf.Size">
            <summary>
            Optional SIZE
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1SequenceOf.TypeName">
            <summary>
            Type name.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1SequenceOf.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1SequenceOf.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Set">
            <summary>
            Represents a ASN.1 SET construct.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Set.#ctor(System.String,Waher.Content.Asn1.Model.Asn1Node[])">
            <summary>
            Represents a ASN.1 SET construct.
            </summary>
            <param name="FieldName">Optional field name.</param>
            <param name="Nodes">Nodes</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Set.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Set.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Set.ExportImplicitCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports implicit definitions to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1SetOf">
            <summary>
            Represents a ASN.1 SET OF construct.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1SetOf.#ctor(Waher.Content.Asn1.Model.Asn1Values,System.String)">
            <summary>
            Represents a ASN.1 SET OF construct.
            </summary>
            <param name="Size">SIZE</param>
            <param name="TypeName">Type name</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1SetOf.Size">
            <summary>
            SIZE
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1SetOf.TypeName">
            <summary>
            Type name.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Type">
            <summary>
            Abstract base class for ASN.1 types.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Type.ExportCSharpTypeDefinition(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32,System.String)">
            <summary>
            Exports to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
            <param name="TypeName">Type name.</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Type.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1Type.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1TypeDefinition">
            <summary>
            Represents an ASN.1 Type definition.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1TypeDefinition.#ctor(System.String,Waher.Content.Asn1.Model.Asn1Type)">
            <summary>
            Represents an ASN.1 Type definition.
            </summary>
            <param name="TypeName">Type name.</param>
            <param name="Definition">Definition</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1TypeDefinition.TypeName">
            <summary>
            Type Name
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Asn1TypeDefinition.Definition">
            <summary>
            Type definition
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1TypeDefinition.ExportCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Value">
            <summary>
            Abstract base class for values.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Value.#ctor">
            <summary>
            Abstract base class for values.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Asn1Values">
            <summary>
            Abstract base class for sets of values
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Asn1Values.#ctor">
            <summary>
            Abstract base class for sets of values
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Restrictions.Asn1And">
            <summary>
            Both restrictions apply
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Restrictions.Asn1And.#ctor(Waher.Content.Asn1.Model.Asn1Restriction,Waher.Content.Asn1.Model.Asn1Restriction)">
            <summary>
            Both restrictions apply
            </summary>
            <param name="Left">Left set</param>
            <param name="Right">Right set</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Restrictions.Asn1BinaryRestrictionOperator">
            <summary>
            Abstract base class of binary restriction operators
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Restrictions.Asn1BinaryRestrictionOperator.#ctor(Waher.Content.Asn1.Model.Asn1Restriction,Waher.Content.Asn1.Model.Asn1Restriction)">
            <summary>
            Abstract base class of binary restriction operators
            </summary>
            <param name="Left">Left set</param>
            <param name="Right">Right set</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Restrictions.Asn1BinaryRestrictionOperator.Left">
            <summary>
            Left restriction
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Restrictions.Asn1BinaryRestrictionOperator.Right">
            <summary>
            Right restriction
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Restrictions.Asn1Containing">
            <summary>
            CONTAINING
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Restrictions.Asn1Containing.#ctor(Waher.Content.Asn1.Model.Asn1Value)">
            <summary>
            CONTAINING
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Restrictions.Asn1EncodedBy">
            <summary>
            ENCODED BY
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Restrictions.Asn1EncodedBy.#ctor(Waher.Content.Asn1.Model.Asn1Value)">
            <summary>
            ENCODED BY
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Restrictions.Asn1From">
            <summary>
            FROM()
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Restrictions.Asn1From.#ctor(Waher.Content.Asn1.Model.Asn1Values)">
            <summary>
            FROM()
            </summary>
            <param name="Set">Set</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Restrictions.Asn1InSet">
            <summary>
            Restricted to elements in set.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Restrictions.Asn1InSet.#ctor(Waher.Content.Asn1.Model.Asn1Values)">
            <summary>
            Restricted to elements in set.
            </summary>
            <param name="Set">Set</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Restrictions.Asn1Or">
            <summary>
            Either restriction applies
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Restrictions.Asn1Or.#ctor(Waher.Content.Asn1.Model.Asn1Restriction,Waher.Content.Asn1.Model.Asn1Restriction)">
            <summary>
            Either restriction applies
            </summary>
            <param name="Left">Left set</param>
            <param name="Right">Right set</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Restrictions.Asn1Pattern">
            <summary>
            PATTERN
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Restrictions.Asn1Pattern.#ctor(Waher.Content.Asn1.Model.Asn1Value)">
            <summary>
            PATTERN
            </summary>
            <param name="RegularExpression">Regular Expression</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Restrictions.Asn1SetRestriction">
            <summary>
            Abstract base class for set-based restrictions
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Restrictions.Asn1SetRestriction.#ctor(Waher.Content.Asn1.Model.Asn1Values)">
            <summary>
            Abstract base class for set-based restrictions
            </summary>
            <param name="Set">Set</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Restrictions.Asn1SetRestriction.Set">
            <summary>
            Set
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Restrictions.Asn1Size">
            <summary>
            SIZE()
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Restrictions.Asn1Size.#ctor(Waher.Content.Asn1.Model.Asn1Values)">
            <summary>
            SIZE()
            </summary>
            <param name="Set">Set</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Restrictions.Asn1ValueRestriction">
            <summary>
            Abstract base class for value-based restrictions
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Restrictions.Asn1ValueRestriction.#ctor(Waher.Content.Asn1.Model.Asn1Value)">
            <summary>
            Abstract base class for set-based restrictions
            </summary>
            <param name="Value">Item</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Restrictions.Asn1ValueRestriction.Value">
            <summary>
            Item
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Restrictions.Asn1WithComponents">
            <summary>
            WITH COMPONENTS
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Restrictions.Asn1WithComponents.#ctor(Waher.Content.Asn1.Model.Asn1Value)">
            <summary>
            WITH COMPONENTS
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Sets.Asn1All">
            <summary>
            All elements (in current context).
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Sets.Asn1All.#ctor">
            <summary>
            All elements (in current context).
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Sets.Asn1BinarySetOperator">
            <summary>
            Abstract base class of binary set operators
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Sets.Asn1BinarySetOperator.#ctor(Waher.Content.Asn1.Model.Asn1Values,Waher.Content.Asn1.Model.Asn1Values)">
            <summary>
            Abstract base class of binary set operators
            </summary>
            <param name="Left">Left set</param>
            <param name="Right">Right set</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Sets.Asn1BinarySetOperator.Left">
            <summary>
            Left set
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Sets.Asn1BinarySetOperator.Right">
            <summary>
            Right set
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Sets.Asn1Element">
            <summary>
            Set of one element.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Sets.Asn1Element.#ctor(Waher.Content.Asn1.Model.Asn1Value)">
            <summary>
            Set of one element.
            </summary>
            <param name="Element">Element</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Sets.Asn1Element.Element">
            <summary>
            Element
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Sets.Asn1Exclusion">
            <summary>
            Exclusion of sets.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Sets.Asn1Exclusion.#ctor(Waher.Content.Asn1.Model.Asn1Values,Waher.Content.Asn1.Model.Asn1Values)">
            <summary>
            Exclusion of sets.
            </summary>
            <param name="Left">Left set</param>
            <param name="Right">Right set</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Sets.Asn1Intersection">
            <summary>
            Intersection of sets.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Sets.Asn1Intersection.#ctor(Waher.Content.Asn1.Model.Asn1Values,Waher.Content.Asn1.Model.Asn1Values)">
            <summary>
            Intersection of sets.
            </summary>
            <param name="Left">Left set</param>
            <param name="Right">Right set</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Sets.Asn1Interval">
            <summary>
            Interval of elements.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Sets.Asn1Interval.#ctor(Waher.Content.Asn1.Model.Asn1Value,Waher.Content.Asn1.Model.Asn1Value)">
            <summary>
            Interval of elements.
            </summary>
            <param name="From">From</param>
            <param name="To">To</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Sets.Asn1Interval.From">
            <summary>
            From
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Sets.Asn1Interval.To">
            <summary>
            To
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Sets.Asn1Union">
            <summary>
            Union of sets.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Sets.Asn1Union.#ctor(Waher.Content.Asn1.Model.Asn1Values,Waher.Content.Asn1.Model.Asn1Values)">
            <summary>
            Union of sets.
            </summary>
            <param name="Left">Left set</param>
            <param name="Right">Right set</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1BitString">
            <summary>
            BIT STRING
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1BitString.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1BitString.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1BmpString">
            <summary>
            BmpString (utf-16-be encoded string)
            Basic Multilingual Plane of ISO/IEC/ITU 10646-1
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1Boolean">
            <summary>
            BOOLEAN
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1Boolean.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1Boolean.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1Character">
            <summary>
            CHARACTER
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1Character.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1Character.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1Date">
            <summary>
            DATE
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1Date.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1Date.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1DateTime">
            <summary>
            DATE-TIME
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1DateTime.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1DateTime.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1GeneralizedTime">
            <summary>
            GeneralizedTime
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1GeneralizedTime.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1GeneralizedTime.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1GeneralString">
            <summary>
            GeneralString
            all registered graphic and character sets plus SPACE and DELETE
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1GraphicString">
            <summary>
            GraphicString
            all registered G sets and SPACE
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1Ia5String">
            <summary>
            IA5String
            International ASCII characters (International Alphabet 5)
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1Integer">
            <summary>
            INTEGER
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1Integer.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1Integer.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1Iso646String">
            <summary>
            Iso646String
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1Null">
            <summary>
            NULL
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1NumericString">
            <summary>
            NumericString
            1, 2, 3, 4, 5, 6, 7, 8, 9, 0, and SPACE 
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1ObjectIdentifier">
            <summary>
            OBJECT IDENTIFIER
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1OctetString">
            <summary>
            OCTET STRING
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1OctetString.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1OctetString.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1PrintableString">
            <summary>
            PrintableString
            a-z, A-Z, ' () +,-.?:/= and SPACE
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1Real">
            <summary>
            REAL
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1Real.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1Real.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1StringType">
            <summary>
            Abstract base class for string types
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1StringType.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1StringType.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1T61String">
            <summary>
            T61String
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1TeletexString">
            <summary>
            TeletexString
            CCITT and T.101 character sets
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1TimeOfDay">
            <summary>
            TIME-OF-DAY
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1TimeOfDay.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1TimeOfDay.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1TypeReference">
            <summary>
            Represents an ASN.1 type reference.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Types.Asn1TypeReference.#ctor(System.String)">
            <summary>
            Represents an ASN.1 type reference.
            </summary>
            <param name="Identifier">Identifier</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1TypeReference.Identifier">
            <summary>
            Identifier
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1UniversalString">
            <summary>
            UniversalString
            ISO10646 character set
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1UtcTime">
            <summary>
            UTCTime
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1UtcTime.CSharpTypeReference">
            <summary>
            C# type reference.
            </summary>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Types.Asn1UtcTime.CSharpTypeNullable">
            <summary>
            If type is nullable.
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1Utf8String">
            <summary>
            UTF8String
            any character from a recognized alphabet (including ASCII control characters)
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1VideotexString">
            <summary>
            VideotexString
            CCITT's T.100 and T.101 character sets 
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Types.Asn1VisibleString">
            <summary>
            VisibleString
            International ASCII printing character sets 
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Values.Asn1Array">
            <summary>
            Array of values
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1Array.#ctor(Waher.Content.Asn1.Model.Asn1Value[])">
            <summary>
            Array of values
            </summary>
            <param name="Values">Values</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Values.Asn1Array.Values">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Values.Asn1BooleanValue">
            <summary>
            Boolean value
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1BooleanValue.#ctor(System.Boolean)">
            <summary>
            Boolean value
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Values.Asn1BooleanValue.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1BooleanValue.ExportCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Values.Asn1FloatingPointValue">
            <summary>
            Floating-point value
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1FloatingPointValue.#ctor(System.Double)">
            <summary>
            Floating-point value
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Values.Asn1FloatingPointValue.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1FloatingPointValue.ExportCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Values.Asn1IntegerValue">
            <summary>
            Integer value
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1IntegerValue.#ctor(System.Int64)">
            <summary>
            Integer value
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Values.Asn1IntegerValue.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1IntegerValue.ExportCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Values.Asn1Max">
            <summary>
            MAX
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1Max.#ctor">
            <summary>
            MAX
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Values.Asn1Min">
            <summary>
            MIN
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1Min.#ctor">
            <summary>
            MIN
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Values.Asn1NamedValue">
            <summary>
            Represents a named value.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1NamedValue.#ctor(System.String,Waher.Content.Asn1.Model.Asn1Value)">
            <summary>
            Represents a named value.
            </summary>
            <param name="Identifier">Identifier</param>
            <param name="Value">Optional Value</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Values.Asn1NamedValue.Value">
            <summary>
            Optional Value
            </summary>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Values.Asn1StringValue">
            <summary>
            String value
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1StringValue.#ctor(System.String)">
            <summary>
            String value
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Values.Asn1StringValue.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1StringValue.ExportCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
        <member name="T:Waher.Content.Asn1.Model.Values.Asn1ValueReference">
            <summary>
            Represents an ASN.1 value reference.
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1ValueReference.#ctor(System.String)">
            <summary>
            Represents an ASN.1 value reference.
            </summary>
            <param name="Identifier">Identifier</param>
        </member>
        <member name="P:Waher.Content.Asn1.Model.Values.Asn1ValueReference.Identifier">
            <summary>
            Identifier
            </summary>
        </member>
        <member name="M:Waher.Content.Asn1.Model.Values.Asn1ValueReference.ExportCSharp(System.Text.StringBuilder,Waher.Content.Asn1.CSharpExportSettings,System.Int32)">
            <summary>
            Exports to C#
            </summary>
            <param name="Output">C# Output.</param>
            <param name="Settings">C# export settings.</param>
            <param name="Indent">Indentation</param>
        </member>
    </members>
</doc>
