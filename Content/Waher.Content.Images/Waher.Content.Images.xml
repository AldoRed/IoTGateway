<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Waher.Content.Images</name>
    </assembly>
    <members>
        <member name="T:Waher.Content.Images.ImageCodec">
            <summary>
            Image encoder/decoder.
            </summary>
        </member>
        <member name="M:Waher.Content.Images.ImageCodec.#ctor">
            <summary>
            Image encoder/decoder.
            </summary>
        </member>
        <member name="F:Waher.Content.Images.ImageCodec.ImageContentTypes">
            <summary>
            Image content types.
            </summary>
        </member>
        <member name="F:Waher.Content.Images.ImageCodec.ImageFileExtensions">
            <summary>
            Image content types.
            </summary>
        </member>
        <member name="P:Waher.Content.Images.ImageCodec.ContentTypes">
            <summary>
            Supported content types.
            </summary>
        </member>
        <member name="P:Waher.Content.Images.ImageCodec.FileExtensions">
            <summary>
            Supported file extensions.
            </summary>
        </member>
        <member name="M:Waher.Content.Images.ImageCodec.Decodes(System.String,Waher.Runtime.Inventory.Grade@)">
            <summary>
            If the decoder decodes an object with a given content type.
            </summary>
            <param name="ContentType">Content type to decode.</param>
            <param name="Grade">How well the decoder decodes the object.</param>
            <returns>If the decoder can decode an object with the given type.</returns>
        </member>
        <member name="M:Waher.Content.Images.ImageCodec.Decode(System.String,System.Byte[],System.Text.Encoding,System.Collections.Generic.KeyValuePair{System.String,System.String}[],System.Uri)">
            <summary>
            Decodes an object.
            </summary>
            <param name="ContentType">Internet Content Type.</param>
            <param name="Data">Encoded object.</param>
            <param name="Encoding">Any encoding specified. Can be null if no encoding specified.</param>
            <param name="Fields">Any content-type related fields and their corresponding values.</param>
            <param name="BaseUri">Base URI, if any. If not available, value is null.</param>
            <returns>Decoded object.</returns>
            <exception cref="T:System.ArgumentException">If the object cannot be decoded.</exception>
        </member>
        <member name="M:Waher.Content.Images.ImageCodec.Encodes(System.Object,Waher.Runtime.Inventory.Grade@,System.String[])">
            <summary>
            If the encoder encodes a given object.
            </summary>
            <param name="Object">Object to encode.</param>
            <param name="Grade">How well the encoder encodes the object.</param>
            <param name="AcceptedContentTypes">Optional array of accepted content types. If array is empty, all content types are accepted.</param>
            <returns>If the encoder can encode the given object.</returns>
        </member>
        <member name="M:Waher.Content.Images.ImageCodec.Encode(System.Object,System.Text.Encoding,System.String@,System.String[])">
            <summary>
            Encodes an object.
            </summary>
            <param name="Object">Object to encode.</param>
            <param name="Encoding">Desired encoding of text. Can be null if no desired encoding is speified.</param>
            <param name="ContentType">Content Type of encoding. Includes information about any text encodings used.</param>
            <returns>Encoded object.</returns>
            <param name="AcceptedContentTypes">Optional array of accepted content types. If array is empty, all content types are accepted.</param>
            <exception cref="T:System.ArgumentException">If the object cannot be encoded.</exception>
        </member>
        <member name="M:Waher.Content.Images.ImageCodec.TryGetContentType(System.String,System.String@)">
            <summary>
            Tries to get the content type of an item, given its file extension.
            </summary>
            <param name="FileExtension">File extension.</param>
            <param name="ContentType">Content type.</param>
            <returns>If the extension was recognized.</returns>
        </member>
    </members>
</doc>
