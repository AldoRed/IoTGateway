using System;
using Waher.Persistence;
using Waher.Persistence.Attributes;
using Waher.Runtime.Inventory;

namespace Waher.Networking.XMPP.Contracts
{
	/// <summary>
	/// Contains information about a legal identity generated by the client.
	/// </summary>
	[CollectionName("LegalIdentityStates")]
	[TypeName(TypeNameSerialization.None)]
	[Index("BareJid", "LegalId")]
	[Index("BareJid", "State", "Timestamp")]
	[Singleton]
	public class LegalIdentityState
	{
		private string objectId = null;
		private CaseInsensitiveString bareJid = string.Empty;
		private CaseInsensitiveString legalId = string.Empty;
		private byte[] publicKey = null;
		private IdentityState state = IdentityState.Created;
		private DateTime timestamp = DateTime.MinValue;

		/// <summary>
		/// Contains information about a legal identity generated by the client.
		/// </summary>
		public LegalIdentityState()
		{
		}

		/// <summary>
		/// Contains information about a legal identity generated by the client.
		/// </summary>
		/// <param name="LegalId">Legal identity.</param>
		public LegalIdentityState(string LegalId)
		{
			this.legalId = LegalId;
		}

		/// <summary>
		/// Object ID
		/// </summary>
		[ObjectId]
		public string ObjectId
		{
			get => this.objectId;
			set => this.objectId = value;
		}

		/// <summary>
		/// Bare JID of client applying for the identity.
		/// </summary>
		public CaseInsensitiveString BareJid
		{
			get => this.bareJid;
			set => this.bareJid = value;
		}

		/// <summary>
		/// Identity string assigned to the legal identity.
		/// </summary>
		public CaseInsensitiveString LegalId
		{
			get => this.legalId;
			set => this.legalId = value;
		}

		/// <summary>
		/// Public Key used by the cryptographic algororithm used to sign the identity application.
		/// </summary>
		[DefaultValueNull]
		public byte[] PublicKey
		{
			get => this.publicKey;
			set => this.publicKey = value;
		}

		/// <summary>
		/// State of the legal identity.
		/// </summary>
		public IdentityState State
		{
			get => this.state;
			set => this.state = value;
		}

		/// <summary>
		/// Timestamp when the legal identity was created or last updated.
		/// </summary>
		public DateTime Timestamp
		{
			get => this.timestamp;
			set => this.timestamp = value;
		}
	}
}
