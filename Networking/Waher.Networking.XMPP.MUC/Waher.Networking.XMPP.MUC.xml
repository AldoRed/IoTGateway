<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Waher.Networking.XMPP.MUC</name>
    </assembly>
    <members>
        <member name="T:Waher.Networking.XMPP.MUC.Affiliation">
            <summary>
            Affiliation enumeration
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.Affiliation.Owner">
            <summary>
            Owner of room
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.Affiliation.Admin">
            <summary>
            Administrator of room
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.Affiliation.Member">
            <summary>
            Member of room
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.Affiliation.Outcast">
            <summary>
            Outcast
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.Affiliation.None">
            <summary>
            No affiliation
            </summary>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.Role">
            <summary>
            Role enumeration
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.Role.Moderator">
            <summary>
            Room moderator
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.Role.Participant">
            <summary>
            Room participant
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.Role.Visitor">
            <summary>
            Room visitor
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.Role.None">
            <summary>
            No role
            </summary>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.RoomDeclinedMessageEventHandler">
            <summary>
            Delegate for MUC Room declined event handlers.
            </summary>
            <param name="Sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.RoomDeclinedMessageEventArgs">
            <summary>
            Message from a MUC room containing a declined invitation.
            </summary>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.RoomDeclinedMessageEventArgs.#ctor(Waher.Networking.XMPP.MessageEventArgs,System.String,System.String,System.String,System.String)">
            <summary>
            Message from a MUC room containing a declined invitation.
            </summary>
            <param name="e">Message event arguments.</param>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="DeclinedFrom">JID of entity sending the declined.</param>
            <param name="Reason">Reason for declined.</param>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomDeclinedMessageEventArgs.DeclinedFrom">
            <summary>
            JID of entity sending the declined invitation.
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomDeclinedMessageEventArgs.Reason">
            <summary>
            Reason for declining the invitation.
            </summary>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.RoomInformationEventHandler">
            <summary>
            Delegate for room information response event handlers.
            </summary>
            <param name="Sender">Sender of event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.RoomInformationEventArgs">
            <summary>
            Room information response event arguments.
            </summary>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.#ctor(Waher.Networking.XMPP.ServiceDiscovery.ServiceDiscoveryEventArgs)">
            <summary>
            Room information response event arguments.
            </summary>
            <param name="e">Service discovery response.</param>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.UserRegistration">
            <summary>
            Support for the muc#register FORM_TYPE
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.RoomConfiguration">
            <summary>
            Support for the muc#roomconfig FORM_TYPE
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.RoomInformation">
            <summary>
            Support for the muc#roominfo FORM_TYPE
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.StableId">
            <summary>
            This MUC will reflect the original message 'id' in 'groupchat' messages.
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.Hidden">
            <summary>
            Hidden room in Multi-User Chat (MUC)
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.MembersOnly">
            <summary>
            Members-only room in Multi-User Chat (MUC)
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.Moderated">
            <summary>
            Moderated room in Multi-User Chat (MUC)
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.NonAnonymous">
            <summary>
            Non-anonymous room in Multi-User Chat (MUC)
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.Open">
            <summary>
            Open room in Multi-User Chat (MUC)
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.PasswordProtected">
            <summary>
            Password-protected room in Multi-User Chat (MUC)
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.Persistent">
            <summary>
            Persistent room in Multi-User Chat (MUC)
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.Public">
            <summary>
            Public room in Multi-User Chat (MUC)
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.Rooms">
            <summary>
            List of MUC rooms (each as a separate item)
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.SemiAnonymous">
            <summary>
            Semi-anonymous room in Multi-User Chat (MUC)
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.Temporary">
            <summary>
            Temporary room in Multi-User Chat (MUC)
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.Unmoderated">
            <summary>
            Unmoderated room in Multi-User Chat (MUC)
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInformationEventArgs.Unsecured">
            <summary>
            Unsecured room in Multi-User Chat (MUC)
            </summary>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.RoomInvitationMessageEventHandler">
            <summary>
            Delegate for MUC Room invitation event handlers.
            </summary>
            <param name="Sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.RoomInvitationMessageEventArgs">
            <summary>
            Message from a MUC room containing an invitation.
            </summary>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.RoomInvitationMessageEventArgs.#ctor(Waher.Networking.XMPP.MUC.MultiUserChatClient,Waher.Networking.XMPP.MessageEventArgs,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Message from a MUC room containing an invitation.
            </summary>
            <param name="MucClient">Multi-User Chat Client.</param>
            <param name="e">Message event arguments.</param>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="InviteFrom">JID of entity sending the invitation.</param>
            <param name="Reason">Reason for invitation.</param>
            <param name="Password">Password, if used.</param>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInvitationMessageEventArgs.MucClient">
            <summary>
            Multi-User Chat Client.
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInvitationMessageEventArgs.InviteFrom">
            <summary>
            JID of entity sending the invitation.
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInvitationMessageEventArgs.Reason">
            <summary>
            Reason for invitation.
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomInvitationMessageEventArgs.Password">
            <summary>
            Password, if used.
            </summary>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.RoomInvitationMessageEventArgs.Accept(System.String,Waher.Networking.XMPP.MUC.UserPresenceEventHandlerAsync,System.Object)">
            <summary>
            Accepts the invitation, and enters the room.
            </summary>
            <param name="NickName">Nick-name to use in the room.</param>
            <param name="Callback">Method to call when response is returned.</param>
            <param name="State">State object to pass on to the callback method.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.RoomInvitationMessageEventArgs.Accept(System.String)">
            <summary>
            Accepts the invitation, and enters the room.
            </summary>
            <param name="NickName">Nick-name to use in the room.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.RoomInvitationMessageEventArgs.Decline">
            <summary>
            Declines the invitation, and enters the room.
            </summary>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.RoomInvitationMessageEventArgs.Decline(System.String)">
            <summary>
            Declines the invitation, and enters the room.
            </summary>
            <param name="Reason">Reason for declining invitation.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.RoomInvitationMessageEventArgs.Decline(System.String,System.String)">
            <summary>
            Declines the invitation, and enters the room.
            </summary>
            <param name="Reason">Reason for declining invitation.</param>
            <param name="Language">Language of text.</param>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.RoomMessageEventHandler">
            <summary>
            Delegate for MUC Room event handlers.
            </summary>
            <param name="Sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.RoomMessageEventArgs">
            <summary>
            Message from a MUC room.
            </summary>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.RoomMessageEventArgs.#ctor(Waher.Networking.XMPP.MessageEventArgs,System.String,System.String)">
            <summary>
            Message from a MUC room.
            </summary>
            <param name="e">Message event arguments.</param>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomMessageEventArgs.RoomId">
            <summary>
            Room ID
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomMessageEventArgs.Domain">
            <summary>
            Domain hosting the room.
            </summary>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.RoomOccupantMessageEventHandler">
            <summary>
            Delegate for MUC Room occupant event handlers.
            </summary>
            <param name="Sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.RoomOccupantMessageEventArgs">
            <summary>
            Message from a MUC room occupant.
            </summary>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.RoomOccupantMessageEventArgs.#ctor(Waher.Networking.XMPP.MessageEventArgs,System.String,System.String,System.String)">
            <summary>
            Message from a MUC room occupant.
            </summary>
            <param name="e">Message event arguments.</param>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="NickName">Nick-name of occupant.</param>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomOccupantMessageEventArgs.NickName">
            <summary>
            Nick-name of occupant.
            </summary>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.RoomRegistrationEventHandler">
            <summary>
            Delegate for room registration callback events.
            </summary>
            <param name="Sender">Sender of event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.RoomRegistrationEventArgs">
            <summary>
            Event arguments for a room registration event handlers.
            </summary>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.RoomRegistrationEventArgs.#ctor(Waher.Networking.XMPP.IqResultEventArgs,Waher.Networking.XMPP.DataForms.DataForm,System.Boolean,System.String)">
            <summary>
            Event arguments for a room registration event handlers.
            </summary>
            <param name="e">IQ Result event arguments.</param>
            <param name="Form">Registration form. Can be null if already registered.</param>
            <param name="AlreadyRegistered">If the Bare JID was already registered.</param>
            <param name="UserName">Nick-Name of the Bare JID.</param>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomRegistrationEventArgs.Form">
            <summary>
            Registration form. Can be null if already registered.
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomRegistrationEventArgs.UserName">
            <summary>
            User Name of Bare Jid, if already registered.
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.RoomRegistrationEventArgs.AlreadyRegistered">
            <summary>
            If already registered. The nick-name is available in <see cref="P:Waher.Networking.XMPP.MUC.RoomRegistrationEventArgs.UserName"/>.
            </summary>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.UserPresenceEventHandlerAsync">
            <summary>
            Delegate for User Presence events.
            </summary>
            <param name="Sender">Sender of event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.UserPresenceEventArgs">
            <summary>
            Event arguments for user presence events.
            </summary>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.UserPresenceEventArgs.#ctor(Waher.Networking.XMPP.PresenceEventArgs,System.String,System.String,System.String,Waher.Networking.XMPP.MUC.Affiliation,Waher.Networking.XMPP.MUC.Role,System.String,Waher.Networking.XMPP.MUC.MucStatus[])">
            <summary>
            Event arguments for user presence events.
            </summary>
            <param name="e">Presence event arguments</param>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="UserNick">Nick-Name of user sending presence.</param>
            <param name="Affiliation">User affiliation.</param>
            <param name="Role">User role.</param>
            <param name="FullJid">Full JID, if privileges allow.</param>
            <param name="Status">Status codes.</param>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.UserPresenceEventArgs.RoomId">
            <summary>
            Room ID
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.UserPresenceEventArgs.Domain">
            <summary>
            Domain hosting the room.
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.UserPresenceEventArgs.NickName">
            <summary>
            Nick-Name of user sending presence.
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.UserPresenceEventArgs.FullJid">
            <summary>
            Full JID, if privileges allow (null otherwise).
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.UserPresenceEventArgs.Affiliation">
            <summary>
            User Affiliation in room.
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.UserPresenceEventArgs.Role">
            <summary>
            User role in room.
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.UserPresenceEventArgs.MucStatus">
            <summary>
            Any status codes informing about changes to status.
            </summary>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.MucStatus">
            <summary>
            MUC Status, as defined in https://xmpp.org/registrar/mucstatus.html
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.FullJidVisisble">
            <summary>
            Inform user that any occupant is allowed to see the user's full JID
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.AffiliationChanged">
            <summary>
            Inform user that his or her affiliation changed while not in the room
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.ShowsUnavailableMembers">
            <summary>
            Inform occupants that room now shows unavailable members
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.DoesNotShowUnavailableMembers">
            <summary>
            Inform occupants that room now does not show unavailable members
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.NonPrivacyRelatedConfigurationChange">
            <summary>
            Inform occupants that a non-privacy-related room configuration change has occurred
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.OwnPresence">
            <summary>
            Inform user that presence refers to one of its own room occupants
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.LoggingEnabled">
            <summary>
            Inform occupants that room logging is now enabled
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.LoggingDisabled">
            <summary>
            Inform occupants that room logging is now disabled
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.RoomNonAnonymous">
            <summary>
            Inform occupants that the room is now non-anonymous
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.RoomSemiAnonymous">
            <summary>
            Inform occupants that the room is now semi-anonymous
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.RoomAnonymous">
            <summary>
            Inform occupants that the room is now fully-anonymous
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.Created">
            <summary>
            Inform user that a new room has been created
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.NickModified">
            <summary>
            Inform user that the service has assigned or modified the occupant's roomnick
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.Banned">
            <summary>
            Inform user that he or she has been banned from the room
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.NewRoomNickName">
            <summary>
            Inform all occupants of new room nickname
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.Kicked">
            <summary>
            Inform user that he or she has been kicked from the room
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.RemovedDueToAffiliationChange">
            <summary>
            Inform user that he or she is being removed from the room because of an affiliation change
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.RemovedDueToNonMembership">
            <summary>
            Inform user that he or she is being removed from the room because the room has been changed to members-only and the user is not a member
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MucStatus.RemovedDueToSystemShutdown">
            <summary>
            Inform user that he or she is being removed from the room because of a system shutdown
            </summary>
        </member>
        <member name="T:Waher.Networking.XMPP.MUC.MultiUserChatClient">
            <summary>
            Client managing communication with a Multi-User-Chat service.
            https://xmpp.org/extensions/xep-0045.html
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MultiUserChatClient.NamespaceMuc">
            <summary>
            http://jabber.org/protocol/muc
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MultiUserChatClient.NamespaceMucUser">
            <summary>
            http://jabber.org/protocol/muc#user
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MultiUserChatClient.NamespaceMucAdmin">
            <summary>
            http://jabber.org/protocol/muc#admin
            </summary>
        </member>
        <member name="F:Waher.Networking.XMPP.MUC.MultiUserChatClient.NamespaceMucOwner">
            <summary>
            http://jabber.org/protocol/muc#owner
            </summary>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.#ctor(Waher.Networking.XMPP.XmppClient,System.String)">
            <summary>
            Client managing communication with a Multi-User-Chat service.
            https://xmpp.org/extensions/xep-0045.html
            </summary>
            <param name="Client">XMPP Client to use.</param>
            <param name="ComponentAddress">Address to the Publish/Subscribe component.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.MultiUserChatClient.ComponentAddress">
            <summary>
            Publish/Subscribe component address.
            </summary>
        </member>
        <member name="P:Waher.Networking.XMPP.MUC.MultiUserChatClient.Extensions">
            <summary>
            Implemented extensions.
            </summary>
        </member>
        <member name="E:Waher.Networking.XMPP.MUC.MultiUserChatClient.UserPresence">
            <summary>
            Event raised when user presence is received.
            </summary>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.EnterRoom(System.String,System.String,System.String,Waher.Networking.XMPP.MUC.UserPresenceEventHandlerAsync,System.Object)">
            <summary>
            Enter a chat room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="NickName">Nickname to use in the chat room.</param>
            <param name="Callback">Method to call when response is returned.</param>
            <param name="State">State object to pass on to callback method.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.EnterRoom(System.String,System.String,System.String,System.String,Waher.Networking.XMPP.MUC.UserPresenceEventHandlerAsync,System.Object)">
            <summary>
            Enter a chat room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="NickName">Nickname to use in the chat room.</param>
            <param name="Password">Password</param>
            <param name="Callback">Method to call when response is returned.</param>
            <param name="State">State object to pass on to callback method.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.EnterRoomAsync(System.String,System.String,System.String)">
            <summary>
            Enter a chat room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="NickName">Nickname to use in the chat room.</param>
            <returns>Room entry response.</returns>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.EnterRoomAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Enter a chat room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="NickName">Nickname to use in the chat room.</param>
            <param name="Password">Password</param>
            <returns>Room entry response.</returns>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.LeaveRoom(System.String,System.String,System.String,Waher.Networking.XMPP.MUC.UserPresenceEventHandlerAsync,System.Object)">
            <summary>
            Leave a chat room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="NickName">Nickname to use in the chat room.</param>
            <param name="Callback">Method to call when response is returned.</param>
            <param name="State">State object to pass on to callback method.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.LeaveRoomAsync(System.String,System.String,System.String)">
            <summary>
            Leave a chat room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="NickName">Nickname to use in the chat room.</param>
            <returns>Room entry response.</returns>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.CreateInstantRoom(System.String,System.String,Waher.Networking.XMPP.IqResultEventHandlerAsync,System.Object)">
            <summary>
            Creates an instant room (with default settings).
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="Callback">Method to call when response is returned.</param>
            <param name="State">State object to pass on to callback method.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.CreateInstantRoomAsync(System.String,System.String)">
            <summary>
            Creates an instant room (with default settings).
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <returns>Response to request.</returns>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.GetRoomConfiguration(System.String,System.String,Waher.Networking.XMPP.DataForms.DataFormEventHandler,System.Object)">
            <summary>
            Gets the configuration form for a room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="Callback">Method to call when response is returned.</param>
            <param name="State">State object to pass on to callback method.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.GetRoomConfiguration(System.String,System.String,Waher.Networking.XMPP.DataForms.DataFormEventHandler,Waher.Networking.XMPP.IqResultEventHandlerAsync,System.Object)">
            <summary>
            Gets the configuration form for a room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="Callback">Method to call when response is returned.</param>
            <param name="SubmissionCallback">Method to call when configuration has been submitted.</param>
            <param name="State">State object to pass on to callback method.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.GetRoomConfigurationAsync(System.String,System.String)">
            <summary>
            Gets the configuration form for a room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <returns>Configuration Form, if found, or null if not supported.</returns>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.GetRoomConfigurationAsync(System.String,System.String,Waher.Networking.XMPP.IqResultEventHandlerAsync,System.Object)">
            <summary>
            Gets the configuration form for a room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="SubmissionCallback">Method to call when configuration has been submitted.</param>
            <param name="State">State object to pass on to callback method.</param>
            <returns>Configuration Form, if found, or null if not supported.</returns>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendGroupChatMessage(System.String,System.String,System.String)">
            <summary>
            Sends a simple group chat message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="Message">Message body.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendGroupChatMessage(System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple group chat message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="Message">Message body.</param>
            <param name="Language">Language</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendGroupChatMessage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple group chat message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="Message">Message body.</param>
            <param name="Language">Language</param>
            <param name="ThreadId">Thread ID</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendGroupChatMessage(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple group chat message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="Message">Message body.</param>
            <param name="Language">Language</param>
            <param name="ThreadId">Thread ID</param>
            <param name="ParentThreadId">Parent Thread ID</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendCustomGroupChatMessage(System.String,System.String,System.String)">
            <summary>
            Sends a simple group chat message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="Xml">Message body.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendCustomGroupChatMessage(System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple group chat message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="Xml">Message body.</param>
            <param name="Language">Language</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendCustomGroupChatMessage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple group chat message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="Xml">Message body.</param>
            <param name="Language">Language</param>
            <param name="ThreadId">Thread ID</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendCustomGroupChatMessage(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple group chat message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="Xml">Message body.</param>
            <param name="Language">Language</param>
            <param name="ThreadId">Thread ID</param>
            <param name="ParentThreadId">Parent Thread ID</param>
        </member>
        <member name="E:Waher.Networking.XMPP.MUC.MultiUserChatClient.RoomMessage">
            <summary>
            Event raised when a group chat message from a MUC room was received.
            </summary>
        </member>
        <member name="E:Waher.Networking.XMPP.MUC.MultiUserChatClient.RoomOccupantMessage">
            <summary>
            Event raised when a group chat message from a MUC room occupant was received.
            </summary>
        </member>
        <member name="E:Waher.Networking.XMPP.MUC.MultiUserChatClient.RoomSubject">
            <summary>
            Event raised when a room subject message was received.
            </summary>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.ChangeRoomSubject(System.String,System.String,System.String)">
            <summary>
            Sends a simple group chat message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="Subject">Room subject.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.ChangeRoomSubject(System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple group chat message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="Subject">Room subject.</param>
            <param name="Language">Language</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendPrivateMessage(System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple private message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="NickName">Nick-name of recipient.</param>
            <param name="Message">Message body.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendPrivateMessage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple private message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="NickName">Nick-name of recipient.</param>
            <param name="Message">Message body.</param>
            <param name="Language">Language</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendPrivateMessage(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple private message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="NickName">Nick-name of recipient.</param>
            <param name="Message">Message body.</param>
            <param name="Language">Language</param>
            <param name="ThreadId">Thread ID</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendPrivateMessage(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple private message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="NickName">Nick-name of recipient.</param>
            <param name="Message">Message body.</param>
            <param name="Language">Language</param>
            <param name="ThreadId">Thread ID</param>
            <param name="ParentThreadId">Parent Thread ID</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendCustomPrivateMessage(System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple private message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="NickName">Nick-name of recipient.</param>
            <param name="Xml">Message body.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendCustomPrivateMessage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple private message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="NickName">Nick-name of recipient.</param>
            <param name="Xml">Message body.</param>
            <param name="Language">Language</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendCustomPrivateMessage(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple private message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="NickName">Nick-name of recipient.</param>
            <param name="Xml">Message body.</param>
            <param name="Language">Language</param>
            <param name="ThreadId">Thread ID</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SendCustomPrivateMessage(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a simple private message to a chat room.
            
            Note: The client must be an occupant of the chat room before messages
            can be properly propagated to other occupants of the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="NickName">Nick-name of recipient.</param>
            <param name="Xml">Message body.</param>
            <param name="Language">Language</param>
            <param name="ThreadId">Thread ID</param>
            <param name="ParentThreadId">Parent Thread ID</param>
        </member>
        <member name="E:Waher.Networking.XMPP.MUC.MultiUserChatClient.PrivateMessageReceived">
            <summary>
            Event raised when a group chat message from a MUC room occupant was received.
            </summary>
        </member>
        <member name="E:Waher.Networking.XMPP.MUC.MultiUserChatClient.RoomInvitationReceived">
            <summary>
            Event raised when an invitation from a MUC room has been received.
            </summary>
        </member>
        <member name="E:Waher.Networking.XMPP.MUC.MultiUserChatClient.RoomDeclinedInvitationReceived">
            <summary>
            Event raised when an invitation from a MUC room has been declined.
            </summary>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.ChangeNickName(System.String,System.String,System.String,Waher.Networking.XMPP.MUC.UserPresenceEventHandlerAsync,System.Object)">
            <summary>
            Changes to a new nick-name.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="NickName">Nickname to use in the chat room.</param>
            <param name="Callback">Method to call when response is returned.</param>
            <param name="State">State object to pass on to callback method.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.ChangeNickNameAsync(System.String,System.String,System.String)">
            <summary>
            Changes to a new nick-name.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="NickName">Nickname to use in the chat room.</param>
            <returns>Room entry response.</returns>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SetPresence(System.String,System.String,System.String,Waher.Networking.XMPP.Availability,Waher.Networking.XMPP.PresenceEventHandlerAsync,System.Object)">
            <summary>
            Sets the presence of the occupant in a room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="NickName">Nickname of the occupant.</param>
            <param name="Availability">Occupant availability.</param>
            <param name="Callback">Method to call when stanza has been sent.</param>
            <param name="State">State object to pass on to callback method.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.SetPresenceAsync(System.String,System.String,System.String,Waher.Networking.XMPP.Availability)">
            <summary>
            Sets the presence of the occupant in a room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="NickName">Nickname of the occupant.</param>
            <param name="Availability">Occupant availability.</param>
            <returns>Task object that finishes when stanza has been sent.</returns>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.Invite(System.String,System.String,System.String)">
            <summary>
            Sends an invitation to the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="BareJid">Bare JID of entity to invite.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.Invite(System.String,System.String,System.String,System.String)">
            <summary>
            Sends an invitation to the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="BareJid">Bare JID of entity to invite.</param>
            <param name="Reason">Reason for sending the invitation.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.Invite(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends an invitation to the room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="BareJid">Bare JID of entity to invite.</param>
            <param name="Reason">Reason for sending the invitation.</param>
            <param name="Language">Language</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.DeclineInvitation(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Declines an invitation from a room.
            </summary>
            <param name="RoomId">Room ID</param>
            <param name="Domain">Domain hosting the room.</param>
            <param name="InviteFrom">Original invitation was sent from.</param>
            <param name="Reason">Reason for declining the invitation.</param>
            <param name="Language">Language</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.RegisterWithRoom(System.String,System.String,Waher.Networking.XMPP.MUC.RoomRegistrationEventHandler,System.Object)">
            <summary>
            Starts the registration process with a room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="Callback">Method to call when response has been returned.</param>
            <param name="State">State object to pass on to callback method.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.RegisterWithRoom(System.String,System.String,Waher.Networking.XMPP.MUC.RoomRegistrationEventHandler,Waher.Networking.XMPP.IqResultEventHandlerAsync,System.Object)">
            <summary>
            Starts the registration process with a room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="Callback">Method to call when response has been returned.</param>
            <param name="SubmissionCallback">Method to call when configuration has been submitted.</param>
            <param name="State">State object to pass on to callback method.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.RegisterWithRoomAsync(System.String,System.String)">
            <summary>
            Starts the registration process with a room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <returns>Room Registration response.</returns>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.RegisterWithRoomAsync(System.String,System.String,Waher.Networking.XMPP.IqResultEventHandlerAsync,System.Object)">
            <summary>
            Starts the registration process with a room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="SubmissionCallback">Method to call when configuration has been submitted.</param>
            <param name="State">State object to pass on to callback method.</param>
            <returns>Room Registration response.</returns>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.GetRoomInformation(System.String,System.String,Waher.Networking.XMPP.MUC.RoomInformationEventHandler,System.Object)">
            <summary>
            Gets information about a room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
            <param name="Callback">Method to call when response has been returned.</param>
            <param name="State">State object to pass on to callback method.</param>
        </member>
        <member name="M:Waher.Networking.XMPP.MUC.MultiUserChatClient.GetRoomInformationAsync(System.String,System.String)">
            <summary>
            Gets information about a room.
            </summary>
            <param name="RoomId">Room ID.</param>
            <param name="Domain">Domain of service hosting the room.</param>
        </member>
    </members>
</doc>
