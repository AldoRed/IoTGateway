<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Waher.Persistence.FilesLW</name>
    </assembly>
    <members>
        <member name="T:Waher.Persistence.Files.Bookmark">
            <summary>
            Bookmark
            </summary>
        </member>
        <member name="T:Waher.Persistence.Files.CursorEnumerator`1">
            <summary>
            Cursor enumerator
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.CursorEnumerator`1.#ctor(Waher.Persistence.Files.ICursor{`0},System.Int32)">
            <summary>
            Cursor enumerator
            </summary>
            <param name="Cursor">Cursor.</param>
            <param name="TimeoutMilliseconds">Time to wait to get access to underlying database.</param>
        </member>
        <member name="P:Waher.Persistence.Files.CursorEnumerator`1.Current">
            <summary>
            The current element in the collection.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.CursorEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            The current element in the collection.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.CursorEnumerator`1.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.CursorEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.CursorEnumerator`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="T:Waher.Persistence.Files.EmbeddedObjectSetter">
            <summary>
            Delegate for embedded object value setter methods. Is used when loading embedded objects.
            </summary>
            <param name="EmbeddedObject">Embedded object.</param>
        </member>
        <member name="T:Waher.Persistence.Files.CustomKeyHandler">
            <summary>
            Delegate for custom key callback methods.
            </summary>
            <param name="FileName">Name of file.</param>
            <param name="Key">Key to use</param>
            <param name="IV">Initiation vector to use</param>
        </member>
        <member name="T:Waher.Persistence.Files.RegenerationOptions">
            <summary>
            Index regeneration options.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.RegenerationOptions.DontRegenerate">
            <summary>
            Don't regenerate index.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.RegenerationOptions.RegenerateIfFileNotFound">
            <summary>
            Regenerate index if index file not found.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.RegenerationOptions.RegenerateIfIndexNotInstantiated">
            <summary>
            Regenerate index if index object not instantiated.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.RegenerationOptions.Regenerate">
            <summary>
            Regenerate file.
            </summary>
        </member>
        <member name="T:Waher.Persistence.Files.FilesProvider">
            <summary>
            Persists objects into binary files.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Text.Encoding,System.Int32)">
            <summary>
            Persists objects into binary files.
            </summary>
            <param name="Folder">Folder to store data files.</param>
            <param name="DefaultCollectionName">Default collection name.</param>
            <param name="BlockSize">Size of a block in the B-tree. The size must be a power of two, and should be at least the same
            size as a sector on the storage device. Smaller block sizes (2, 4 kB) are suitable for online transaction processing, where
            a lot of updates to the database occurs. Larger block sizes (8, 16, 32 kB) are suitable for decision support systems.
            The block sizes also limit the size of objects stored directly in the file. Objects larger than
            <see cref="P:Waher.Persistence.Files.ObjectBTreeFile.InlineObjectSizeLimit"/> bytes will be stored as BLOBs.</param>
            <param name="BlocksInCache">Maximum number of blocks in in-memory cache. This cache is used by all files governed by the
            database provider. The cache does not contain BLOB blocks.</param>
            <param name="BlobBlockSize">Size of a block in the BLOB file. The size must be a power of two. The BLOB file will consist
            of a doubly linked list of blocks of this size.</param>
            <param name="Encoding">Encoding to use for text properties.</param>
            <param name="TimeoutMilliseconds">Timeout, in milliseconds, to wait for access to the database layer.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Text.Encoding,System.Int32,System.Boolean)">
            <summary>
            Persists objects into binary files.
            </summary>
            <param name="Folder">Folder to store data files.</param>
            <param name="DefaultCollectionName">Default collection name.</param>
            <param name="BlockSize">Size of a block in the B-tree. The size must be a power of two, and should be at least the same
            size as a sector on the storage device. Smaller block sizes (2, 4 kB) are suitable for online transaction processing, where
            a lot of updates to the database occurs. Larger block sizes (8, 16, 32 kB) are suitable for decision support systems.
            The block sizes also limit the size of objects stored directly in the file. Objects larger than
            <see cref="P:Waher.Persistence.Files.ObjectBTreeFile.InlineObjectSizeLimit"/> bytes will be stored as BLOBs.</param>
            <param name="BlocksInCache">Maximum number of blocks in in-memory cache. This cache is used by all files governed by the
            database provider. The cache does not contain BLOB blocks.</param>
            <param name="BlobBlockSize">Size of a block in the BLOB file. The size must be a power of two. The BLOB file will consist
            of a doubly linked list of blocks of this size.</param>
            <param name="Encoding">Encoding to use for text properties.</param>
            <param name="TimeoutMilliseconds">Timeout, in milliseconds, to wait for access to the database layer.</param>
            <param name="Debug">If the provider is run in debug mode.</param>
        </member>
        <member name="P:Waher.Persistence.Files.FilesProvider.DefaultCollectionName">
            <summary>
            Default collection name.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.FilesProvider.Folder">
            <summary>
            Base folder of where files will be stored.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.FilesProvider.Id">
            <summary>
            An ID of the files provider. It's unique, and constant during the life-time of the FilesProvider class.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.FilesProvider.BlockSize">
            <summary>
            Size of a block in the B-tree. The size must be a power of two, and should be at least the same
            size as a sector on the storage device. Smaller block sizes (2, 4 kB) are suitable for online transaction processing, where
            a lot of updates to the database occurs. Larger block sizes (8, 16, 32 kB) are suitable for decision support systems.
            The block sizes also limit the size of objects stored directly in the file. Objects larger than
            <see cref="P:Waher.Persistence.Files.ObjectBTreeFile.InlineObjectSizeLimit"/> will be persisted as BLOBs, with the bulk of the object stored as separate files. 
            Smallest block size = 1024, largest block size = 65536.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.FilesProvider.BlobBlockSize">
            <summary>
            Size of a block in the BLOB file. The size must be a power of two. The BLOB file will consist
            of a doubly linked list of blocks of this size.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.FilesProvider.Encoding">
            <summary>
            Encoding to use for text properties.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.FilesProvider.TimeoutMilliseconds">
            <summary>
            Timeout, in milliseconds, for database operations.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.FilesProvider.Debug">
            <summary>
            If the provider is run in debug mode.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetFieldDataTypeName(System.UInt32)">
            <summary>
            Returns the type name corresponding to a given field data type code.
            </summary>
            <param name="FieldDataType">Field data type code.</param>
            <returns>Corresponding data type name.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetFieldDataType(System.UInt32)">
            <summary>
            Returns the type corresponding to a given field data type code.
            </summary>
            <param name="FieldDataTypeCode">Field data type code.</param>
            <returns>Corresponding data type.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetFieldDataTypeCode(System.Object)">
            <summary>
            Returns the type code corresponding to a given field data type.
            </summary>
            <param name="Value">Field data value.</param>
            <returns>Corresponding data type code.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetFieldDataTypeCode(System.Type)">
            <summary>
            Returns the type code corresponding to a given field data type.
            </summary>
            <param name="FieldDataType">Field data type.</param>
            <returns>Corresponding data type code.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetObjectSerializer(System.Type)">
            <summary>
            Gets the object serializer corresponding to a specific type.
            </summary>
            <param name="Type">Type of object to serialize.</param>
            <returns>Object Serializer</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetObjectSerializerEx(System.Object)">
            <summary>
            Gets the object serializer corresponding to a specific object.
            </summary>
            <param name="Object">Object to serialize</param>
            <returns>Object Serializer</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetObjectSerializerEx(System.Type)">
            <summary>
            Gets the object serializer corresponding to a specific object.
            </summary>
            <param name="Type">Type of object to serialize.</param>
            <returns>Object Serializer</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetFieldCode(System.String,System.String)">
            <summary>
            Gets the code for a specific field in a collection.
            </summary>
            <param name="Collection">Name of collection.</param>
            <param name="FieldName">Name of field.</param>
            <returns>Field code.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetFieldCodeAsync(System.String,System.String)">
            <summary>
            Gets the code for a specific field in a collection.
            </summary>
            <param name="Collection">Name of collection.</param>
            <param name="FieldName">Name of field.</param>
            <returns>Field code.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetFieldName(System.String,System.UInt64)">
            <summary>
            Gets the name of a field in a collection, given its code.
            </summary>
            <param name="Collection">Name of collection.</param>
            <param name="FieldCode">Field code.</param>
            <returns>Field name.</returns>
            <exception cref="T:System.ArgumentException">If the collection or field code are not known.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetFieldNameAsync(System.String,System.UInt64)">
            <summary>
            Gets the name of a field in a collection, given its code.
            </summary>
            <param name="Collection">Name of collection.</param>
            <param name="FieldCode">Field code.</param>
            <returns>Field name.</returns>
            <exception cref="T:System.ArgumentException">If the collection or field code are not known.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.RemoveBlocks(System.Int32)">
            <summary>
            Removes all blocks pertaining to a specific file.
            </summary>
            <param name="FileId">Internal file ID.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.RemoveBlock(System.Int32,System.UInt32)">
            <summary>
            Removes a particular block from the cache.
            </summary>
            <param name="FileId">Internal file ID.</param>
            <param name="BlockIndex">Block index.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetBlockKey(System.Int32,System.UInt32)">
            <summary>
            Calculates a block key value.
            </summary>
            <param name="FileId">Internal file ID.</param>
            <param name="BlockIndex">Block index.</param>
            <returns>Key value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.TryGetBlock(System.Int32,System.UInt32,System.Byte[]@)">
            <summary>
            Tries to get a cached block.
            </summary>
            <param name="FileId">Internal file ID.</param>
            <param name="BlockIndex">Block index.</param>
            <param name="Block">Cached block, if found.</param>
            <returns>If block was found in cache.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.AddBlockToCache(System.Int32,System.UInt32,System.Byte[])">
            <summary>
            Adds a block to the cache.
            </summary>
            <param name="FileId">Internal file ID.</param>
            <param name="BlockIndex">Block index.</param>
            <param name="Block">Block.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.StartBulk">
            <summary>
            Starts bulk-proccessing of data. Must be followed by a call to <see cref="M:Waher.Persistence.Files.FilesProvider.EndBulk"/>.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.EndBulk">
            <summary>
            Ends bulk-processing of data. Must be called once for every call to <see cref="M:Waher.Persistence.Files.FilesProvider.StartBulk"/>.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetNewFileId">
            <summary>
            Gets a new file ID.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetFile(System.String)">
            <summary>
            Gets the BTree file corresponding to a named collection.
            </summary>
            <param name="CollectionName">Name of collection.</param>
            <returns>BTree file corresponding to the given collection.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetFile(System.String,System.Boolean)">
            <summary>
            Gets the BTree file corresponding to a named collection.
            </summary>
            <param name="CollectionName">Name of collection.</param>
            <param name="CreateIfNotExists">If the physical file should be created if one does not already exist.</param>
            <returns>BTree file corresponding to the given collection. 
            If file did not exist, and <paramref name="CreateIfNotExists"/> is false, null is returned.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.TryGetNamesFile(System.String,Waher.Persistence.Files.StringDictionary@)">
            <summary>
            Tries to get the names dictionary for a given collection.
            </summary>
            <param name="CollectionName">Collection name.</param>
            <param name="Names">Names dictionary, if found.</param>
            <returns>If a names dictionary was found for the given collection.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetIndexFile(Waher.Persistence.Files.ObjectBTreeFile,Waher.Persistence.Files.RegenerationOptions,System.String[])">
            <summary>
            Gets an index file.
            </summary>
            <param name="File">Object file.</param>
            <param name="RegenerationOptions">Index regeneration options.</param>
            <param name="FieldNames">Field names to build the index on. By default, sort order is ascending.
            If descending sort order is desired, prefix the corresponding field name by a hyphen (minus) sign.</param>
            <returns>Index file.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.CloseFile(System.String)">
            <summary>
            Closes files related to a collection.
            </summary>
            <param name="CollectionName">Collection.</param>
            <returns>If a collection with the given name was found and closed.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetFileName(System.String)">
            <summary>
            Gets the file name root that corresponds to a given collection.
            </summary>
            <param name="CollectionName">Collection name.</param>
            <returns>File name root.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.LoadConfiguration">
            <summary>
            Loads the configuration from the master file.
            </summary>
            <returns>Task object</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.LoadObject``1(System.Object)">
            <summary>
            Loads an object given its Object ID <paramref name="ObjectId"/> and its base type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Base type.</typeparam>
            <param name="ObjectId">Object ID</param>
            <returns>Loaded object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.LoadObject``1(System.Guid)">
            <summary>
            Loads an object given its Object ID <paramref name="ObjectId"/> and its base type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Base type.</typeparam>
            <param name="ObjectId">Object ID</param>
            <returns>Loaded object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.LoadObject``1(System.Guid,Waher.Persistence.Files.EmbeddedObjectSetter)">
            <summary>
            Loads an object given its Object ID <paramref name="ObjectId"/> and its base type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Base type.</typeparam>
            <param name="ObjectId">Object ID</param>
            <param name="EmbeddedSetter">Setter method, used to set an embedded property during delayed loading.</param>
            <returns>Loaded object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.LoadObject(System.Type,System.Guid,Waher.Persistence.Files.EmbeddedObjectSetter)">
            <summary>
            Loads an object given its Object ID <paramref name="ObjectId"/> and its base type <paramref name="T"/>.
            </summary>
            <param name="T">Base type.</param>
            <param name="ObjectId">Object ID</param>
            <param name="EmbeddedSetter">Setter method, used to set an embedded property during delayed loading.</param>
            <returns>Loaded object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.GetObjectId(System.Object,System.Boolean)">
            <summary>
            Gets the Object ID for a given object.
            </summary>
            <param name="Value">Object reference.</param>
            <param name="InsertIfNotFound">Insert object into database with new Object ID, if no Object ID is set.</param>
            <returns>Object ID for <paramref name="Value"/>.</returns>
            <exception cref="T:System.NotSupportedException">Thrown, if the corresponding class does not have an Object ID property, 
            or if the corresponding property type is not supported.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Insert(System.Object)">
            <summary>
            Inserts an object into the database.
            </summary>
            <param name="Object">Object to insert.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Insert(System.Object[])">
            <summary>
            Inserts a collection of objects into the database.
            </summary>
            <param name="Objects">Objects to insert.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Insert(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Inserts a collection of objects into the database.
            </summary>
            <param name="Objects">Objects to insert.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Find``1(System.Int32,System.Int32,System.String[])">
            <summary>
            Finds objects of a given class <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
            <param name="Offset">Result offset.</param>
            <param name="MaxCount">Maximum number of objects to return.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>Objects found.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Find``1(System.Int32,System.Int32,Waher.Persistence.Filters.Filter,System.String[])">
            <summary>
            Finds objects of a given class <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
            <param name="Offset">Result offset.</param>
            <param name="MaxCount">Maximum number of objects to return.</param>
            <param name="Filter">Optional filter. Can be null.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>Objects found.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Update(System.Object)">
            <summary>
            Updates an object in the database.
            </summary>
            <param name="Object">Object to insert.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Update(System.Object[])">
            <summary>
            Updates a collection of objects in the database.
            </summary>
            <param name="Objects">Objects to insert.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Update(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Updates a collection of objects in the database.
            </summary>
            <param name="Objects">Objects to insert.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Delete(System.Object)">
            <summary>
            Deletes an object in the database.
            </summary>
            <param name="Object">Object to insert.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Delete(System.Object[])">
            <summary>
            Deletes a collection of objects in the database.
            </summary>
            <param name="Objects">Objects to insert.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Delete(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Deletes a collection of objects in the database.
            </summary>
            <param name="Objects">Objects to insert.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.ExportXml(System.Boolean)">
            <summary>
            Exports the database to XML.
            </summary>
            <param name="Properties">If object properties should be exported as well.</param>
            <returns>Graph XML.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.ExportXml(System.Text.StringBuilder,System.Boolean)">
            <summary>
            Exports the database to XML.
            </summary>
            <param name="Output">XML Output</param>
            <param name="Properties">If object properties should be exported as well.</param>
            <returns>Asynchronous task object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.ExportXml(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Exports the database to XML.
            </summary>
            <param name="Output">XML Output.</param>
            <param name="Properties">If object properties should be exported as well.</param>
            <returns>Asynhronous task object.</returns>
        </member>
        <member name="P:Waher.Persistence.Files.FilesProvider.Files">
            <summary>
            Available Object files.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Export(Waher.Persistence.Serialization.IDatabaseExport)">
            <summary>
            Performs an export of the entire database.
            </summary>
            <param name="Output">Database will be output to this interface.</param>
            <returns>Task object for synchronization purposes.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Clear(System.String)">
            <summary>
            Clears a collection of all objects.
            </summary>
            <param name="CollectionName">Name of collection to clear.</param>
            <returns>Task object for synchronization purposes.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Analyze(System.Xml.XmlWriter,System.String,System.String,System.Boolean)">
            <summary>
            Analyzes the database and exports findings to XML.
            </summary>
            <param name="Output">XML Output.</param>
            <param name="XsltPath">Optional XSLT to use to view the output.</param>
            <param name="ProgramDataFolder">Program data folder. Can be removed from filenames used, when referencing them in the report.</param>
            <param name="ExportData">If data in database is to be exported in output.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Repair(System.Xml.XmlWriter,System.String,System.String,System.Boolean)">
            <summary>
            Analyzes the database and repairs it if necessary. Results are exported to XML.
            </summary>
            <param name="Output">XML Output.</param>
            <param name="XsltPath">Optional XSLT to use to view the output.</param>
            <param name="ProgramDataFolder">Program data folder. Can be removed from filenames used, when referencing them in the report.</param>
            <param name="ExportData">If data in database is to be exported in output.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Analyze(System.Xml.XmlWriter,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Analyzes the database and exports findings to XML.
            </summary>
            <param name="Output">XML Output.</param>
            <param name="XsltPath">Optional XSLT to use to view the output.</param>
            <param name="ProgramDataFolder">Program data folder. Can be removed from filenames used, when referencing them in the report.</param>
            <param name="ExportData">If data in database is to be exported in output.</param>
            <param name="Repair">If files should be repaired if corruptions are detected.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.RepairIfInproperShutdown(System.String)">
            <summary>
            Checks if the database needs repairing. This is done by checking the last start and stop timetamps to detect
            inproper shutdowns.
            </summary>
            <param name="XsltPath">Path to optional XSLT file for the resulting report.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.AddIndex(System.String,System.String[])">
            <summary>
            Adds an index to a collection, if one does not already exist.
            </summary>
            <param name="CollectionName">Name of collection.</param>
            <param name="FieldNames">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Start">
            <summary>
            Called when processing starts.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Stop">
            <summary>
            Called when processing ends.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.FilesProvider.Flush">
            <summary>
            Persists any pending changes.
            </summary>
        </member>
        <member name="T:Waher.Persistence.Files.ICursor`1">
            <summary>
            Interface for typed cursors.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Waher.Persistence.Files.ICursor`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.ICursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.ICursor`1.CurrentTypeCompatible">
            <summary>
            If the curent object is type compatible with <typeparamref name="T"/> or not. If not compatible, <see cref="P:Waher.Persistence.Files.ICursor`1.Current"/> 
            will be null, even if there exists an object at the current position.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ICursor`1.CurrentSerializer">
            <summary>
            Serializer used to deserialize <see cref="P:Waher.Persistence.Files.ICursor`1.Current"/>.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ICursor`1.CurrentObjectId">
            <summary>
            Gets the Object ID of the current object.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.ICursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ICursor`1.MoveNextAsync">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ICursor`1.MovePreviousAsync">
            <summary>
            Advances the enumerator to the previous element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the previous element; false if
            the enumerator has passed the beginning of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ICursor`1.SameSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering corresponds to a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ICursor`1.ReverseSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering is a reversion of a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="T:Waher.Persistence.Files.IndexBTreeFile">
            <summary>
            This class manages an index file to a <see cref="T:Waher.Persistence.Files.ObjectBTreeFile"/>.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.#ctor(System.String,Waher.Persistence.Files.ObjectBTreeFile,Waher.Persistence.Files.FilesProvider,System.String[])">
            <summary>
            This class manages an index file to a <see cref="T:Waher.Persistence.Files.ObjectBTreeFile"/>.
            </summary>
            <param name="FileName">File name of index file.</param>
            <param name="ObjectFile">Object file storing actual objects.</param>
            <param name="Provider">Files provider.</param>
            <param name="FieldNames">Field names to build the index on. By default, sort order is ascending.
            If descending sort order is desired, prefix the corresponding field name by a hyphen (minus) sign.</param>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.IndexBTreeFile.ObjectFile">
            <summary>
            Object file.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.IndexBTreeFile.IndexFile">
            <summary>
            Index file.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.IndexBTreeFile.CollectionName">
            <summary>
            Name of corresponding collection name.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.IndexBTreeFile.Encoding">
            <summary>
            Encoding to use for text properties.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.IndexBTreeFile.FieldNames">
            <summary>
            Field names included in the index.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.IndexBTreeFile.Ascending">
            <summary>
            If the corresponding field name is sorted in ascending order (true) or descending order (false).
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.SameSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering corresponds to a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.ReverseSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering is a reversion of a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.SaveNewObject(System.Guid,System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer)">
            <summary>
            Saves a new object to the file.
            </summary>
            <param name="ObjectId">Object ID</param>
            <param name="Object">Object to persist.</param>
            <param name="Serializer">Object serializer.</param>
            <returns>If the object was saved in the index (true), or if the index property values of the object did not exist, or were too big to fit in an index record.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.SaveNewObjects(System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Object},Waher.Persistence.Files.Serialization.IObjectSerializer)">
            <summary>
            Saves a new set of objects to the file.
            </summary>
            <param name="ObjectIds">Object IDs</param>
            <param name="Objects">Objects to persist.</param>
            <param name="Serializer">Object serializer.</param>
            <returns>If the object was saved in the index (true), or if the index property values of the object did not exist, or were too big to fit in an index record.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.DeleteObject(System.Guid,System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer)">
            <summary>
            Deletes an object from the file.
            </summary>
            <param name="ObjectId">Object ID</param>
            <param name="Object">Object to delete.</param>
            <param name="Serializer">Object serializer.</param>
            <returns>If the object was deleted from the index (true), or if the object did not exist in the index.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.DeleteObjects(System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Object},Waher.Persistence.Files.Serialization.IObjectSerializer)">
            <summary>
            Deletes a set of objects from the file.
            </summary>
            <param name="ObjectIds">Object IDs</param>
            <param name="Objects">Objects to delete.</param>
            <param name="Serializer">Object serializer.</param>
            <returns>If the object was deleted from the index (true), or if the object did not exist in the index.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.UpdateObject(System.Guid,System.Object,System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer)">
            <summary>
            Updates an object in the file.
            </summary>
            <param name="ObjectId">Object ID</param>
            <param name="OldObject">Object that is being changed.</param>
            <param name="NewObject">New version of object.</param>
            <param name="Serializer">Object serializer.</param>
            <returns>If the object was saved in the index (true), or if the index property values of the object did not exist, or were too big to fit in an index record.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.UpdateObjects(System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object},Waher.Persistence.Files.Serialization.IObjectSerializer)">
            <summary>
            Updates a series of objects in the file.
            </summary>
            <param name="ObjectIds">Object IDs</param>
            <param name="OldObjects">Objects that are being changed.</param>
            <param name="NewObjects">New versions of objects.</param>
            <param name="Serializer">Object serializer.</param>
            <returns>If the object was saved in the index (true), or if the index property values of the object did not exist, or were too big to fit in an index record.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.ClearAsync">
            <summary>
            Clears the database of all objects.
            </summary>
            <returns>Task object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.GetEnumerator">
            <summary>
            Returns an untyped enumerator that iterates through the collection in the order specified by the index.
            
            For a typed enumerator, call the <see cref="M:Waher.Persistence.Files.IndexBTreeFile.GetTypedEnumerator``1(System.Boolean)"/> method.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an untyped enumerator that iterates through the collection in the order specified by the index.
            
            For a typed enumerator, call the <see cref="M:Waher.Persistence.Files.IndexBTreeFile.GetTypedEnumerator``1(System.Boolean)"/> method.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.GetTypedEnumerator``1(System.Boolean)">
            <summary>
            Returns an typed enumerator that iterates through the collection in the order specified by the index. The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.
            </summary>
            <param name="Locked">If locked access to the file is requested.
            
            If unlocked access is desired, any change to the database will invalidate the enumerator, and further access to the
            enumerator will cause an <see cref="T:System.InvalidOperationException"/> to be thrown.
            
            If locked access is desired, the database cannot be updated, until the enumerator has been dispose. Make sure to call
            the <see cref="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.Dispose"/> method when done with the enumerator, to release the database
            after use.</param>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.GetRank(System.Guid)">
            <summary>
            Calculates the rank of an object in the database, given its Object ID.
            </summary>
            <param name="ObjectId">Object ID</param>
            <returns>Rank of object in database.</returns>
            <exception cref="T:System.IO.IOException">If the object is not found.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.Regenerate">
            <summary>
            Regenerates the index.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.FindFirstGreaterOrEqualTo``1(System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Searches for the first object that is greater than or equal to a hypothetical limit object.
            </summary>
            <typeparam name="T">The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.</typeparam>
            <param name="Properties">Limit properties to search for.</param>
            <returns>Enumerator that can be used to enumerate objects in index order. First object will be the first
            object that is greater than or equal to the limit object. If null is returned, the search operation could
            not be performed.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.FindFirstGreaterOrEqualTo``1(System.Boolean,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Searches for the first object that is greater than or equal to a hypothetical limit object.
            </summary>
            <typeparam name="T">The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.</typeparam>
            <param name="Locked">If the resulting enumerator should be opened in locked mode or not.</param>
            <param name="Properties">Limit properties to search for.</param>
            <returns>Enumerator that can be used to enumerate objects in index order. First object will be the first
            object that is greater than or equal to the limit object. If null is returned, the search operation could
            not be performed.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.FindFirstGreaterOrEqualTo``1(System.Boolean,Waher.Persistence.Serialization.GenericObject)">
            <summary>
            Searches for the first object that is greater than or equal to a hypothetical limit object.
            </summary>
            <typeparam name="T">The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.</typeparam>
            <param name="Locked">If the resulting enumerator should be opened in locked mode or not.</param>
            <param name="Object">Limit object to search for.</param>
            <returns>Enumerator that can be used to enumerate objects in index order. First object will be the first
            object that is greater than or equal to the limit object. If null is returned, the search operation could
            not be performed.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.FindLastLesserOrEqualTo``1(System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Searches for the first object that is lasser than or equal to a hypothetical limit object.
            </summary>
            <typeparam name="T">The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.</typeparam>
            <param name="Properties">Limit properties to search for.</param>
            <returns>Enumerator that can be used to enumerate objects in index order. First object will be the first
            object that is lesser than or equal to the limit object. If null is returned, the search operation could
            not be performed.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.FindLastLesserOrEqualTo``1(System.Boolean,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Searches for the first object that is lasser than or equal to a hypothetical limit object.
            </summary>
            <typeparam name="T">The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.</typeparam>
            <param name="Locked">If the resulting enumerator should be opened in locked mode or not.</param>
            <param name="Properties">Limit properties to search for.</param>
            <returns>Enumerator that can be used to enumerate objects in index order. First object will be the first
            object that is lesser than or equal to the limit object. If null is returned, the search operation could
            not be performed.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.FindLastLesserOrEqualTo``1(System.Boolean,Waher.Persistence.Serialization.GenericObject)">
            <summary>
            Searches for the first object that is lasser than or equal to a hypothetical limit object.
            </summary>
            <typeparam name="T">The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.</typeparam>
            <param name="Locked">If the resulting enumerator should be opened in locked mode or not.</param>
            <param name="Object">Limit object to search for.</param>
            <returns>Enumerator that can be used to enumerate objects in index order. First object will be the first
            object that is lesser than or equal to the limit object. If null is returned, the search operation could
            not be performed.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.FindFirstGreaterThan``1(System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Searches for the first object that is greater than a hypothetical limit object.
            </summary>
            <typeparam name="T">The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.</typeparam>
            <param name="Properties">Limit properties to search for.</param>
            <returns>Enumerator that can be used to enumerate objects in index order. First object will be the first
            object that is greater than the limit object. If null is returned, the search operation could
            not be performed.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.FindFirstGreaterThan``1(System.Boolean,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Searches for the first object that is greater than a hypothetical limit object.
            </summary>
            <typeparam name="T">The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.</typeparam>
            <param name="Locked">If the resulting enumerator should be opened in locked mode or not.</param>
            <param name="Properties">Limit properties to search for.</param>
            <returns>Enumerator that can be used to enumerate objects in index order. First object will be the first
            object that is greater than the limit object. If null is returned, the search operation could
            not be performed.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.FindFirstGreaterThan``1(System.Boolean,Waher.Persistence.Serialization.GenericObject)">
            <summary>
            Searches for the first object that is greater than a hypothetical limit object.
            </summary>
            <typeparam name="T">The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.</typeparam>
            <param name="Locked">If the resulting enumerator should be opened in locked mode or not.</param>
            <param name="Object">Limit object to search for.</param>
            <returns>Enumerator that can be used to enumerate objects in index order. First object will be the first
            object that is greater than the limit object. If null is returned, the search operation could
            not be performed.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.FindLastLesserThan``1(System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Searches for the first object that is lasser than a hypothetical limit object.
            </summary>
            <typeparam name="T">The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.</typeparam>
            <param name="Properties">Limit properties to search for.</param>
            <returns>Enumerator that can be used to enumerate objects in index order. First object will be the first
            object that is lesser than the limit object. If null is returned, the search operation could
            not be performed.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.FindLastLesserThan``1(System.Boolean,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Searches for the first object that is lasser than a hypothetical limit object.
            </summary>
            <typeparam name="T">The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.</typeparam>
            <param name="Locked">If the resulting enumerator should be opened in locked mode or not.</param>
            <param name="Properties">Limit properties to search for.</param>
            <returns>Enumerator that can be used to enumerate objects in index order. First object will be the first
            object that is lesser than the limit object. If null is returned, the search operation could
            not be performed.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.FindLastLesserThan``1(System.Boolean,Waher.Persistence.Serialization.GenericObject)">
            <summary>
            Searches for the first object that is lasser than a hypothetical limit object.
            </summary>
            <typeparam name="T">The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.</typeparam>
            <param name="Locked">If the resulting enumerator should be opened in locked mode or not.</param>
            <param name="Object">Limit object to search for.</param>
            <returns>Enumerator that can be used to enumerate objects in index order. First object will be the first
            object that is lesser than the limit object. If null is returned, the search operation could
            not be performed.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFile.ComputeStatistics(System.Collections.Generic.Dictionary{System.Guid,System.Boolean})">
            <summary>
            Goes through the entire file and computes statistics abouts its composition.
            </summary>
            <param name="ExistingIds">Object ID available in master file.</param>
            <returns>File statistics.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.IndexBTreeFileEnumerator`1">
            <summary>
            Enumerates object in a <see cref="T:Waher.Persistence.Files.ObjectBTreeFile"/> in GUID order. You can use the enumerator to enumerate objects
            forwards and backwards, as well as skip a given number of objects.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.LockRead">
            <summary>
            Locks the underlying file (if not locked).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.DisposeAsync">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.MoveNext"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.MoveNext"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.CurrentTypeCompatible">
            <summary>
            If the curent object is type compatible with <typeparamref name="T"/> or not. If not compatible, <see cref="P:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.Current"/> 
            will be null, even if there exists an object at the current position.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.CurrentObjectId">
            <summary>
            Gets the Object ID of the current object.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.MoveNext"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.CurrentRank">
            <summary>
            Gets the rank of the current object.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.CurrentSerializer">
            <summary>
            Serializer used to deserialize <see cref="P:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.Current"/>.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.GetCurrentRank">
            <summary>
            Gets the rank of the current object.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.MoveNextAsync">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.GoToFirst">
            <summary>
            Goes to the first object.
            </summary>
            <returns>If a first object was found.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.MovePrevious">
            <summary>
            Advances the enumerator to the previous element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the previous element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.MovePreviousAsync">
            <summary>
            Advances the enumerator to the previous element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the previous element; false if
            the enumerator has passed the beginning of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.GoToLast">
            <summary>
            Goes to the last object.
            </summary>
            <returns>If a last object was found.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.GoToObject(System.UInt64)">
            <summary>
            Finds the object given its order in the underlying database.
            </summary>
            <param name="ObjectIndex">Order of object in database.</param>
            <returns>If the corresponding object was found. If so, the <see cref="P:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.Current"/> property will contain the corresponding
            object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.Reset">
            <summary>
            <see cref="M:System.Collections.IEnumerator.Reset"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.Reset(Waher.Persistence.Files.Bookmark)">
            <summary>
            Resets the enumerator, and sets the starting point to a given starting point.
            </summary>
            <param name="StartingPoint">Starting point to start enumeration.</param>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.Skip(System.Int64)">
            <summary>
            Skips a certain number of objects forward (positive <paramref name="NrObjects"/>) or backward (negative <paramref name="NrObjects"/>).
            </summary>
            <param name="NrObjects">Number of objects to skip forward (positive) or backward (negative).</param>
            <returns>If the skip operation was successful and a new object is available in <see cref="P:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.Current"/>.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.GetBookmark">
            <summary>
            Gets a bookmark for the current position. You can set the current position of the enumerator, calling the
            <see cref="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.Reset(Waher.Persistence.Files.Bookmark)"/> method.
            </summary>
            <returns>Bookmark</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.GetEnumerator">
            <summary>
            <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.SameSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering corresponds to a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.IndexBTreeFileEnumerator`1.ReverseSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering is a reversion of a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="T:Waher.Persistence.Files.ObjectBTreeFile">
            <summary>
            This class manages a binary file where objects are persisted in a B-tree.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,Waher.Persistence.Files.FilesProvider,System.Text.Encoding,System.Int32,System.Boolean)">
            <summary>
            This class manages a binary file where objects are persisted in a B-tree.
            </summary>
            <param name="FileName">Name of binary file. File will be created if it does not exist. The class will require
            unique read/write access to the file.</param>
            <param name="CollectionName">Name of collection corresponding to the file.</param>
            <param name="BlobFileName">Name of file in which BLOBs are stored.</param>
            <param name="BlockSize">Size of a block in the B-tree. The size must be a power of two, and should be at least the same
            size as a sector on the storage device. Smaller block sizes (2, 4 kB) are suitable for online transaction processing, where
            a lot of updates to the database occurs. Larger block sizes (8, 16, 32 kB) are suitable for decision support systems.
            The block sizes also limit the size of objects stored directly in the file. Objects larger than
            <see cref="P:Waher.Persistence.Files.ObjectBTreeFile.InlineObjectSizeLimit"/> bytes will be stored as BLOBs.</param>
            <param name="BlobBlockSize">Size of a block in the BLOB file. The size must be a power of two. The BLOB file will consist
            of a doubly linked list of blocks of this size.</param>
            <param name="Provider">Reference to the files provider.</param>
            <param name="Encoding">Encoding to use for text properties.</param>
            <param name="TimeoutMilliseconds">Timeout, in milliseconds, to wait for access to the database layer.</param>
            <param name="Debug">If the provider is run in debug mode.</param>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,Waher.Persistence.Files.FilesProvider,System.Text.Encoding,System.Int32,System.Boolean,Waher.Persistence.Files.Storage.IRecordHandler)">
            <summary>
            This class manages a binary file where objects are persisted in a B-tree.
            </summary>
            <param name="FileName">Name of binary file. File will be created if it does not exist. The class will require
            unique read/write access to the file.</param>
            <param name="CollectionName">Name of collection corresponding to the file.</param>
            <param name="BlobFileName">Name of file in which BLOBs are stored.</param>
            <param name="BlockSize">Size of a block in the B-tree. The size must be a power of two, and should be at least the same
            size as a sector on the storage device. Smaller block sizes (2, 4 kB) are suitable for online transaction processing, where
            a lot of updates to the database occurs. Larger block sizes (8, 16, 32 kB) are suitable for decision support systems.
            The block sizes also limit the size of objects stored directly in the file. Objects larger than
            <see cref="P:Waher.Persistence.Files.ObjectBTreeFile.InlineObjectSizeLimit"/> bytes will be stored as BLOBs.</param>
            <param name="BlobBlockSize">Size of a block in the BLOB file. The size must be a power of two. The BLOB file will consist
            of a doubly linked list of blocks of this size.</param>
            <param name="Provider">Reference to the files provider.</param>
            <param name="Encoding">Encoding to use for text properties.</param>
            <param name="TimeoutMilliseconds">Timeout, in milliseconds, to wait for access to the database layer.</param>
            <param name="Debug">If the provider is run in debug mode.</param>
            <param name="RecordHandler">Record handler to use.</param>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.Id">
            <summary>
            Identifier of the file.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.Provider">
            <summary>
            Reference to files provider.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.FileName">
            <summary>
            Name of binary file.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.CollectionName">
            <summary>
            Name of corresponding collection name.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.BlobFileName">
            <summary>
            Name of file in which BLOBs are stored.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.Encoding">
            <summary>
            Encoding to use for text properties.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.BlockSize">
            <summary>
            Size of a block in the B-tree. The size must be a power of two, and should be at least the same
            size as a sector on the storage device. Smaller block sizes (2, 4 kB) are suitable for online transaction processing, where
            a lot of updates to the database occurs. Larger block sizes (8, 16, 32 kB) are suitable for decision support systems.
            The block sizes also limit the size of objects stored directly in the file. Objects larger than
            <see cref="P:Waher.Persistence.Files.ObjectBTreeFile.InlineObjectSizeLimit"/> will be persisted as BLOBs, with the bulk of the object stored as separate files. 
            Smallest block size = 1024, largest block size = 65536.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.BlobBlockSize">
            <summary>
            Size of a block in the BLOB file. The size must be a power of two. The BLOB file will consist
            of a doubly linked list of blocks of this size.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.InlineObjectSizeLimit">
            <summary>
            Maximum size of objects that are stored in-line. Larger objects will be stored as BLOBs.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.TimeoutMilliseconds">
            <summary>
            Timeout, in milliseconds, for database operations.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.IsCorrupt">
            <summary>
            If the file has been detected to contain corruptions.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.BlockLimit">
            <summary>
            Block limit
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.BlobBlockLimit">
            <summary>
            BLOB Block Limit
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.CreateDatabaseGUID">
            <summary>
            Creates a new GUID suitable for use in databases.
            </summary>
            <returns>New GUID.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.EndRead">
            <summary>
            Ends a reading session of the object.
            Must be called once for each call to <see cref="M:Waher.Runtime.Threading.MultiReadSingleWriteObject.BeginRead"/> or successful call to 
            <see cref="M:Waher.Runtime.Threading.MultiReadSingleWriteObject.TryBeginRead(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.EndWrite">
            <summary>
            Ends a writing session of the object.
            Must be called once for each call to <see cref="M:Waher.Runtime.Threading.MultiReadSingleWriteObject.BeginWrite"/> or successful call to 
            <see cref="M:Waher.Runtime.Threading.MultiReadSingleWriteObject.TryBeginWrite(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.ClearCache">
            <summary>
            Clears the internal memory cache.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.LoadBlock(System.Int64)">
            <summary>
            Loads a block from the file.
            </summary>
            <param name="PhysicalPosition">Physical position of block in file.</param>
            <returns>Loaded block.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.SaveBlock(System.Int64,System.Byte[])">
            <summary>
            Saves a block to the file.
            </summary>
            <param name="PhysicalPosition">Physical position of block in file.</param>
            <param name="Block">Block to save.</param>
            <returns>Block to save.</returns>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.BlockUpdateCounter">
            <summary>
            This counter gets updated each time a block is updated in the file.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.SaveNewObject(System.Object)">
            <summary>
            Saves a new object to the file.
            </summary>
            <param name="Object">Object to persist.</param>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.SaveNewObject(System.Object,Waher.Persistence.Files.Serialization.ObjectSerializer)">
            <summary>
            Saves a new object to the file.
            </summary>
            <param name="Object">Object to persist.</param>
            <param name="Serializer">Object serializer. If not provided, the serializer registered for the corresponding type will be used.</param>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.SaveNewObjects(System.Collections.Generic.IEnumerable{System.Object},Waher.Persistence.Files.Serialization.ObjectSerializer)">
            <summary>
            Saves a new set of objects to the file.
            </summary>
            <param name="Objects">Objects to persist.</param>
            <param name="Serializer">Object serializer. If not provided, the serializer registered for the corresponding type will be used.</param>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.LoadObject(System.Guid)">
            <summary>
            Loads an object from the file.
            </summary>
            <param name="ObjectId">ID of object to load.</param>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.LoadObject``1(System.Guid)">
            <summary>
            Loads an object from the file.
            </summary>
            <typeparam name="T">Type of object to load.</typeparam>
            <param name="ObjectId">ID of object to load.</param>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.LoadObject``1(System.Guid,System.Type)">
            <summary>
            Loads an object from the file.
            </summary>
            <param name="ObjectId">ID of object to load.</param>
            <param name="Type">Type of object to load.</param>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.LoadObject(System.Guid,Waher.Persistence.Files.Serialization.IObjectSerializer)">
            <summary>
            Loads an object from the file.
            </summary>
            <param name="ObjectId">ID of object to load.</param>
            <param name="Serializer">Object serializer. If not provided, the serializer will be deduced from information stored in the file.</param>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.UpdateObject(System.Object)">
            <summary>
            Updates an object in the database, using the object serializer corresponding to the type of object being updated.
            </summary>
            <param name="Object">Object to update.</param>
            <returns>Task object that can be used to wait for the asynchronous method to complete.</returns>
            <exception cref="T:System.NotSupportedException">Thrown, if the corresponding class does not have an Object ID property, 
            or if the corresponding property type is not supported.</exception>
            <exception cref="T:System.IO.IOException">If the object is not found in the database.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.UpdateObject(System.Object,Waher.Persistence.Files.Serialization.ObjectSerializer)">
            <summary>
            Updates an object in the database.
            </summary>
            <param name="Object">Object to update.</param>
            <param name="Serializer">Object serializer to use.</param>
            <returns>Task object that can be used to wait for the asynchronous method to complete.</returns>
            <exception cref="T:System.NotSupportedException">Thrown, if the corresponding class does not have an Object ID property, 
            or if the corresponding property type is not supported.</exception>
            <exception cref="T:System.IO.IOException">If the object is not found in the database.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.UpdateObject(System.Guid,System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer)">
            <summary>
            Updates an object in the database.
            </summary>
            <param name="ObjectId">Object ID of object to update.</param>
            <param name="Object">Object to update.</param>
            <param name="Serializer">Object serializer to use.</param>
            <returns>Task object that can be used to wait for the asynchronous method to complete.</returns>
            <exception cref="T:System.NotSupportedException">Thrown, if the corresponding class does not have an Object ID property, 
            or if the corresponding property type is not supported.</exception>
            <exception cref="T:System.IO.IOException">If the object is not found in the database.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.UpdateObjects(System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Object},Waher.Persistence.Files.Serialization.IObjectSerializer)">
            <summary>
            Updates a set of objects in the database.
            </summary>
            <param name="ObjectIds">Object IDs of objects to update.</param>
            <param name="Objects">Objects to update.</param>
            <param name="Serializer">Object serializer to use.</param>
            <returns>Task object that can be used to wait for the asynchronous method to complete.</returns>
            <exception cref="T:System.NotSupportedException">Thrown, if the corresponding class does not have an Object ID property, 
            or if the corresponding property type is not supported.</exception>
            <exception cref="T:System.IO.IOException">If the object is not found in the database.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.DeleteObject(System.Object)">
            <summary>
            Deletes an object from the database, using the object serializer corresponding to the type of object being updated, to find
            the Object ID of the object.
            </summary>
            <param name="Object">Object to delete.</param>
            <returns>Object that was deleted.</returns>
            <exception cref="T:System.NotSupportedException">Thrown, if the corresponding class does not have an Object ID property, 
            or if the corresponding property type is not supported.</exception>
            <exception cref="T:System.IO.IOException">If the object is not found in the database.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.DeleteObject(System.Object,Waher.Persistence.Files.Serialization.ObjectSerializer)">
            <summary>
            Deletes an object from the database, using the object serializer corresponding to the type of object being updated, to find
            the Object ID of the object.
            </summary>
            <param name="Object">Object to delete.</param>
            <param name="Serializer">Object serializer to use.</param>
            <returns>Object that was deleted.</returns>
            <exception cref="T:System.NotSupportedException">Thrown, if the corresponding class does not have an Object ID property, 
            or if the corresponding property type is not supported.</exception>
            <exception cref="T:System.IO.IOException">If the object is not found in the database.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.DeleteObject(System.Guid)">
            <summary>
            Deletes an object from the database.
            </summary>
            <param name="ObjectId">Object ID of the object to delete.</param>
            <returns>Object that was deleted.</returns>
            <exception cref="T:System.IO.IOException">If the object is not found in the database.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.DeleteObject(System.Guid,Waher.Persistence.Files.Serialization.IObjectSerializer)">
            <summary>
            Deletes an object from the database.
            </summary>
            <param name="ObjectId">Object ID of the object to delete.</param>
            <param name="Serializer">Binary serializer.</param>
            <returns>Object that was deleted.</returns>
            <exception cref="T:System.IO.IOException">If the object is not found in the database.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.DeleteObjects(System.Collections.Generic.IEnumerable{System.Guid},Waher.Persistence.Files.Serialization.IObjectSerializer)">
            <summary>
            Deletes a set of objects from the database.
            </summary>
            <param name="ObjectIds">Object IDs of the objects to delete.</param>
            <param name="Serializer">Binary serializer.</param>
            <returns>Object that was deleted.</returns>
            <exception cref="T:System.IO.IOException">If the object is not found in the database.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.GetCurrentStateReport(System.Boolean,System.Boolean)">
            <summary>
            Provides a report on the current state of the file.
            </summary>
            <param name="WriteStat">If statistics is to be included in the report.</param>
            <param name="Properties">If object properties should be exported as well, in case the database is corrupt or unbalanced.</param>
            <returns>Report</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.GetCurrentStateReportAsync(System.Boolean,System.Boolean)">
            <summary>
            Provides a report on the current state of the file.
            </summary>
            <param name="WriteStat">If statistics is to be included in the report.</param>
            <param name="Properties">If object properties should be exported as well, in case the database is corrupt or unbalanced.</param>
            <returns>Report</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.ComputeStatistics">
            <summary>
            Goes through the entire file and computes statistics abouts its composition.
            </summary>
            <returns>File statistics and found Object IDs.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.ExportGraphXML(System.Boolean)">
            <summary>
            Exports the structure of the file to XML.
            </summary>
            <param name="Properties">If object properties should be exported as well.</param>
            <returns>Graph XML.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.ExportGraphXML(System.Text.StringBuilder,System.Boolean)">
            <summary>
            Exports the structure of the file to XML.
            </summary>
            <param name="Output">XML Output</param>
            <param name="Properties">If object properties should be exported as well.</param>
            <returns>Asynchronous task object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.ExportGraphXMLLocked(System.Boolean)">
            <summary>
            Exports the structure of the file to XML.
            </summary>
            <param name="Properties">If object properties should be exported as well.</param>
            <returns>Graph XML.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.ExportGraphXMLLocked(System.Text.StringBuilder,System.Boolean)">
            <summary>
            Exports the structure of the file to XML.
            </summary>
            <param name="Output">XML Output</param>
            <param name="Properties">If object properties should be exported as well.</param>
            <returns>Asynchronous task object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.ExportGraphXML(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Exports the structure of the file to XML.
            </summary>
            <param name="XmlOutput">XML Output</param>
            <param name="Properties">If object properties should be exported as well.</param>
            <returns>Asynchronous task object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.ExportGraphXMLLocked(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Exports the structure of the file to XML.
            </summary>
            <param name="XmlOutput">XML Output</param>
            <param name="Properties">If object properties should be exported as well.</param>
            <returns>Asynchronous task object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.GetObjectCount(System.UInt32,System.Boolean)">
            <summary>
            Get number of objects in subtree spanned by <paramref name="BlockIndex">BlockIndex</paramref>.
            </summary>
            <param name="BlockIndex">Block index of root of subtree.</param>
            <param name="IncludeChildren">If objects in children are to be included in count.</param>
            <returns>Total number of objects in subtree.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.GetRank(System.Guid)">
            <summary>
            Calculates the rank of an object in the database, given its Object ID.
            </summary>
            <param name="ObjectId">Object ID</param>
            <returns>Rank of object in database.</returns>
            <exception cref="T:System.IO.IOException">If the object is not found.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.Add(System.Object)">
            <summary>
            <see cref="M:System.Collections.Generic.ICollection`1.Add(`0)"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.Contains(System.Object)">
            <summary>
            <see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.ContainsAsync(System.Object)">
            <summary>
            Checks if an item is stored in the file.
            </summary>
            <param name="Item">Object to check for.</param>
            <returns>If the object is stored in the file.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.CopyTo(System.Object[],System.Int32)">
            <summary>
            <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)"/>
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.Count">
            <summary>
            <see cref="P:System.Collections.Generic.ICollection`1.Count"/>
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.IsReadOnly">
            <summary>
            <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.Clear">
            <summary>
            <see cref="M:System.Collections.Generic.ICollection`1.Clear"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.ClearAsync">
            <summary>
            Clears the database of all objects.
            </summary>
            <returns>Task object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.GetEnumerator">
            <summary>
            Returns an untyped enumerator that iterates through the collection.
            
            For a typed enumerator, call the <see cref="M:Waher.Persistence.Files.ObjectBTreeFile.GetTypedEnumeratorAsync``1(System.Boolean)"/> method.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an untyped enumerator that iterates through the collection.
            
            For a typed enumerator, call the <see cref="M:Waher.Persistence.Files.ObjectBTreeFile.GetTypedEnumeratorAsync``1(System.Boolean)"/> method.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.GetTypedEnumeratorAsync``1(System.Boolean)">
            <summary>
            Returns an typed enumerator that iterates through the collection. The typed enumerator uses
            the object serializer of <typeparamref name="T"/> to deserialize objects by default.
            </summary>
            <param name="Locked">If locked access to the file is requested.
            
            If unlocked access is desired, any change to the database will invalidate the enumerator, and further access to the
            enumerator will cause an <see cref="T:System.InvalidOperationException"/> to be thrown.
            
            If locked access is desired, the database cannot be updated, until the enumerator has been dispose. Make sure to call
            the <see cref="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.Dispose"/> method when done with the enumerator, to release the database
            after use.</param>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the System.Collections.Generic.ICollection{T}.
            </summary>
            <param name="item">The object to remove from the System.Collections.Generic.ICollection{T}.</param>
            <returns>true if item was successfully removed from the System.Collections.Generic.ICollection{T}; 
            otherwise, false. This method also returns false if item is not found in the original 
            System.Collections.Generic.ICollection{T}.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.AddIndex(Waher.Persistence.Files.IndexBTreeFile,System.Boolean)">
            <summary>
            Adds an index to the file. When objects are added, updated or deleted from the file, the corresponding references in the
            index file will be updated as well. The index files will be disposed together with the main file as well.
            </summary>
            <param name="Index">Index file to add.</param>
            <param name="Regenerate">If the index is to be regenerated.</param>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFile.Indices">
            <summary>
            Available indices.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.FindBestIndex(System.Int32@,System.String,System.String[])">
            <summary>
            Finds the best index for finding objects using  a given property.
            </summary>
            <param name="BestNrFields">Number of index fields used in best index.</param>
            <param name="Property">Property to search on. By default, sort order is ascending.
            If descending sort order is desired, prefix the corresponding field name by a hyphen (minus) sign.</param>
            <param name="SortOrder">Sort order result is to be presented with.</param>
            <returns>Best index to use for the search. If no index is found matching the properties, null is returned.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.FindBestIndex(System.Int32@,System.String[],System.String[])">
            <summary>
            Finds the best index for finding objects using  a given set of properties. The method assumes the most restrictive
            property is mentioned first in <paramref name="Properties"/>.
            </summary>
            <param name="BestNrFields">Number of index fields used in best index.</param>
            <param name="Properties">Properties to search on. By default, sort order is ascending.
            If descending sort order is desired, prefix the corresponding field name by a hyphen (minus) sign.</param>
            <param name="SortOrder">Sort order result is to be presented with.</param>
            <returns>Best index to use for the search. If no index is found matching the properties, null is returned.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.FindBestIndex(System.String[])">
            <summary>
            Finds the best index for finding objects using  a given set of properties. The method assumes the most restrictive
            property is mentioned first in <paramref name="Properties"/>.
            </summary>
            <param name="Properties">Properties to search on. By default, sort order is ascending.
            If descending sort order is desired, prefix the corresponding field name by a hyphen (minus) sign.</param>
            <returns>Best index to use for the search. If no index is found matching the properties, null is returned.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.FindBestIndex(System.Int32@,System.String[])">
            <summary>
            Finds the best index for finding objects using  a given set of properties. The method assumes the most restrictive
            property is mentioned first in <paramref name="Properties"/>.
            </summary>
            <param name="BestNrFields">Number of index fields used in best index.</param>
            <param name="Properties">Properties to search on. By default, sort order is ascending.
            If descending sort order is desired, prefix the corresponding field name by a hyphen (minus) sign.</param>
            <returns>Best index to use for the search. If no index is found matching the properties, null is returned.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFile.Find``1(System.Int32,System.Int32,Waher.Persistence.Filters.Filter,System.Boolean,System.String[])">
            <summary>
            Finds objects of a given class <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
            <param name="Offset">Result offset.</param>
            <param name="MaxCount">Maximum number of objects to return.</param>
            <param name="Filter">Optional filter. Can be null.</param>
            <param name="Locked">If locked access to the file is requested.
            
            If unlocked access is desired, any change to the database will invalidate the enumerator, and further access to the
            enumerator will cause an <see cref="T:System.InvalidOperationException"/> to be thrown.
            
            If locked access is desired, the database cannot be updated, until the enumerator has been disposed. Make sure to call
            the <see cref="M:System.IDisposable.Dispose"/> method when done with the enumerator, to release the database
            after use.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>Objects found.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1">
            <summary>
            Enumerates object in a <see cref="T:Waher.Persistence.Files.ObjectBTreeFile"/> in GUID order. You can use the enumerator to enumerate objects
            forwards and backwards, as well as skip a given number of objects.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.LockRead">
            <summary>
            Locks the underlying file (if not locked).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.DisposeAsync">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.MoveNext"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.CurrentTypeCompatible">
            <summary>
            If the curent object is type compatible with <typeparamref name="T"/> or not. If not compatible, <see cref="P:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.Current"/> 
            will be null, even if there exists an object at the current position.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.CurrentSerializer">
            <summary>
            Serializer used to deserialize <see cref="P:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.Current"/>.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.MoveNext"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.CurrentObjectId">
            <summary>
            Gets the Object ID of the current object.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.MoveNext"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.Waher#Persistence#Files#ICursor{T}#CurrentObjectId">
            <summary>
            Gets the Object ID of the current object.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.MoveNext"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.CurrentRank">
            <summary>
            Gets the rank of the current object.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.GetCurrentRank">
            <summary>
            Gets the rank of the current object.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.MoveNextAsync">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.GoToFirst">
            <summary>
            Goes to the first object.
            </summary>
            <returns>If a first object was found.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.MovePrevious">
            <summary>
            Advances the enumerator to the previous element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the previous element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.MovePreviousAsync">
            <summary>
            Advances the enumerator to the previous element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the previous element; false if
            the enumerator has passed the beginning of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.GoToLast">
            <summary>
            Goes to the last object.
            </summary>
            <returns>If a last object was found.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.GoToObject(System.Object)">
            <summary>
            Finds the position of an object in the underlying database.
            </summary>
            <param name="ObjectId">Object ID</param>
            <returns>If the corresponding object was found. If so, the <see cref="P:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.Current"/> property will contain the corresponding
            object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.GoToObject(System.UInt64)">
            <summary>
            Finds the object given its order in the underlying database.
            </summary>
            <param name="ObjectIndex">Order of object in database.</param>
            <returns>If the corresponding object was found. If so, the <see cref="P:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.Current"/> property will contain the corresponding
            object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.Reset">
            <summary>
            <see cref="M:System.Collections.IEnumerator.Reset"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.Reset(Waher.Persistence.Files.Bookmark)">
            <summary>
            Resets the enumerator, and sets the starting point to a given starting point.
            </summary>
            <param name="StartingPoint">Starting point to start enumeration.</param>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.Skip(System.Int64)">
            <summary>
            Skips a certain number of objects forward (positive <paramref name="NrObjects"/>) or backward (negative <paramref name="NrObjects"/>).
            </summary>
            <param name="NrObjects">Number of objects to skip forward (positive) or backward (negative).</param>
            <returns>If the skip operation was successful and a new object is available in <see cref="P:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.Current"/>.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.GetBookmark">
            <summary>
            Gets a bookmark for the current position. You can set the current position of the enumerator, calling the
            <see cref="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.Reset(Waher.Persistence.Files.Bookmark)"/> method.
            </summary>
            <returns>Bookmark</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.GetEnumerator">
            <summary>
            <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.SameSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering corresponds to a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.ObjectBTreeFileEnumerator`1.ReverseSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering is a reversion of a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.Comparison">
            <summary>
            Static class that performs comparisons of property values.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.TryMakeSameType(System.Object@,System.Object@)">
            <summary>
            Tries to make sure <paramref name="x"/> and <paramref name="y"/> have the same type.
            </summary>
            <param name="x">First value.</param>
            <param name="y">Second value.</param>
            <returns>If <paramref name="x"/> and <paramref name="y"/> are of the same type after the call.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.Compare(System.Object,System.Object)">
            <summary>
            Compares two values. The values can be of different, but compatible types.
            </summary>
            <param name="Value1">First value.</param>
            <param name="Value2">Second value.</param>
            <returns>
            Negative, if <paramref name="Value1"/>&lt;<paramref name="Value2"/>.
            Positive, if <paramref name="Value1"/>&gt;<paramref name="Value2"/>.
            Zero, if <paramref name="Value1"/>=<paramref name="Value2"/>.
            </returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.Increment(System.Object@)">
            <summary>
            Increments <paramref name="Value"/> to the smallest value greater than <paramref name="Value"/>.
            </summary>
            <param name="Value">Value</param>
            <returns>If operation was successful.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.Increment(System.Double@)">
            <summary>
            Increments <paramref name="Value"/> to the smallest value greater than <paramref name="Value"/>.
            </summary>
            <param name="Value">Value</param>
            <returns>If operation was successful.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.Increment(System.Single@)">
            <summary>
            Increments <paramref name="Value"/> to the smallest value greater than <paramref name="Value"/>.
            </summary>
            <param name="Value">Value</param>
            <returns>If operation was successful.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.Increment(System.Decimal@)">
            <summary>
            Increments <paramref name="Value"/> to the smallest value greater than <paramref name="Value"/>.
            </summary>
            <param name="Value">Value</param>
            <returns>If operation was successful.</returns>
        </member>
        <member name="F:Waher.Persistence.Files.Searching.Comparison.DecimalEpsilon">
            <summary>
            Smallest value represented by the <see cref="T:System.Decimal"/> data type.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.Increment(System.String@)">
            <summary>
            Increments <paramref name="Value"/> to the smallest value greater than <paramref name="Value"/>.
            </summary>
            <param name="Value">Value</param>
            <returns>If operation was successful.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.Increment(Waher.Persistence.CaseInsensitiveString@)">
            <summary>
            Increments <paramref name="Value"/> to the smallest value greater than <paramref name="Value"/>.
            </summary>
            <param name="Value">Value</param>
            <returns>If operation was successful.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.Decrement(System.Object@)">
            <summary>
            Decrements <paramref name="Value"/> to the largest value smaller than <paramref name="Value"/>.
            </summary>
            <param name="Value">Value</param>
            <returns>If operation was successful.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.Decrement(System.Double@)">
            <summary>
            Decrements <paramref name="Value"/> to the largest value smaller than <paramref name="Value"/>.
            </summary>
            <param name="Value">Value</param>
            <returns>If operation was successful.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.Decrement(System.Single@)">
            <summary>
            Decrements <paramref name="Value"/> to the largest value smaller than <paramref name="Value"/>.
            </summary>
            <param name="Value">Value</param>
            <returns>If operation was successful.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.Decrement(System.Decimal@)">
            <summary>
            Decrements <paramref name="Value"/> to the largest value smaller than <paramref name="Value"/>.
            </summary>
            <param name="Value">Value</param>
            <returns>If operation was successful.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.Decrement(System.String@)">
            <summary>
            Decrements <paramref name="Value"/> to the largest value smaller than <paramref name="Value"/>.
            </summary>
            <param name="Value">Value</param>
            <returns>If operation was successful.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.Comparison.Decrement(Waher.Persistence.CaseInsensitiveString@)">
            <summary>
            Decrements <paramref name="Value"/> to the largest value smaller than <paramref name="Value"/>.
            </summary>
            <param name="Value">Value</param>
            <returns>If operation was successful.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.EmptyCursor`1">
            <summary>
            Provides a cursor into an empty set.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.EmptyCursor`1.#ctor(Waher.Persistence.Files.Serialization.ObjectSerializer)">
            <summary>
            Provides a cursor into an empty set.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.EmptyCursor`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.EmptyCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.EmptyCursor`1.CurrentSerializer">
            <summary>
            Serializer used to deserialize <see cref="P:Waher.Persistence.Files.Searching.EmptyCursor`1.Current"/>.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.EmptyCursor`1.CurrentTypeCompatible">
            <summary>
            If the curent object is type compatible with <typeparamref name="T"/> or not. If not compatible, <see cref="P:Waher.Persistence.Files.Searching.EmptyCursor`1.Current"/> 
            will be null, even if there exists an object at the current position.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.EmptyCursor`1.CurrentObjectId">
            <summary>
            Gets the Object ID of the current object.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.EmptyCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.EmptyCursor`1.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.EmptyCursor`1.MoveNextAsync">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.EmptyCursor`1.MovePreviousAsync">
            <summary>
            Advances the enumerator to the previous element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the previous element; false if
            the enumerator has passed the beginning of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.EmptyCursor`1.SameSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering corresponds to a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.EmptyCursor`1.ReverseSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering is a reversion of a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.FilterAnd">
            <summary>
            This filter selects objects that conform to all child-filters provided.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterAnd.#ctor(Waher.Persistence.Files.Searching.IApplicableFilter[],Waher.Persistence.Filters.Filter[])">
            <summary>
            This filter selects objects that conform to all child-filters provided.
            </summary>
            <param name="ApplicableFilters">Applicable filters.</param>
            <param name="Filters">Child filters.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterAnd.AppliesTo(System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Checks if the filter applies to the object.
            </summary>
            <param name="Object">Object.</param>
            <param name="Serializer">Corresponding object serializer.</param>
            <param name="Provider">Files provider.</param>
            <returns>If the filter can be applied.</returns>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilterAnd.ConstantFields">
            <summary>
            Gets an array of constant fields. Can return null, if there are no constant fields.
            </summary>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.FilteredCursor`1">
            <summary>
            Provides a filtered cursor. It only returns objects that matches a given filter.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilteredCursor`1.#ctor(Waher.Persistence.Files.ICursor{`0},Waher.Persistence.Files.Searching.IApplicableFilter,System.Boolean,System.Boolean,System.Int32,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Provides a filtered cursor. It only returns objects that matches a given filter.
            </summary>
            <param name="Cursor">Cursor to be filtered.</param>
            <param name="Filter">Filter to apply.</param>
            <param name="UntilFirstFail">Only return ites until first filter failure.</param>
            <param name="Forward">If <paramref name="Cursor"/> is to be processed forwards (true) or backwards (false).</param>
            <param name="TimeoutMilliseconds">Time to wait to get access to underlying database.</param>
            <param name="Provider">Files provider.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilteredCursor`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.FilteredCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilteredCursor`1.CurrentSerializer">
            <summary>
            Serializer used to deserialize <see cref="P:Waher.Persistence.Files.Searching.FilteredCursor`1.Current"/>.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilteredCursor`1.CurrentTypeCompatible">
            <summary>
            If the curent object is type compatible with <typeparamref name="T"/> or not. If not compatible, <see cref="P:Waher.Persistence.Files.Searching.FilteredCursor`1.Current"/> 
            will be null, even if there exists an object at the current position.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilteredCursor`1.CurrentObjectId">
            <summary>
            Gets the Object ID of the current object.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.FilteredCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilteredCursor`1.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilteredCursor`1.MoveNextAsync">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilteredCursor`1.MovePreviousAsync">
            <summary>
            Advances the enumerator to the previous element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the previous element; false if
            the enumerator has passed the beginning of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilteredCursor`1.SameSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering corresponds to a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilteredCursor`1.ReverseSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering is a reversion of a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.FilterFieldEqualTo">
            <summary>
            This filter selects objects that have a named field equal to a given value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldEqualTo.#ctor(System.String,System.Object)">
            <summary>
            This filter selects objects that have a named field equal to a given value.
            </summary>
            <param name="FieldName">Field Name.</param>
            <param name="Value">Value.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldEqualTo.AppliesTo(System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Checks if the filter applies to the object.
            </summary>
            <param name="Object">Object.</param>
            <param name="Serializer">Corresponding object serializer.</param>
            <param name="Provider">Files provider.</param>
            <returns>If the filter can be applied.</returns>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilterFieldEqualTo.ConstantFields">
            <summary>
            Gets an array of constant fields. Can return null, if there are no constant fields.
            </summary>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.FilterFieldGreaterOrEqualTo">
            <summary>
            This filter selects objects that have a named field greater or equal to a given value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldGreaterOrEqualTo.#ctor(System.String,System.Object)">
            <summary>
            This filter selects objects that have a named field greater or equal to a given value.
            </summary>
            <param name="FieldName">Field Name.</param>
            <param name="Value">Value.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilterFieldGreaterOrEqualTo.ConstantFields">
            <summary>
            Gets an array of constant fields. Can return null, if there are no constant fields.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldGreaterOrEqualTo.AppliesTo(System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Checks if the filter applies to the object.
            </summary>
            <param name="Object">Object.</param>
            <param name="Serializer">Corresponding object serializer.</param>
            <param name="Provider">Files provider.</param>
            <returns>If the filter can be applied.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.FilterFieldGreaterThan">
            <summary>
            This filter selects objects that have a named field greater than a given value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldGreaterThan.#ctor(System.String,System.Object)">
            <summary>
            This filter selects objects that have a named field greater than a given value.
            </summary>
            <param name="FieldName">Field Name.</param>
            <param name="Value">Value.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilterFieldGreaterThan.ConstantFields">
            <summary>
            Gets an array of constant fields. Can return null, if there are no constant fields.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldGreaterThan.AppliesTo(System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Checks if the filter applies to the object.
            </summary>
            <param name="Object">Object.</param>
            <param name="Serializer">Corresponding object serializer.</param>
            <param name="Provider">Files provider.</param>
            <returns>If the filter can be applied.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.FilterFieldLesserOrEqualTo">
            <summary>
            This filter selects objects that have a named field lesser or equal to a given value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldLesserOrEqualTo.#ctor(System.String,System.Object)">
            <summary>
            This filter selects objects that have a named field lesser or equal to a given value.
            </summary>
            <param name="FieldName">Field Name.</param>
            <param name="Value">Value.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilterFieldLesserOrEqualTo.ConstantFields">
            <summary>
            Gets an array of constant fields. Can return null, if there are no constant fields.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldLesserOrEqualTo.AppliesTo(System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Checks if the filter applies to the object.
            </summary>
            <param name="Object">Object.</param>
            <param name="Serializer">Corresponding object serializer.</param>
            <param name="Provider">Files provider.</param>
            <returns>If the filter can be applied.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.FilterFieldLesserThan">
            <summary>
            This filter selects objects that have a named field lesser than a given value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldLesserThan.#ctor(System.String,System.Object)">
            <summary>
            This filter selects objects that have a named field lesser than a given value.
            </summary>
            <param name="FieldName">Field Name.</param>
            <param name="Value">Value.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilterFieldLesserThan.ConstantFields">
            <summary>
            Gets an array of constant fields. Can return null, if there are no constant fields.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldLesserThan.AppliesTo(System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Checks if the filter applies to the object.
            </summary>
            <param name="Object">Object.</param>
            <param name="Serializer">Corresponding object serializer.</param>
            <param name="Provider">Files provider.</param>
            <returns>If the filter can be applied.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.FilterFieldLikeRegEx">
            <summary>
            This filter selects objects that have a named field matching a given regular expression.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldLikeRegEx.#ctor(System.String,System.String)">
            <summary>
            This filter selects objects that have a named field matching a given regular expression.
            </summary>
            <param name="FieldName">Field Name.</param>
            <param name="RegularExpression">Regular expression.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilterFieldLikeRegEx.ConstantFields">
            <summary>
            Gets an array of constant fields. Can return null, if there are no constant fields.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldLikeRegEx.AppliesTo(System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Checks if the filter applies to the object.
            </summary>
            <param name="Object">Object.</param>
            <param name="Serializer">Corresponding object serializer.</param>
            <param name="Provider">Files provider.</param>
            <returns>If the filter can be applied.</returns>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilterFieldLikeRegEx.Regex">
            <summary>
            Parsed regular expression.
            </summary>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.FilterFieldNotEqualTo">
            <summary>
            This filter selects objects that have a named field not equal to a given value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldNotEqualTo.#ctor(System.String,System.Object)">
            <summary>
            This filter selects objects that have a named field not equal to a given value.
            </summary>
            <param name="FieldName">Field Name.</param>
            <param name="Value">Value.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilterFieldNotEqualTo.ConstantFields">
            <summary>
            Gets an array of constant fields. Can return null, if there are no constant fields.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterFieldNotEqualTo.AppliesTo(System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Checks if the filter applies to the object.
            </summary>
            <param name="Object">Object.</param>
            <param name="Serializer">Corresponding object serializer.</param>
            <param name="Provider">Files provider.</param>
            <returns>If the filter can be applied.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.FilterNot">
            <summary>
            This filter selects objects that does not conform to the child-filter provided.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterNot.#ctor(Waher.Persistence.Files.Searching.IApplicableFilter)">
            <summary>
            This filter selects objects that does not conform to the child-filter provided.
            </summary>
            <param name="Filter">Child filter.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilterNot.ConstantFields">
            <summary>
            Gets an array of constant fields. Can return null, if there are no constant fields.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterNot.AppliesTo(System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Checks if the filter applies to the object.
            </summary>
            <param name="Object">Object.</param>
            <param name="Serializer">Corresponding object serializer.</param>
            <param name="Provider">Files provider.</param>
            <returns>If the filter can be applied.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.FilterOr">
            <summary>
            This filter selects objects that conform to any of the child-filters provided.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterOr.#ctor(Waher.Persistence.Files.Searching.IApplicableFilter[],Waher.Persistence.Filters.Filter[])">
            <summary>
            This filter selects objects that conform to any of the child-filters provided.
            </summary>
            <param name="ApplicableFilters">Applicable filters.</param>
            <param name="Filters">Child filters.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.FilterOr.ConstantFields">
            <summary>
            Gets an array of constant fields. Can return null, if there are no constant fields.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.FilterOr.AppliesTo(System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Checks if the filter applies to the object.
            </summary>
            <param name="Object">Object.</param>
            <param name="Serializer">Corresponding object serializer.</param>
            <param name="Provider">Files provider.</param>
            <returns>If the filter can be applied.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.IApplicableFilter.AppliesTo(System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Checks if the filter applies to the object.
            </summary>
            <param name="Object">Object.</param>
            <param name="Serializer">Corresponding object serializer.</param>
            <param name="Provider">Files provider.</param>
            <returns>If the filter can be applied.</returns>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.IApplicableFilter.ConstantFields">
            <summary>
            Gets an array of constant fields. Can return null, if there are no constant fields.
            </summary>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.PagesCursor`1">
            <summary>
            Provides a cursor into a paged set of objects.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.PagesCursor`1.#ctor(System.Int32,System.Int32,Waher.Persistence.Files.ICursor{`0},System.Int32)">
            <summary>
            Provides a cursor into a paged set of objects.
            </summary>
            <param name="Offset">Result offset.</param>
            <param name="MaxCount">Maximum number of objects to return.</param>
            <param name="Cursor">Cursor to underlying result set.</param>
            <param name="TimeoutMilliseconds">Time to wait to get access to underlying database.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.PagesCursor`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.PagesCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.PagesCursor`1.CurrentSerializer">
            <summary>
            Serializer used to deserialize <see cref="P:Waher.Persistence.Files.Searching.PagesCursor`1.Current"/>.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.PagesCursor`1.CurrentTypeCompatible">
            <summary>
            If the curent object is type compatible with <typeparamref name="T"/> or not. If not compatible, <see cref="P:Waher.Persistence.Files.Searching.PagesCursor`1.Current"/> 
            will be null, even if there exists an object at the current position.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.PagesCursor`1.CurrentObjectId">
            <summary>
            Gets the Object ID of the current object.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.PagesCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.PagesCursor`1.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.PagesCursor`1.MoveNextAsync">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.PagesCursor`1.MovePreviousAsync">
            <summary>
            Advances the enumerator to the previous element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the previous element; false if
            the enumerator has passed the beginning of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.PagesCursor`1.SameSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering corresponds to a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.PagesCursor`1.ReverseSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering is a reversion of a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.RangeInfo">
            <summary>
            Contains information about a range in a search operation.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.RangeInfo.#ctor(System.String)">
            <summary>
            Contains information about a range in a search operation.
            </summary>
            <param name="FieldName">Field name being searched.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangeInfo.FieldName">
            <summary>
            Field Name
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangeInfo.Min">
            <summary>
            Minimum endpoint, if a range.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangeInfo.Max">
            <summary>
            Maximum endpoint, if a range.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangeInfo.Point">
            <summary>
            Point value, if not a range.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangeInfo.MinInclusive">
            <summary>
            If the minimum endpoint is included in the range.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangeInfo.MaxInclusive">
            <summary>
            If the maximum endpoint is included in the range.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangeInfo.IsRange">
            <summary>
            If the object specifies a range (true) or a single point (false).
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangeInfo.IsPoint">
            <summary>
            If the object specifies a point (true) or a range (false).
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangeInfo.IsOpenEndedRange">
            <summary>
            If the range is open-ended.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangeInfo.HasMin">
            <summary>
            If the range has a minimum endpoint.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangeInfo.HasMax">
            <summary>
            If the range has a maximum endpoint.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.RangeInfo.SetPoint(System.Object)">
            <summary>
            Range consists of a single point value.
            </summary>
            <param name="Value">Point value.</param>
            <returns>If range is consistent.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.RangeInfo.SetMin(System.Object,System.Boolean,System.Boolean@)">
            <summary>
            Sets minimum endpoint of range.
            </summary>
            <param name="Value">Endpoint value.</param>
            <param name="Inclusive">If endpoint is included in range or not.</param>
            <param name="Smaller">If the range became smaller.</param>
            <returns>If range is consistent.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.RangeInfo.SetMax(System.Object,System.Boolean,System.Boolean@)">
            <summary>
            Sets maximum endpoint of range.
            </summary>
            <param name="Value">Endpoint value.</param>
            <param name="Inclusive">If endpoint is included in range or not.</param>
            <param name="Smaller">If the range became smaller.</param>
            <returns>If range is consistent.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.RangeInfo.Copy">
            <summary>
            Creates a copy of the range information.
            </summary>
            <returns>Copy</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.RangeInfo.CopyTo(Waher.Persistence.Files.Searching.RangeInfo)">
            <summary>
            Copies the range information to another range object.
            </summary>
            <param name="Destination">Destination object.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.RangesCursor`1">
            <summary>
            Provides a cursor that enumerates ranges of values using an index.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.RangesCursor`1.#ctor(Waher.Persistence.Files.IndexBTreeFile,Waher.Persistence.Files.Searching.RangeInfo[],Waher.Persistence.Files.Searching.IApplicableFilter[],System.Boolean,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Provides a cursor that joins results from multiple cursors. It only returns an object once, regardless of how many times
            it appears in the different child cursors.
            </summary>
            <param name="Index">Index.</param>
            <param name="Ranges">Ranges to enumerate.</param>
            <param name="AdditionalFilters">Additional filters.</param>
            <param name="Locked">If locked access is desired.</param>
            <param name="Provider">Files provider.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangesCursor`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.RangesCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangesCursor`1.CurrentSerializer">
            <summary>
            Serializer used to deserialize <see cref="P:Waher.Persistence.Files.Searching.RangesCursor`1.Current"/>.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangesCursor`1.CurrentTypeCompatible">
            <summary>
            If the curent object is type compatible with <typeparamref name="T"/> or not. If not compatible, <see cref="P:Waher.Persistence.Files.Searching.RangesCursor`1.Current"/> 
            will be null, even if there exists an object at the current position.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.RangesCursor`1.CurrentObjectId">
            <summary>
            Gets the Object ID of the current object.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.RangesCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.RangesCursor`1.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.RangesCursor`1.MoveNextAsync">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.RangesCursor`1.MovePreviousAsync">
            <summary>
            Advances the enumerator to the previous element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the previous element; false if
            the enumerator has passed the beginning of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.RangesCursor`1.SameSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering corresponds to a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.RangesCursor`1.ReverseSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering is a reversion of a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.ReversedCursor`1">
            <summary>
            Reverses the direction of a given cursor.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.ReversedCursor`1.#ctor(Waher.Persistence.Files.ICursor{`0},System.Int32)">
            <summary>
            Reverses the direction of a given cursor.
            </summary>
            <param name="Cursor">Cursor to underlying result set.</param>
            <param name="TimeoutMilliseconds">Time to wait to get access to underlying database.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.ReversedCursor`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.ReversedCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.ReversedCursor`1.CurrentSerializer">
            <summary>
            Serializer used to deserialize <see cref="P:Waher.Persistence.Files.Searching.ReversedCursor`1.Current"/>.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.ReversedCursor`1.CurrentTypeCompatible">
            <summary>
            If the curent object is type compatible with <typeparamref name="T"/> or not. If not compatible, <see cref="P:Waher.Persistence.Files.Searching.ReversedCursor`1.Current"/> 
            will be null, even if there exists an object at the current position.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.ReversedCursor`1.CurrentObjectId">
            <summary>
            Gets the Object ID of the current object.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.ReversedCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.ReversedCursor`1.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.ReversedCursor`1.MoveNextAsync">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.ReversedCursor`1.MovePreviousAsync">
            <summary>
            Advances the enumerator to the previous element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the previous element; false if
            the enumerator has passed the beginning of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.ReversedCursor`1.SameSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering corresponds to a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.ReversedCursor`1.ReverseSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering is a reversion of a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.SingletonCursor`1">
            <summary>
            Provides a cursor into a set of a single object.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SingletonCursor`1.#ctor(`0,Waher.Persistence.Files.Serialization.ObjectSerializer,System.Guid)">
            <summary>
            Provides a cursor into a set of a single object.
            </summary>
            <param name="Value">Singleton value.</param>
            <param name="Serializer">Serializer of <paramref name="Value"/>.</param>
            <param name="ObjectId">Object ID.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.SingletonCursor`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.SingletonCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.SingletonCursor`1.CurrentSerializer">
            <summary>
            Serializer used to deserialize <see cref="P:Waher.Persistence.Files.Searching.SingletonCursor`1.Current"/>.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.SingletonCursor`1.CurrentTypeCompatible">
            <summary>
            If the curent object is type compatible with <typeparamref name="T"/> or not. If not compatible, <see cref="P:Waher.Persistence.Files.Searching.SingletonCursor`1.Current"/> 
            will be null, even if there exists an object at the current position.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.SingletonCursor`1.CurrentObjectId">
            <summary>
            Gets the Object ID of the current object.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.SingletonCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SingletonCursor`1.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SingletonCursor`1.MoveNextAsync">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SingletonCursor`1.MovePreviousAsync">
            <summary>
            Advances the enumerator to the previous element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the previous element; false if
            the enumerator has passed the beginning of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SingletonCursor`1.SameSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering corresponds to a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SingletonCursor`1.ReverseSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering is a reversion of a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.SortedCursor`1">
            <summary>
            Provides a cursor into a sorted set of objects.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SortedCursor`1.#ctor(System.Collections.Generic.SortedDictionary{Waher.Persistence.Files.Searching.SortedReference{`0},System.Boolean},Waher.Persistence.Files.Storage.IndexRecords,System.Int32)">
            <summary>
            Provides a cursor into a sorted set of objects.
            </summary>
            <param name="SortedObjects">Sorted set of objects.</param>
            <param name="RecordHandler">Record handler.</param>
            <param name="TimeoutMilliseconds">Time to wait to get access to underlying database.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.SortedCursor`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.SortedCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.SortedCursor`1.CurrentSerializer">
            <summary>
            Serializer used to deserialize <see cref="P:Waher.Persistence.Files.Searching.SortedCursor`1.Current"/>.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.SortedCursor`1.CurrentTypeCompatible">
            <summary>
            If the curent object is type compatible with <typeparamref name="T"/> or not. If not compatible, <see cref="P:Waher.Persistence.Files.Searching.SortedCursor`1.Current"/> 
            will be null, even if there exists an object at the current position.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.SortedCursor`1.CurrentObjectId">
            <summary>
            Gets the Object ID of the current object.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.SortedCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SortedCursor`1.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SortedCursor`1.MoveNextAsync">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SortedCursor`1.MovePreviousAsync">
            <summary>
            Advances the enumerator to the previous element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the previous element; false if
            the enumerator has passed the beginning of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SortedCursor`1.SameSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering corresponds to a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SortedCursor`1.ReverseSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering is a reversion of a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.SortedReference`1">
            <summary>
            Sorted object reference.
            </summary>
            <typeparam name="T">Type of object being sorted.</typeparam>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SortedReference`1.#ctor(System.Byte[],System.Collections.Generic.IComparer{System.Byte[]},`0,Waher.Persistence.Files.Serialization.IObjectSerializer,System.Guid)">
            <summary>
            Sorted object reference.
            </summary>
            <param name="Key">Key</param>
            <param name="Comparer">Comparer</param>
            <param name="Value">Object value.</param>
            <param name="Serializer">Serializer used.</param>
            <param name="ObjectId">Object ID</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.SortedReference`1.Value">
            <summary>
            Object value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.SortedReference`1.Serializer">
            <summary>
            Serializer used.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.SortedReference`1.ObjectId">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.SortedReference`1.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
        </member>
        <member name="T:Waher.Persistence.Files.Searching.UnionCursor`1">
            <summary>
            Provides a cursor that joins results from multiple cursors. It only returns an object once, regardless of how many times
            it appears in the different child cursors.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.UnionCursor`1.#ctor(Waher.Persistence.Filters.Filter[],Waher.Persistence.Files.ObjectBTreeFile,System.Boolean)">
            <summary>
            Provides a cursor that joins results from multiple cursors. It only returns an object once, regardless of how many times
            it appears in the different child cursors.
            </summary>
            <param name="ChildFilters">Child filters.</param>
            <param name="File">File being searched.</param>
            <param name="Locked">If locked access is desired.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.UnionCursor`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.UnionCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.UnionCursor`1.CurrentSerializer">
            <summary>
            Serializer used to deserialize <see cref="P:Waher.Persistence.Files.Searching.UnionCursor`1.Current"/>.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.UnionCursor`1.CurrentTypeCompatible">
            <summary>
            If the curent object is type compatible with <typeparamref name="T"/> or not. If not compatible, <see cref="P:Waher.Persistence.Files.Searching.UnionCursor`1.Current"/> 
            will be null, even if there exists an object at the current position.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Searching.UnionCursor`1.CurrentObjectId">
            <summary>
            Gets the Object ID of the current object.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the enumeration has not started. 
            Call <see cref="M:Waher.Persistence.Files.Searching.UnionCursor`1.MoveNextAsync"/> to start the enumeration after creating or resetting it.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.UnionCursor`1.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.UnionCursor`1.MoveNextAsync">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if
            the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.UnionCursor`1.MovePreviousAsync">
            <summary>
            Advances the enumerator to the previous element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the previous element; false if
            the enumerator has passed the beginning of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.UnionCursor`1.SameSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering corresponds to a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Searching.UnionCursor`1.ReverseSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering is a reversion of a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.BinaryDeserializer">
            <summary>
            Manages binary deserialization of data.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.#ctor(System.String,System.Text.Encoding,System.Byte[],System.UInt32)">
            <summary>
            Manages binary deserialization of data.
            </summary>
            <param name="CollectionName">Name of current collection.</param>
            <param name="Encoding">Encoding to use for text.</param>
            <param name="Data">Binary data to deserialize.</param>
            <param name="BlockLimit">Maximum block index + 1</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.#ctor(System.String,System.Text.Encoding,System.Byte[],System.UInt32,System.Boolean)">
            <summary>
            Manages binary deserialization of data.
            </summary>
            <param name="CollectionName">Name of current collection.</param>
            <param name="Encoding">Encoding to use for text.</param>
            <param name="Data">Binary data to deserialize.</param>
            <param name="BlockLimit">Maximum block index + 1</param>
            <param name="Debug">If debug output is to be emitted.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.#ctor(System.String,System.Text.Encoding,System.Byte[],System.UInt32,System.Int32)">
            <summary>
            Manages binary deserialization of data.
            </summary>
            <param name="CollectionName">Name of current collection.</param>
            <param name="Encoding">Encoding to use for text.</param>
            <param name="Data">Binary data to deserialize.</param>
            <param name="BlockLimit">Maximum block index + 1</param>
            <param name="StartPosition">Starting position.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.#ctor(System.String,System.Text.Encoding,System.Byte[],System.UInt32,System.Int32,System.Boolean)">
            <summary>
            Manages binary deserialization of data.
            </summary>
            <param name="CollectionName">Name of current collection.</param>
            <param name="Encoding">Encoding to use for text.</param>
            <param name="Data">Binary data to deserialize.</param>
            <param name="StartPosition">Starting position.</param>
            <param name="BlockLimit">Maximum block index + 1</param>
            <param name="Debug">If debug output is to be emitted.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.BinaryDeserializer.CollectionName">
            <summary>
            Name of current collection.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadBoolean">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadByte">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadInt16">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadInt32">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadInt64">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadSByte">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadUInt16">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadUInt32">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadBlockLink">
            <summary>
            Reads a block link
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadUInt64">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadDecimal">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadDouble">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadSingle">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadDateTime">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadDateTimeOffset">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadTimeSpan">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadChar">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadEnum(System.Type)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="EnumType">Type of enum to read.</param>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadByteArray">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadRaw(System.Int32)">
            <summary>
            Deserializes raw bytes.
            </summary>
            <param name="NrBytes">Number of bytes.</param>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadString">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadGuid">
            <summary>
            Deserializes a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadVariableLengthUInt64">
            <summary>
            Deserializes a variable-length integer value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadBit">
            <summary>
            Deserializes a bit.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.ReadBits(System.Int32)">
            <summary>
            Deserializes a value consisting of a fixed number of bits.
            </summary>
            <param name="NrBits">Number of bits to deserialize.</param>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.FlushBits">
            <summary>
            Flushes any bit field values.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.BinaryDeserializer.Position">
            <summary>
            Current position.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.BinaryDeserializer.Data">
            <summary>
            Binary data being parsed.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.BinaryDeserializer.BytesLeft">
            <summary>
            Number of bytes left to read.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.Restart(System.Byte[],System.Int32)">
            <summary>
            Resets the serializer, allowing for the serialization of another object using the same resources.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.GetBookmark">
            <summary>
            Gets a bookmark of the current position.
            </summary>
            <returns>Bookmark</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SetBookmark(Waher.Persistence.Files.Serialization.StreamBookmark)">
            <summary>
            Sets the current position to the position contained in a bookmark.
            </summary>
            <param name="Bookmark">Bookmark</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipBoolean">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipByte">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipInt16">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipInt32">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipInt64">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipSByte">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipUInt16">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipUInt32">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipUInt64">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipDecimal">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipDouble">
            <summary>
            Skips a value.
            </summary>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipSingle">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipDateTime">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipDateTimeOffset">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipTimeSpan">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipChar">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipEnum">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipByteArray">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipRaw(System.Int32)">
            <summary>
            Skips raw bytes.
            </summary>
            <param name="NrBytes">Number of bytes.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipString">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipGuid">
            <summary>
            Skips a value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipVariableLengthUInt64">
            <summary>
            Skips a variable-length integer value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipBit">
            <summary>
            Skips a bit.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinaryDeserializer.SkipBits(System.Int32)">
            <summary>
            Skips a value consisting of a fixed number of bits.
            </summary>
            <param name="NrBits">Number of bits to deserialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.BinarySerializer">
            <summary>
            Manages binary serialization of data.
            
            Note: The serializer is not thread safe.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Manages binary serialization of data.
            
            Note: The serializer is not thread safe.
            </summary>
            <param name="CollectionName">Name of current collection.</param>
            <param name="Encoding">Encoding to use for text.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.#ctor(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Manages binary serialization of data.
            
            Note: The serializer is not thread safe.
            </summary>
            <param name="CollectionName">Name of current collection.</param>
            <param name="Encoding">Encoding to use for text.</param>
            <param name="Debug">If debug output is to be provided.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.#ctor(System.String,System.Text.Encoding,System.IO.MemoryStream)">
            <summary>
            Manages binary serialization of data.
            
            Note: The serializer is not thread safe.
            </summary>
            <param name="CollectionName">Name of current collection.</param>
            <param name="Encoding">Encoding to use for text.</param>
            <param name="Output">Data will be output to this stream.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.BinarySerializer.CollectionName">
            <summary>
            Name of current collection.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.BinarySerializer.Encoding">
            <summary>
            Text encoding to use when serializing strings.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.Boolean)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.Byte)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.Int16)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.Int32)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.Int64)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.SByte)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.UInt16)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.UInt32)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.UInt64)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.Decimal)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.Double)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.Single)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.DateTime)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.DateTimeOffset)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.TimeSpan)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.Char)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.Enum)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.Byte[])">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.WriteRaw(System.Byte[])">
            <summary>
            Writes some bytes to the output.
            </summary>
            <param name="Data">Data to write.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.String)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Write(System.Guid)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.WriteVariableLengthUInt64(System.UInt64)">
            <summary>
            Serializes a variable-length integer value.
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.WriteBit(System.Boolean)">
            <summary>
            Serializes a bit.
            </summary>
            <param name="Bit">Bit value.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.WriteBits(System.UInt32,System.Int32)">
            <summary>
            Serializes a value consisting of a fixed number of bits.
            </summary>
            <param name="Value">Bit field value.</param>
            <param name="NrBits">Number of bits to serialize.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.FlushBits">
            <summary>
            Flushes any bit field values.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.Restart">
            <summary>
            Resets the serializer, allowing for the serialization of another object using the same resources.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.BinarySerializer.GetSerialization">
            <summary>
            Gets the binary serialization.
            </summary>
            <returns>Binary serialization.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase">
            <summary>
            Abstract base class for generated object serializers.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.IsNullable">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ValueType">
            <summary>
            If the underlying object is nullable.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.TryGetFieldValue(System.String,System.Object,System.Object@)">
            <summary>
            Gets the value of a field or property of an object, given its name.
            </summary>
            <param name="FieldName">Name of field or property.</param>
            <param name="Object">Object.</param>
            <param name="Value">Corresponding field or property value, if found, or null otherwise.</param>
            <returns>If the corresponding field or property was found.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadBoolean(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a boolean value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Boolean value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableBoolean(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable boolean value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable boolean value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadByte(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a byte value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Byte value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableByte(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable byte value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable byte value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadSByte(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a signed byte value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Signed Byte value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableSByte(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable signed byte value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable signed byte value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadInt16(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a 16-bit integer value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>16-bit integer value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableInt16(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable 16-bit integer value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable 16-bit integer value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadInt32(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a 32-bit integer value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>32-bit integer value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableInt32(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable 32-bit integer value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable 32-bit integer value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableEnum(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32,System.Type)">
            <summary>
            Reads a nullable enum stored as a nullable 32-bit integer value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <param name="EnumType">Enumeration type.</param>
            <returns>Nullable enumeration value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadInt64(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a 64-bit integer value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>64-bit integer value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableInt64(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable 64-bit integer value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable 64-bit integer value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadUInt16(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a 16-bit unsigned integer value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>16-bit unsigned integer value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableUInt16(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable 16-bit unsigned integer value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable unsigned 16-bit integer value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadUInt32(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a 32-bit unsigned integer value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>32-bit unsigned integer value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableUInt32(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable 32-bit unsigned integer value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable unsigned 32-bit integer value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadUInt64(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a 64-bit unsigned integer value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>64-bit unsigned integer value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableUInt64(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable 64-bit unsigned integer value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable unsigned 64-bit integer value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadDecimal(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a decimal value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Decimal value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableDecimal(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable decimal value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable decimal value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadDouble(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a double value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Double value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableDouble(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable double value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable double value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadSingle(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a single value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Single value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableSingle(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable single value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable single value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadChar(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a char value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Char value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableChar(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable char value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable char value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadDateTime(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a date &amp; time value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>DateTime value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableDateTime(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable date &amp; time value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable DateTime value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadDateTimeOffset(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a date &amp; time value with offset.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>DateTimeOffset value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableDateTimeOffset(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable date &amp; time value with offset.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable DateTimeOffset value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadTimeSpan(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a time span value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>TimeSpan value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableTimeSpan(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable time span value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable TimeSpan value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadGuid(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a GUID value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Guid value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadNullableGuid(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a nullable GUID value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>Nullable Guid value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadString(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a string value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>String value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadByteArray(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a string value.
            </summary>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>String value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadArray``1(Waher.Persistence.Files.FilesProvider,Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a typed array.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="Provider">Database provider object.</param>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>String value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.ReadArray(System.Type,Waher.Persistence.Files.FilesProvider,Waher.Persistence.Files.Serialization.BinaryDeserializer,System.UInt32)">
            <summary>
            Reads a typed array.
            </summary>
            <param name="T">Element type.</param>
            <param name="Provider">Database provider object.</param>
            <param name="Reader">Binary reader.</param>
            <param name="FieldDataType">Field data type.</param>
            <returns>String value.</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="FieldDataType"/> was invalid.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.WriteArray``1(Waher.Persistence.Files.FilesProvider,Waher.Persistence.Files.Serialization.BinarySerializer,``0[])">
            <summary>
            Writes a typed array.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="Provider">Database provider object.</param>
            <param name="Writer">Binary writer.</param>
            <param name="Value">Value to serialize.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GeneratedObjectSerializerBase.WriteArray(System.Type,Waher.Persistence.Files.FilesProvider,Waher.Persistence.Files.Serialization.BinarySerializer,System.Array)">
            <summary>
            Writes an array.
            </summary>
            <param name="T">Element type.</param>
            <param name="Provider">Database provider object.</param>
            <param name="Writer">Binary writer.</param>
            <param name="Value">Value to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.GenericObjectSerializer">
            <summary>
            Provides a generic object serializer.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GenericObjectSerializer.#ctor(Waher.Persistence.Files.FilesProvider)">
            <summary>
            Provides a generic object serializer.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GenericObjectSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GenericObjectSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean,System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="CheckFieldNames">If field names are to be extended.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GenericObjectSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GenericObjectSerializer.TryGetFieldValue(System.String,System.Object,System.Object@)">
            <summary>
            Gets the value of a field or property of an object, given its name.
            </summary>
            <param name="FieldName">Name of field or property.</param>
            <param name="Object">Object.</param>
            <param name="Value">Corresponding field or property value, if found, or null otherwise.</param>
            <returns>If the corresponding field or property was found.</returns>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.GenericObjectSerializer.ObjectIdMemberName">
            <summary>
            Mamber name of the field or property holding the Object ID, if any. If there are no such member, this property returns null.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.GenericObjectSerializer.HasObjectIdField">
            <summary>
            If the class has an Object ID field.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GenericObjectSerializer.HasObjectId(System.Object)">
            <summary>
            If the class has an Object ID.
            </summary>
            <param name="Value">Object reference.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GenericObjectSerializer.TrySetObjectId(System.Object,System.Guid)">
            <summary>
            Tries to set the object id of an object.
            </summary>
            <param name="Value">Object reference.</param>
            <param name="ObjectId">Object ID</param>
            <returns>If the object has an Object ID field or property that could be set.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GenericObjectSerializer.GetObjectId(System.Object,System.Boolean)">
            <summary>
            Gets the Object ID for a given object.
            </summary>
            <param name="Value">Object reference.</param>
            <param name="InsertIfNotFound">Insert object into database with new Object ID, if no Object ID is set.</param>
            <returns>Object ID for <paramref name="Value"/>.</returns>
            <exception cref="T:System.NotSupportedException">Thrown, if the corresponding class does not have an Object ID property, 
            or if the corresponding property type is not supported.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GenericObjectSerializer.IsDefaultValue(System.String,System.Object)">
            <summary>
            Checks if a given field value corresponds to the default value for the corresponding field.
            </summary>
            <param name="FieldName">Name of field.</param>
            <param name="Value">Field value.</param>
            <returns>If the field value corresponds to the default value of the corresponding field.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.GenericObjectSerializer.CollectionName(System.Object)">
            <summary>
            Name of collection objects of this type is to be stored in, if available. If not available, this property returns null.
            </summary>
            <param name="Object">Object in the current context. If null, the default collection name is requested.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.IObjectSerializer">
            <summary>
            Interface for object serializers.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.IObjectSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.IObjectSerializer.IsNullable">
            <summary>
            If the underlying object is nullable.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.IObjectSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.IObjectSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.IObjectSerializer.TryGetFieldValue(System.String,System.Object,System.Object@)">
            <summary>
            Gets the value of a field or property of an object, given its name.
            </summary>
            <param name="FieldName">Name of field or property.</param>
            <param name="Object">Object.</param>
            <param name="Value">Corresponding field or property value, if found, or null otherwise.</param>
            <returns>If the corresponding field or property was found.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.KeyValueSerializer">
            <summary>
            Serializer for objects of type KeyValuePair&lt;string, object&gt;.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.KeyValueSerializer.#ctor(Waher.Persistence.Files.FilesProvider,Waher.Persistence.Files.Serialization.GenericObjectSerializer)">
            <summary>
            Serializer for objects of type KeyValuePair&lt;string, object&gt;.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.KeyValueSerializer.IsNullable">
            <summary>
            If the underlying object is nullable.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.KeyValueSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.KeyValueSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.KeyValueSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean,System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="CheckFieldNames">If field names are to be extended.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.KeyValueSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.KeyValueSerializer.TryGetFieldValue(System.String,System.Object,System.Object@)">
            <summary>
            Gets the value of a field or property of an object, given its name.
            </summary>
            <param name="FieldName">Name of field or property.</param>
            <param name="Object">Object.</param>
            <param name="Value">Corresponding field or property value, if found, or null otherwise.</param>
            <returns>If the corresponding field or property was found.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.Model.FieldMember">
            <summary>
            Field member.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.Model.FieldMember.#ctor(System.Reflection.FieldInfo,System.UInt64)">
            <summary>
            Field member.
            </summary>
            <param name="FI">Field information.</param>
            <param name="FieldCode">Field Code.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.Model.FieldMember.Get(System.Object)">
            <summary>
            Gets the member value.
            </summary>
            <param name="Object">Object.</param>
            <returns>Member value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.Model.FieldMember.Set(System.Object,System.Object)">
            <summary>
            Sets the member value.
            </summary>
            <param name="Object">Object.</param>
            <param name="Value">Member value.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.Model.Member">
            <summary>
            Class member.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.Model.Member.#ctor(System.String,System.UInt64,System.Type)">
            <summary>
            Class member.
            </summary>
            <param name="Name">Member name.</param>
            <param name="FieldCode">Field Code.</param>
            <param name="MemberType">Member type.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.Name">
            <summary>
            Member name.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.MemberType">
            <summary>
            Member type.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.MemberTypeInfo">
            <summary>
            Member type information.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.MemberTypeCode">
            <summary>
            Member type code.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.MemberFieldDataTypeCode">
            <summary>
            Member field data type code.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.FieldCode">
            <summary>
            Field Code.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.IsNestedObject">
            <summary>
            If the member type represents a nested object.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.DefaultValue">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.IsDefaultValueDefined">
            <summary>
            If a default value is defined for the member.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.ByReference">
            <summary>
            If value is stored by reference.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.Nullable">
            <summary>
            If value is stored by reference.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.NestedSerializer">
            <summary>
            Nested serializer.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.IsEnum">
            <summary>
            If the member is an enumeration.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.Model.Member.HasFlags">
            <summary>
            If the member is an enumeration using flag values.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.Model.Member.Get(System.Object)">
            <summary>
            Gets the member value.
            </summary>
            <param name="Object">Object.</param>
            <returns>Member value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.Model.Member.Set(System.Object,System.Object)">
            <summary>
            Sets the member value.
            </summary>
            <param name="Object">Object.</param>
            <param name="Value">Member value.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.Model.Member.HasDefaultValue(System.Object)">
            <summary>
            If the object member has the default value.
            </summary>
            <param name="Object">Object.</param>
            <returns>If its member has the default value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.Model.Member.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.Model.PropertyMember">
            <summary>
            Property member.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.Model.PropertyMember.#ctor(System.Reflection.PropertyInfo,System.UInt64)">
            <summary>
            Property member.
            </summary>
            <param name="PI">Property information.</param>
            <param name="FieldCode">Field Code.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.Model.PropertyMember.Get(System.Object)">
            <summary>
            Gets the member value.
            </summary>
            <param name="Object">Object.</param>
            <returns>Member value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.Model.PropertyMember.Set(System.Object,System.Object)">
            <summary>
            Sets the member value.
            </summary>
            <param name="Object">Object.</param>
            <param name="Value">Member value.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableBooleanSerializer">
            <summary>
            Serializes a nullable <see cref="T:System.Boolean"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableBooleanSerializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.Boolean"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableBooleanSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableBooleanSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableBooleanSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableByteSerializer">
            <summary>
            Serializes a nullable <see cref="T:System.Byte"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableByteSerializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.Byte"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableByteSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableByteSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableByteSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableCharSerializer">
            <summary>
            Serializes a nullable <see cref="T:System.Char"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableCharSerializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.Char"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableCharSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableCharSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableCharSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableDateTimeOffsetSerializer">
            <summary>
            Serializes a nullable <see cref="T:System.DateTimeOffset"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableDateTimeOffsetSerializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.DateTimeOffset"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableDateTimeOffsetSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableDateTimeOffsetSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableDateTimeOffsetSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableDateTimeSerializer">
            <summary>
            Serializes a nullable <see cref="T:System.DateTime"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableDateTimeSerializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.DateTime"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableDateTimeSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableDateTimeSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableDateTimeSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableDecimalSerializer">
            <summary>
            Serializes a nullable <see cref="T:System.Decimal"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableDecimalSerializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.Decimal"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableDecimalSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableDecimalSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableDecimalSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableDoubleSerializer">
            <summary>
            Serializes a nullable <see cref="T:System.Double"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableDoubleSerializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.Double"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableDoubleSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableDoubleSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableDoubleSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableEnumSerializer">
            <summary>
            Serializes a nullable enumerated value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableEnumSerializer.#ctor(System.Type)">
            <summary>
            Serializes a nullable enumerated value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableEnumSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableEnumSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableEnumSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableGuidSerializer">
            <summary>
            Serializes a nullable <see cref="T:System.Guid"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableGuidSerializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.Guid"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableGuidSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableGuidSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableGuidSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt16Serializer">
            <summary>
            Serializes a nullable <see cref="T:System.Int16"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt16Serializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.Int16"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt16Serializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt16Serializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt16Serializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt32Serializer">
            <summary>
            Serializes a nullable <see cref="T:System.Int32"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt32Serializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.Int32"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt32Serializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt32Serializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt32Serializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt64Serializer">
            <summary>
            Serializes a nullable <see cref="T:System.Int64"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt64Serializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.Int64"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt64Serializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt64Serializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableInt64Serializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableSByteSerializer">
            <summary>
            Serializes a nullable <see cref="T:System.SByte"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableSByteSerializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.SByte"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableSByteSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableSByteSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableSByteSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableSingleSerializer">
            <summary>
            Serializes a nullable <see cref="T:System.Single"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableSingleSerializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.Single"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableSingleSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableSingleSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableSingleSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableTimeSpanSerializer">
            <summary>
            Serializes a nullable <see cref="T:System.TimeSpan"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableTimeSpanSerializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.TimeSpan"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableTimeSpanSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableTimeSpanSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableTimeSpanSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt16Serializer">
            <summary>
            Serializes a nullable <see cref="T:System.UInt16"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt16Serializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.UInt16"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt16Serializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt16Serializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt16Serializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt32Serializer">
            <summary>
            Serializes a nullable <see cref="T:System.UInt32"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt32Serializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.UInt32"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt32Serializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt32Serializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt32Serializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt64Serializer">
            <summary>
            Serializes a nullable <see cref="T:System.UInt64"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt64Serializer.#ctor">
            <summary>
            Serializes a nullable <see cref="T:System.UInt64"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt64Serializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt64Serializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableUInt64Serializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.NullableTypes.NullableValueTypeSerializer">
            <summary>
            Abstract base class for nullable value type serializers.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableValueTypeSerializer.#ctor">
            <summary>
            Abstract base class for nullable value type serializers.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableValueTypeSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.NullableTypes.NullableValueTypeSerializer.IsNullable">
            <summary>
            If the value being serialized, can be null.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableValueTypeSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableValueTypeSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.NullableTypes.NullableValueTypeSerializer.TryGetFieldValue(System.String,System.Object,System.Object@)">
            <summary>
            Gets the value of a field or property of an object, given its name.
            </summary>
            <param name="FieldName">Name of field or property.</param>
            <param name="Object">Object.</param>
            <param name="Value">Corresponding field or property value, if found, or null otherwise.</param>
            <returns>If the corresponding field or property was found.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ObjectSerializer">
            <summary>
            Serializes a class, taking into account attributes defined in <see cref="N:Waher.Persistence.Attributes"/>.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_BOOLEAN">
            <summary>
            Represents a <see cref="T:System.Boolean"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_BYTE">
            <summary>
            Represents a <see cref="T:System.Byte"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_INT16">
            <summary>
            Represents a <see cref="T:System.Int16"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_INT32">
            <summary>
            Represents a <see cref="T:System.Int32"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_INT64">
            <summary>
            Represents a <see cref="T:System.Int64"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_SBYTE">
            <summary>
            Represents a <see cref="T:System.SByte"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_UINT16">
            <summary>
            Represents a <see cref="T:System.UInt16"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_UINT32">
            <summary>
            Represents a <see cref="T:System.UInt32"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_UINT64">
            <summary>
            Represents a <see cref="T:System.UInt64"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_DECIMAL">
            <summary>
            Represents a <see cref="T:System.Decimal"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_DOUBLE">
            <summary>
            Represents a <see cref="T:System.Double"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_SINGLE">
            <summary>
            Represents a <see cref="T:System.Single"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_DATETIME">
            <summary>
            Represents a <see cref="T:System.DateTime"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_TIMESPAN">
            <summary>
            Represents a <see cref="T:System.TimeSpan"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_CHAR">
            <summary>
            Represents a <see cref="T:System.Char"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_STRING">
            <summary>
            Represents a <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_ENUM">
            <summary>
            Represents an enumerated value.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_BYTEARRAY">
            <summary>
            Represents a byte array.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_GUID">
            <summary>
            Represents a <see cref="T:System.Guid"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_DATETIMEOFFSET">
            <summary>
            Represents a <see cref="T:System.DateTimeOffset"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_CI_STRING">
            <summary>
            Represents a <see cref="T:Waher.Persistence.CaseInsensitiveString"/>
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_MIN">
            <summary>
            Represents the smallest possible value for the field type being searched or filtered.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_MAX">
            <summary>
            Represents the largest possible value for the field type being searched or filtered.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_NULL">
            <summary>
            Represents a null value.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_ARRAY">
            <summary>
            Represents an arary.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.TYPE_OBJECT">
            <summary>
            Represents an object.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Serialization.ObjectSerializer.provider">
            <summary>
            Files provider reference.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ObjectSerializer.#ctor(System.Type,Waher.Persistence.Files.FilesProvider,System.Boolean)">
            <summary>
            Serializes a class, taking into account attributes defined in <see cref="N:Waher.Persistence.Attributes"/>.
            </summary>
            <param name="Type">Type to serialize.</param>
            <param name="Provider">Database provider.</param>
            <param name="Debug">If debug information is to be included for generated code.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ObjectSerializer.Escape(System.String)">
            <summary>
            Escapes a string to be enclosed between double quotes.
            </summary>
            <param name="s"></param>
            <returns>String with special characters escaped.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ObjectSerializer.CollectionName(System.Object)">
            <summary>
            Name of collection objects of this type is to be stored in, if available. If not available, this property returns null.
            </summary>
            <param name="Object">Object in the current context. If null, the default collection name is requested.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ObjectSerializer.ValueType">
            <summary>
            Gets the type of the value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ObjectSerializer.Indices">
            <summary>
            Array of indices defined for the underlying type.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ObjectSerializer.IndicesCreated">
            <summary>
            If index files have been checked and created.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ObjectSerializer.IsNullable">
            <summary>
            If the type is nullable.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ObjectSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Data type of object.</param>
            <param name="Embedded">If the object is embedded in another object.</param>
            <returns>A deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ObjectSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Writer">Binary serializer.</param>
            <param name="WriteTypeCode">If a type code is to be written.</param>
            <param name="Embedded">If the object is embedded in another object.</param>
            <param name="Value">Value to serialize.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ObjectSerializer.ObjectIdMemberName">
            <summary>
            Mamber name of the field or property holding the Object ID, if any. If there are no such member, this property returns null.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ObjectSerializer.HasObjectIdField">
            <summary>
            If the class has an Object ID field.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ObjectSerializer.HasObjectId(System.Object)">
            <summary>
            If the class has an Object ID.
            </summary>
            <param name="Value">Object reference.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ObjectSerializer.TrySetObjectId(System.Object,System.Guid)">
            <summary>
            Tries to set the object id of an object.
            </summary>
            <param name="Value">Object reference.</param>
            <param name="ObjectId">Object ID</param>
            <returns>If the object has an Object ID field or property that could be set.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ObjectSerializer.GetObjectId(System.Object,System.Boolean)">
            <summary>
            Gets the Object ID for a given object.
            </summary>
            <param name="Value">Object reference.</param>
            <param name="InsertIfNotFound">Insert object into database with new Object ID, if no Object ID is set.</param>
            <returns>Object ID for <paramref name="Value"/>.</returns>
            <exception cref="T:System.NotSupportedException">Thrown, if the corresponding class does not have an Object ID property, 
            or if the corresponding property type is not supported.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ObjectSerializer.IsDefaultValue(System.String,System.Object)">
            <summary>
            Checks if a given field value corresponds to the default value for the corresponding field.
            </summary>
            <param name="FieldName">Name of field.</param>
            <param name="Value">Field value.</param>
            <returns>If the field value corresponds to the default value of the corresponding field.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ObjectSerializer.TryGetFieldValue(System.String,System.Object,System.Object@)">
            <summary>
            Gets the value of a field or property of an object, given its name.
            </summary>
            <param name="FieldName">Name of field or property.</param>
            <param name="Object">Object.</param>
            <param name="Value">Corresponding field or property value, if found, or null otherwise.</param>
            <returns>If the corresponding field or property was found.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ObjectSerializer.GetMembers(System.Reflection.TypeInfo)">
            <summary>
            Gets members from a type, including inherited members.
            </summary>
            <param name="T">Type information.</param>
            <returns>Enumerated set of members.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ReferenceTypes.ArraySerializer`1">
            <summary>
            Generic serializer of array types.
            </summary>
            <typeparam name="T">Element type.</typeparam>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.ArraySerializer`1.#ctor(Waher.Persistence.Files.FilesProvider)">
            <summary>
            Generic serializer of array types.
            </summary>
            <param name="Provider">Files provider.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ReferenceTypes.ArraySerializer`1.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ReferenceTypes.ArraySerializer`1.IsNullable">
            <summary>
            If the value being serialized, can be null.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.ArraySerializer`1.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.ArraySerializer`1.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.ArraySerializer`1.TryGetFieldValue(System.String,System.Object,System.Object@)">
            <summary>
            Gets the value of a field or property of an object, given its name.
            </summary>
            <param name="FieldName">Name of field or property.</param>
            <param name="Object">Object.</param>
            <param name="Value">Corresponding field or property value, if found, or null otherwise.</param>
            <returns>If the corresponding field or property was found.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ReferenceTypes.ByteArraySerializer">
            <summary>
            Serializes a byte array.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.ByteArraySerializer.#ctor">
            <summary>
            Serializes a byte array.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ReferenceTypes.ByteArraySerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ReferenceTypes.ByteArraySerializer.IsNullable">
            <summary>
            If the value being serialized, can be null.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.ByteArraySerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.ByteArraySerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.ByteArraySerializer.TryGetFieldValue(System.String,System.Object,System.Object@)">
            <summary>
            Gets the value of a field or property of an object, given its name.
            </summary>
            <param name="FieldName">Name of field or property.</param>
            <param name="Object">Object.</param>
            <param name="Value">Corresponding field or property value, if found, or null otherwise.</param>
            <returns>If the corresponding field or property was found.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ReferenceTypes.CaseInsensitiveStringSerializer">
            <summary>
            Serializes a <see cref="T:Waher.Persistence.CaseInsensitiveString"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.CaseInsensitiveStringSerializer.#ctor">
            <summary>
            Serializes a <see cref="T:Waher.Persistence.CaseInsensitiveString"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ReferenceTypes.CaseInsensitiveStringSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ReferenceTypes.CaseInsensitiveStringSerializer.IsNullable">
            <summary>
            If the value being serialized, can be null.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.CaseInsensitiveStringSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.CaseInsensitiveStringSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.CaseInsensitiveStringSerializer.TryGetFieldValue(System.String,System.Object,System.Object@)">
            <summary>
            Gets the value of a field or property of an object, given its name.
            </summary>
            <param name="FieldName">Name of field or property.</param>
            <param name="Object">Object.</param>
            <param name="Value">Corresponding field or property value, if found, or null otherwise.</param>
            <returns>If the corresponding field or property was found.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ReferenceTypes.StringSerializer">
            <summary>
            Serializes a <see cref="T:System.String"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.StringSerializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.String"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ReferenceTypes.StringSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ReferenceTypes.StringSerializer.IsNullable">
            <summary>
            If the value being serialized, can be null.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.StringSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.StringSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ReferenceTypes.StringSerializer.TryGetFieldValue(System.String,System.Object,System.Object@)">
            <summary>
            Gets the value of a field or property of an object, given its name.
            </summary>
            <param name="FieldName">Name of field or property.</param>
            <param name="Object">Object.</param>
            <param name="Value">Corresponding field or property value, if found, or null otherwise.</param>
            <returns>If the corresponding field or property was found.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.StreamBookmark">
            <summary>
            Serialization bookmark.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.StreamBookmark.#ctor(System.Int32,System.Byte)">
            <summary>
            Serialization bookmark.
            </summary>
            <param name="Pos">Current position.</param>
            <param name="BitOffset">Current bit offset.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.StreamBookmark.Position">
            <summary>
            Position.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.StreamBookmark.BitOffset">
            <summary>
            Bit offset
            </summary>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.BooleanSerializer">
            <summary>
            Serializes a <see cref="T:System.Boolean"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.BooleanSerializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.Boolean"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.BooleanSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.BooleanSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.BooleanSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.ByteSerializer">
            <summary>
            Serializes a <see cref="T:System.Byte"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.ByteSerializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.Byte"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.ByteSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.ByteSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.ByteSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.CharSerializer">
            <summary>
            Serializes a <see cref="T:System.Char"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.CharSerializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.Char"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.CharSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.CharSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.CharSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.DateTimeOffsetSerializer">
            <summary>
            Serializes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.DateTimeOffsetSerializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.DateTimeOffsetSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.DateTimeOffsetSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.DateTimeOffsetSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.DateTimeSerializer">
            <summary>
            Serializes a <see cref="T:System.DateTime"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.DateTimeSerializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.DateTime"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.DateTimeSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.DateTimeSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.DateTimeSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.DecimalSerializer">
            <summary>
            Serializes a <see cref="T:System.Decimal"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.DecimalSerializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.Decimal"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.DecimalSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.DecimalSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.DecimalSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.DoubleSerializer">
            <summary>
            Serializes a <see cref="T:System.Double"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.DoubleSerializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.Double"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.DoubleSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.DoubleSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.DoubleSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.EnumSerializer">
            <summary>
            Serializes an enumerated value value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.EnumSerializer.#ctor(System.Type)">
            <summary>
            Serializes an enumerated value.
            </summary>
            <param name="EnumType">Enumerated type.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.EnumSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.EnumSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.EnumSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.GuidSerializer">
            <summary>
            Serializes a <see cref="T:System.Guid"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.GuidSerializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.Guid"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.GuidSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.GuidSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.GuidSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.Int16Serializer">
            <summary>
            Serializes a <see cref="T:System.Int16"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.Int16Serializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.Int16"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.Int16Serializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.Int16Serializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.Int16Serializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.Int32Serializer">
            <summary>
            Serializes a <see cref="T:System.Int32"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.Int32Serializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.Int32"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.Int32Serializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.Int32Serializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.Int32Serializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.Int64Serializer">
            <summary>
            Serializes a <see cref="T:System.Int64"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.Int64Serializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.Int64"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.Int64Serializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.Int64Serializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.Int64Serializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.SByteSerializer">
            <summary>
            Serializes a <see cref="T:System.SByte"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.SByteSerializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.SByte"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.SByteSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.SByteSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.SByteSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.SingleSerializer">
            <summary>
            Serializes a <see cref="T:System.Single"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.SingleSerializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.Single"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.SingleSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.SingleSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.SingleSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.TimeSpanSerializer">
            <summary>
            Serializes a <see cref="T:System.TimeSpan"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.TimeSpanSerializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.TimeSpan"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.TimeSpanSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.TimeSpanSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.TimeSpanSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.UInt16Serializer">
            <summary>
            Serializes a <see cref="T:System.UInt16"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.UInt16Serializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.UInt16"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.UInt16Serializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.UInt16Serializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.UInt16Serializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.UInt32Serializer">
            <summary>
            Serializes a <see cref="T:System.UInt32"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.UInt32Serializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.UInt32"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.UInt32Serializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.UInt32Serializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.UInt32Serializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.UInt64Serializer">
            <summary>
            Serializes a <see cref="T:System.UInt64"/> value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.UInt64Serializer.#ctor">
            <summary>
            Serializes a <see cref="T:System.UInt64"/> value.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.UInt64Serializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.UInt64Serializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.UInt64Serializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Serialization.ValueTypes.ValueTypeSerializer">
            <summary>
            Abstract base class for value type serializers.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.ValueTypeSerializer.#ctor">
            <summary>
            Abstract base class for value type serializers.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.ValueTypeSerializer.ValueType">
            <summary>
            What type of object is being serialized.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Serialization.ValueTypes.ValueTypeSerializer.IsNullable">
            <summary>
            If the value being serialized, can be null.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.ValueTypeSerializer.Deserialize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Deserializes an object from a binary source.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="DataType">Optional datatype. If not provided, will be read from the binary source.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.ValueTypeSerializer.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Serializes an object to a binary destination.
            </summary>
            <param name="Writer">Binary destination.</param>
            <param name="WriteTypeCode">If a type code is to be output.</param>
            <param name="Embedded">If the object is embedded into another.</param>
            <param name="Value">The actual object to serialize.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Serialization.ValueTypes.ValueTypeSerializer.TryGetFieldValue(System.String,System.Object,System.Object@)">
            <summary>
            Gets the value of a field or property of an object, given its name.
            </summary>
            <param name="FieldName">Name of field or property.</param>
            <param name="Object">Object.</param>
            <param name="Value">Corresponding field or property value, if found, or null otherwise.</param>
            <returns>If the corresponding field or property was found.</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Statistics.FileStatistics">
            <summary>
            Contains information about a file.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Statistics.FileStatistics.#ctor(System.UInt32,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Contains information about a file.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.BlockSize">
            <summary>
            Block size
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrSearches">
            <summary>
            Number of searches performed against the file.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrFullFileScans">
            <summary>
            Number of searches performed, resulting in full file scans.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrBlocks">
            <summary>
            Number of blocks
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrBytesUsed">
            <summary>
            Number of bytes used.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrBytesUnused">
            <summary>
            Number of bytes unused.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrBytesTotal">
            <summary>
            Total number of bytes in file.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrBlobBlocks">
            <summary>
            Number of BLOB blocks
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrBlobBytesUsed">
            <summary>
            Number of BLOB bytes used.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrBlobBytesUnused">
            <summary>
            Number of BLOB bytes unused.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrBlobBytesTotal">
            <summary>
            Total number of BLOB bytes in file.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.Usage">
            <summary>
            Usage, in percent.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrObjects">
            <summary>
            Number of objects stored.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.MinObjectSize">
            <summary>
            Size of smallest object.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.MaxObjectSize">
            <summary>
            Size of largest object.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.MinObjectsPerBlock">
            <summary>
            Smallest number of objects in a block.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.MaxObjectsPerBlock">
            <summary>
            Largest number of objects in a block.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.MinBytesUsedPerBlock">
            <summary>
            Smallest number of bytes used in a block.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.MaxBytesUsedPerBlock">
            <summary>
            Largest number of bytes used in a block.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.AverageObjectSize">
            <summary>
            Average size of object.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.AverageObjectsPerBlock">
            <summary>
            Average number of objects per block.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.AverageBytesUsedPerBlock">
            <summary>
            Average bytes used per block.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.MinDepth">
            <summary>
            Depth of most shallow leaf.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.MaxDepth">
            <summary>
            Depth of deepest leaf.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrBlockLoads">
            <summary>
            Number of blocks load operations performed.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrCacheLoads">
            <summary>
            Number of blocks load operations performed, where result was fetched from internal cache.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrBlockSaves">
            <summary>
            Number of blocks save operations performed.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrBlobBlockLoads">
            <summary>
            Number of BLOB blocks load operations performed.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.NrBlobBlockSaves">
            <summary>
            Number of BLOB blocks save operations performed.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.IsCorrupt">
            <summary>
            If the file is corrupt.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.IsBalanced">
            <summary>
            If the file is balanced.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.Comments">
            <summary>
            Any comments logged when scanning the file. If no comments, this property is null.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.HasComments">
            <summary>
            If comments have been logged.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.UnreferencedBlocks">
            <summary>
            Unreferenced blocks, if any.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Statistics.FileStatistics.UnreferencedBlobBlocks">
            <summary>
            Unreferenced BLOB blocks, if any.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Statistics.FileStatistics.ToString(System.Text.StringBuilder,System.Boolean)">
            <summary>
            Outputs file statistics to a string.
            </summary>
            <param name="Output">String output.</param>
            <param name="WriteStat">If statistics is to be written.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Storage.MissingFieldAction">
            <summary>
            How missing fields are to be treated in an index search.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Storage.MissingFieldAction.Prohibit">
            <summary>
            Missing fields are not allowed.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Storage.MissingFieldAction.Null">
            <summary>
            Missing fields will be considered to have the NULL value.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Storage.MissingFieldAction.First">
            <summary>
            Missing fields will be considered to have the first value allowed, depending on type and sort order.
            </summary>
        </member>
        <member name="F:Waher.Persistence.Files.Storage.MissingFieldAction.Last">
            <summary>
            Missing fields will be considered to have the last value allowed, depending on type and sort order.
            </summary>
        </member>
        <member name="T:Waher.Persistence.Files.Storage.IndexRecords">
            <summary>
            Handles index storage of object references.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.#ctor(System.String,System.Text.Encoding,System.Int32,System.String[])">
            <summary>
            Handles index storage of object references.
            </summary>
            <param name="CollectionName">Name of current collection.</param>
            <param name="Encoding">Encoding to use for text.</param>
            <param name="KeySizeLimit">Upper size limit of index keys.</param>
            <param name="FieldNames">Field names included in the index. By default, sort order is ascending.
            If descending sort order is desired, prefix the corresponding field name by a hyphen (minus) sign.</param>
        </member>
        <member name="P:Waher.Persistence.Files.Storage.IndexRecords.FieldNames">
            <summary>
            Field names included in the index.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Storage.IndexRecords.Ascending">
            <summary>
            If the corresponding field name is sorted in ascending order (true) or descending order (false).
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.Storage.IndexRecords.Index">
            <summary>
            Index file.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.Serialize(System.Guid,System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer,Waher.Persistence.Files.Storage.MissingFieldAction)">
            <summary>
            Serializes the index key for a given object and the underlying index fields.
            </summary>
            <param name="ObjectId">Object ID</param>
            <param name="Object">Object</param>
            <param name="Serializer">Serializer.</param>
            <param name="MissingFields">How missing fields are to be treated.</param>
            <returns>Serialized index, if object can be indexed using the current index, or null otherwise.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.Serialize(Waher.Persistence.Files.Serialization.BinarySerializer,System.Object)">
            <summary>
            Serializes a value.
            </summary>
            <param name="Writer">Serializer.</param>
            <param name="Value">Value to serialize.</param>
            <returns>If the value could be serialized.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>A signed integer that indicates the relative values of x and y, as shown in the following table.
            	Value Meaning Less than zero x is less than y.
            	Zero x equals y. 
            	Greater than zero x is greater than y.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.Compare(System.Byte[],System.Byte[])">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>A signed integer that indicates the relative values of x and y, as shown in the following table.
            	Value Meaning Less than zero x is less than y.
            	Zero x equals y. 
            	Greater than zero x is greater than y.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.GetFullPayloadSize(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the full payload size.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>Full size of the payload.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.GetKey(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the key of the next record.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>Key object.</returns>
        </member>
        <member name="P:Waher.Persistence.Files.Storage.IndexRecords.ObjectId">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.GetPayloadSize(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the payload size.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>Payload size.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.GetPayloadSize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Boolean@)">
            <summary>
            Gets the payload size.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <param name="IsBlob">If payload is a BLOB.</param>
            <returns>Payload size.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.GetPayloadType(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the payload type.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>Payload type.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.SkipKey(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Skips the next key.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>If a key was skipped.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.ExportKey(System.Object,System.Xml.XmlWriter)">
            <summary>
            Exports a key to XML.
            </summary>
            <param name="ObjectId">Key to export.</param>
            <param name="Output">XML Output.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.SameSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering corresponds to a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IndexRecords.ReverseSortOrder(System.String[],System.String[])">
            <summary>
            If the index ordering is a reversion of a given sort order.
            </summary>
            <param name="ConstantFields">Optional array of names of fields that will be constant during the enumeration.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>If the index matches the sort order. (The index ordering is allowed to be more specific.)</returns>
        </member>
        <member name="T:Waher.Persistence.Files.Storage.IRecordHandler">
            <summary>
            Interface for B-tree record handlers.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IRecordHandler.GetKey(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the next record key.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>Next key value, or null if no more keys available.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IRecordHandler.SkipKey(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Skips the next record key.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>If a key was skipped (true), or if no more keys are available (false).</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IRecordHandler.GetFullPayloadSize(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the full payload size.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>Full size of the payload.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IRecordHandler.GetPayloadSize(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the payload size.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>Size of the payload.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IRecordHandler.GetPayloadSize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Boolean@)">
            <summary>
            Gets the payload size.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <param name="IsBlob">If the object is a BLOB.</param>
            <returns>Size of the payload.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IRecordHandler.GetPayloadType(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the type of the payload, if any.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>Payload type, if any, or null, if not.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.IRecordHandler.ExportKey(System.Object,System.Xml.XmlWriter)">
            <summary>
            Exports a key to XML.
            </summary>
            <param name="ObjectId">Key to export.</param>
            <param name="Output">XML Output.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Storage.PrimaryRecords">
            <summary>
            Handles primary storage of objects, as pairs of primary keys (GUIDs) and serialized objects.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.PrimaryRecords.#ctor(System.Int32)">
            <summary>
            Handles primary storage of objects, as pairs of primary keys (GUIDs) and serialized objects.
            </summary>
            <param name="InlineObjectSizeLimit">Maximum size of objects that are stored in-line. Larger objects will be stored as BLOBs.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.PrimaryRecords.GetKey(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the next record key.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>Next key value, or null if no more keys available.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.PrimaryRecords.SkipKey(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Skips the next record key.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>If a key was skipped (true), or if no more keys are available (false).</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.PrimaryRecords.GetFullPayloadSize(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the full payload size.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>Full size of the payload.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.PrimaryRecords.GetPayloadSize(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the payload size.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>Size of the payload.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.PrimaryRecords.GetPayloadSize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Boolean@)">
            <summary>
            Gets the payload size.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <param name="IsBlob">If the payload is a BLOB.</param>
            <returns>Size of the payload.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.PrimaryRecords.GetPayloadType(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the type of the payload, if any.
            </summary>
            <param name="Reader">Binary deserializer object.</param>
            <returns>Payload type, if any, or null, if not.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.PrimaryRecords.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>A signed integer that indicates the relative values of x and y, as shown in the following table.
            	Value Meaning Less than zero x is less than y.
            	Zero x equals y. 
            	Greater than zero x is greater than y.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.PrimaryRecords.ExportKey(System.Object,System.Xml.XmlWriter)">
            <summary>
            Exports a key to XML.
            </summary>
            <param name="ObjectId">Key to export.</param>
            <param name="Output">XML Output.</param>
        </member>
        <member name="T:Waher.Persistence.Files.Storage.SequentialGuidGenerator">
            <summary>
            Class that generates sequential, albeit cyclical, GUIDs for use in databases. They are not guaranteed to be
            globally unique. They are however unique to a very high degree of probability.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.SequentialGuidGenerator.#ctor">
            <summary>
            Class that generates sequential, albeit cyclical, GUIDs for use in databases. They are not guaranteed to be
            globally unique. They are however unique to a very high degree of probability.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.SequentialGuidGenerator.CreateGuid">
            <summary>
            GUIDs are generated by sets of 16 bytes, that are defined as follows:
            
            Bytes 0-3:		Number of seconds, since 2001-01-01. (Will wrap 2136-02-07, 06:28:16)
            Bytes 4-7:		Counter, started at a random number.
            Bytes 8-9:		Process ID.
            Bytes 10-12:	Machine number.
            Bytes 13-15:	Random number.
            </summary>
            <returns>New GUID</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.SequentialGuidGenerator.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="T:Waher.Persistence.Files.Storage.StringDictionaryRecords">
            <summary>
            Handles string dictionary entries.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.StringDictionaryRecords.#ctor(System.String,System.Text.Encoding,System.Int32,Waher.Persistence.Files.Serialization.GenericObjectSerializer,Waher.Persistence.Files.FilesProvider)">
            <summary>
            Handles string dictionary entries.
            </summary>
            <param name="CollectionName">Name of current collection.</param>
            <param name="Encoding">Encoding to use for text.</param>
            <param name="RecordSizeLimit">Upper size limit of records.</param>
            <param name="GenericSerializer">Generic serializer.</param>
            <param name="Provider">Files database provider.</param>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.StringDictionaryRecords.Serialize(System.String,System.Object,Waher.Persistence.Files.Serialization.IObjectSerializer)">
            <summary>
            Serializes a (Key,Value) pair.
            </summary>
            <param name="Key">Key</param>
            <param name="Value">Value</param>
            <param name="Serializer">Serializer.</param>
            <returns>Serialized record.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.StringDictionaryRecords.Serialize(System.String)">
            <summary>
            Serializes a Key pair.
            </summary>
            <param name="Key">Key</param>
            <returns>Serialized record.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.StringDictionaryRecords.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>A signed integer that indicates the relative values of x and y, as shown in the following table.
            	Value Meaning Less than zero x is less than y.
            	Zero x equals y. 
            	Greater than zero x is greater than y.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.StringDictionaryRecords.Compare(System.String,System.String)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>A signed integer that indicates the relative values of x and y, as shown in the following table.
            	Value Meaning Less than zero x is less than y.
            	Zero x equals y. 
            	Greater than zero x is greater than y.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.StringDictionaryRecords.GetKey(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the key of the next record.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <returns>Key object.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.StringDictionaryRecords.SkipKey(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Skips the next key of the next record.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <returns>If a key was skipped.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.StringDictionaryRecords.GetFullPayloadSize(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the full payload size of the next objet.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <returns>Full payloa size.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.StringDictionaryRecords.GetPayloadSize(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the payload size.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <returns>Payload size.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.StringDictionaryRecords.GetPayloadSize(Waher.Persistence.Files.Serialization.BinaryDeserializer,System.Boolean@)">
            <summary>
            Gets the payload size.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <param name="IsBlob">If the payload is a BLOB.</param>
            <returns>Payload size.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.StringDictionaryRecords.GetPayloadType(Waher.Persistence.Files.Serialization.BinaryDeserializer)">
            <summary>
            Gets the payload type.
            </summary>
            <param name="Reader">Binary deserializer.</param>
            <returns>Payload type.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.Storage.StringDictionaryRecords.ExportKey(System.Object,System.Xml.XmlWriter)">
            <summary>
            Exports a key.
            </summary>
            <param name="ObjectId">Key</param>
            <param name="Output">XML Output.</param>
        </member>
        <member name="T:Waher.Persistence.Files.StringDictionary">
            <summary>
            This class manages a string dictionary in a persisted file.
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.#ctor(System.String,System.String,System.String,Waher.Persistence.Files.FilesProvider,System.Boolean)">
            <summary>
            This class manages a string dictionary in a persisted file.
            </summary>
            <param name="FileName">File name of index file.</param>
            <param name="BlobFileName">Name of file in which BLOBs are stored.</param>
            <param name="CollectionName">Collection Name.</param>
            <param name="Provider">Files provider.</param>
            <param name="RetainInMemory">Retain the dictionary in memory.</param>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.Dispose">
            <summary>
            <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether the System.Collections.Generic.IDictionary{string,object} contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the System.Collections.Generic.IDictionary{string,object}.</param>
            <returns>true if the System.Collections.Generic.IDictionary{string,object} contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.ContainsKeyAsync(System.String)">
            <summary>
            Determines whether the System.Collections.Generic.IDictionary{string,object} contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the System.Collections.Generic.IDictionary{string,object}.</param>
            <returns>true if the System.Collections.Generic.IDictionary{string,object} contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.Add(System.String,System.Object)">
            <summary>
            Adds an element with the provided key and value to the System.Collections.Generic.IDictionary{string,object}.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentNullException">key is null</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the System.Collections.Generic.IDictionary{string,object}.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.AddAsync(System.String,System.Object)">
            <summary>
            Adds an element with the provided key and value to the System.Collections.Generic.IDictionary{string,object}.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentNullException">key is null</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the System.Collections.Generic.IDictionary{string,object}.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.AddAsync(System.String,System.Object,System.Boolean)">
            <summary>
            Adds an element with the provided key and value to the System.Collections.Generic.IDictionary{string,object}.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <param name="ReplaceIfExists">If replacement of any existing value is desired.</param>
            <exception cref="T:System.ArgumentNullException">key is null</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the System.Collections.Generic.IDictionary{string,object}.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the System.Collections.IDictionary object.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.RemoveAsync(System.String)">
            <summary>
            Removes the element with the specified key from the System.Collections.IDictionary object.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, 
            the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the object that implements System.Collections.Generic.IDictionary{string,object} contains an element with the specified key; 
            otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.TryGetValueAsync(System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <returns>Returns a pair of values:
            
            First value is true if the object that implements System.Collections.Generic.IDictionary{string,object} contains an element 
            with the specified key; otherwise, false.
            When this method returns, the second value associated with the specified key, if the key is found; otherwise, 
            the default value for the type of the value parameter. This parameter is passed uninitialized.</returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.GetValueAsync(System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <returns>Returns the value associated with the specified key, if the key is found.</returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">If <paramref name="key"/> was not found.</exception>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            <see cref="M:System.Collections.Generic.ICollection`1.Add(`0)"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.Clear">
            <summary>
            <see cref="M:System.Collections.Generic.ICollection`1.Clear"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            <see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.ToArray">
            <summary>
            Loads the entire table and returns it as an array.
            </summary>
            <returns>Array of key-value pairs.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.ToArrayAsync">
            <summary>
            Loads the entire table and returns it as an array.
            </summary>
            <returns>Array of key-value pairs.</returns>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            <see cref="M:System.Collections.Generic.ICollection`1.Remove(`0)"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.GetEnumerator">
            <summary>
            <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.Files.StringDictionary.GetEnumerator(System.Boolean)">
            <summary>
            Gets an enumerator for all entries in the dictionary.
            </summary>
            <param name="Locked">If the file should be locked.</param>
            <returns>Enumerator</returns>
        </member>
        <member name="P:Waher.Persistence.Files.StringDictionary.DictionaryFile">
            <summary>
            Index file.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.StringDictionary.CollectionName">
            <summary>
            Name of corresponding collection name.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.StringDictionary.Encoding">
            <summary>
            Encoding to use for text properties.
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.StringDictionary.Keys">
            <summary>
            <see cref="P:System.Collections.Generic.IDictionary`2.Keys"/>
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.StringDictionary.Values">
            <summary>
            <see cref="P:System.Collections.Generic.IDictionary`2.Values"/>
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.StringDictionary.Count">
            <summary>
            <see cref="P:System.Collections.Generic.ICollection`1.Count"/>
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.StringDictionary.IsReadOnly">
            <summary>
            <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>
            </summary>
        </member>
        <member name="P:Waher.Persistence.Files.StringDictionary.Item(System.String)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <param name="key">The key of the element to get or set.</param>
            <returns>The element with the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and key is not found.</exception>
        </member>
    </members>
</doc>
