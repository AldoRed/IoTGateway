<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Waher.Persistence.FullTextSearch</name>
    </assembly>
    <members>
        <member name="T:Waher.Persistence.FullTextSearch.CollectionInformation">
            <summary>
            Contains information about a collection, in relation to full-text-search.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.CollectionInformation.#ctor">
            <summary>
            Contains information about a collection, in relation to full-text-search.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.CollectionInformation.#ctor(System.String,System.String,System.Boolean,Waher.Persistence.FullTextSearch.PropertyDefinition[])">
            <summary>
            Contains information about a collection, in relation to full-text-search.
            </summary>
            <param name="IndexCollectionName">Full-text-search index collection name.</param>
            <param name="CollectionName">Full Type Name.</param>
            <param name="IndexForFullTextSearch">If class should be indexed for full-text-search.</param>
            <param name="Properties">Properties (or fields) to index.</param>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.CollectionInformation.IndexCollectionName">
            <summary>
            Index Collection Name
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.CollectionInformation.CollectionName">
            <summary>
            Collection Name
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.CollectionInformation.IndexForFullTextSearch">
            <summary>
            If collection should be indexed.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.CollectionInformation.Properties">
            <summary>
            Properties to index
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.CollectionInformation.PropertyTypes">
            <summary>
            Types of indexed properties.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.CollectionInformation.AddIndexableProperties(Waher.Persistence.FullTextSearch.PropertyDefinition[])">
            <summary>
            Adds properties for full-text-search indexation.
            </summary>
            <param name="Properties">Properties to add.</param>
            <returns>If new property names were found and added, changing
            the state of the object.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.CollectionInformation.RemoveIndexableProperties(Waher.Persistence.FullTextSearch.PropertyDefinition[])">
            <summary>
            Removes properties from full-text-search indexation.
            </summary>
            <param name="Properties">Properties to remove from indexation.</param>
            <returns>If new property names were found and added, changing
            the state of the object.</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Files.FileReference">
            <summary>
            Contains a reference to an indexed file.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Files.FileReference.#ctor">
            <summary>
            Contains a reference to an indexed file.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Files.FileReference.ObjectId">
            <summary>
            Object ID of reference object.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Files.FileReference.IndexCollection">
            <summary>
            Collection of full-text-search index.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Files.FileReference.FileName">
            <summary>
            Name of collection hosting object.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Files.FileReference.Timestamp">
            <summary>
            When object was indexed.
            </summary>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Files.FolderIndexationStatistics">
            <summary>
            Contains statistics about a files folder (re)indexation procedure.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Files.FolderIndexationStatistics.NrAdded">
            <summary>
            Number of files added to the index.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Files.FolderIndexationStatistics.NrUpdated">
            <summary>
            Number of files updated in the index.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Files.FolderIndexationStatistics.NrDeleted">
            <summary>
            Number of files deleted from the index.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Files.FolderIndexationStatistics.NrFiles">
            <summary>
            Number of files processed.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Files.FolderIndexationStatistics.TotalChanges">
            <summary>
            Total number of files changed in the index.
            </summary>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Files.IFileTokenizer">
            <summary>
            Interface for file tokenizers. Best tokenizer is selected 
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Files.IFileTokenizer.Tokenize(Waher.Persistence.FullTextSearch.Files.FileReference,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes an object.
            </summary>
            <param name="Reference">Reference to file to tokenize.</param>
            <param name="Process">Current tokenization process.</param>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Files.TextFileTokenizer">
            <summary>
            Tokenizes text files.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Files.TextFileTokenizer.#ctor">
            <summary>
            Tokenizes text files.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Files.TextFileTokenizer.Supports(System.String)">
            <summary>
            How well the file tokenizer supports files of a given extension.
            </summary>
            <param name="Extension">File extension (in lower case).</param>
            <returns>How well the tokenizer supports files having this extension.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Files.TextFileTokenizer.Tokenize(Waher.Persistence.FullTextSearch.Files.FileReference,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes an object.
            </summary>
            <param name="Reference">Reference to file to tokenize.</param>
            <param name="Process">Current tokenization process.</param>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Files.XmlFileTokenizer">
            <summary>
            Tokenizes XML files.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Files.XmlFileTokenizer.#ctor">
            <summary>
            Tokenizes XML files.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Files.XmlFileTokenizer.Supports(System.String)">
            <summary>
            How well the file tokenizer supports files of a given extension.
            </summary>
            <param name="Extension">File extension (in lower case).</param>
            <returns>How well the tokenizer supports files having this extension.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Files.XmlFileTokenizer.Tokenize(Waher.Persistence.FullTextSearch.Files.FileReference,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes an object.
            </summary>
            <param name="Reference">Reference to file to tokenize.</param>
            <param name="Process">Current tokenization process.</param>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.FullTextSearchAttribute">
            <summary>
            This attribute defines that objects of this type should be indexed in the full-text-search index.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchAttribute.#ctor(System.String)">
            <summary>
            This attribute defines that objects of this type should be indexed in the full-text-search index.
            </summary>
            <param name="IndexCollection">Name of full-text-search index collection.</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchAttribute.#ctor(System.String,System.String[])">
            <summary>
            This attribute defines that objects of this type should be indexed in the full-text-search index.
            </summary>
            <param name="IndexCollection">Name of full-text-search index collection.</param>
            <param name="Properties">Array of property (or field) names used to index objects of this type. 
            If not provided, and a <see cref="T:Waher.Persistence.FullTextSearch.ITokenizer"/> exists for objects of this
            class, that tokenizer will be used instead of the property array, to extract
            tokens from the object.</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchAttribute.#ctor(System.String,Waher.Persistence.FullTextSearch.PropertyDefinition[])">
            <summary>
            This attribute defines that objects of this type should be indexed in the full-text-search index.
            </summary>
            <param name="IndexCollection">Name of full-text-search index collection.</param>
            <param name="Properties">Array of property (or field) definitions used to index objects of this type. 
            If not provided, and a <see cref="T:Waher.Persistence.FullTextSearch.ITokenizer"/> exists for objects of this
            class, that tokenizer will be used instead of the property array, to extract
            tokens from the object.</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            This attribute defines that objects of this type should be indexed in the full-text-search index.
            </summary>
            <param name="IndexCollection">Name of full-text-search index collection.</param>
            <param name="PropertyReference">If the <paramref name="IndexCollection"/> reference
            is pointing to a property on the object (true) or is a constant index collection
            reference (false).
            
            Note: Classes using dynamic index collection names require custom
            tokenizers to be tokenized properly.</param>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.FullTextSearchAttribute.DynamicIndexCollection">
            <summary>
            If the index collection is dynamic (i.e. depends on object instance).
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchAttribute.GetIndexCollection(System.Object)">
            <summary>
            Name of full-text-search index collection.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.FullTextSearchAttribute.Properties">
            <summary>
            Array of property (or field) definitions used to index objects of this type.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.FullTextSearchAttribute.HasPropertyDefinitions">
            <summary>
            If property names are defined for this class (true), or
            if objects are to be tokenized using a specialized tokenizer (false).
            </summary>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.FullTextSearchModule">
            <summary>
            Full-text search module, controlling the life-cycle of the full-text-search engine.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.#ctor">
            <summary>
            Full-text search module, controlling the life-cycle of the full-text-search engine.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.Start">
            <summary>
            Starts the module.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.Stop">
            <summary>
            Stops the module.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.GetCollectionNames">
            <summary>
            Gets the database collections that get indexed into a given index colltion.
            </summary>
            <returns>Collection Names indexed in the full-text-search index.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.GetCollectionNames(System.String)">
            <summary>
            Gets the database collections that get indexed into a given index colltion.
            </summary>
            <param name="IndexCollectionName">Index Collection Name</param>
            <returns>Collection Names indexed in the full-text-search index
            defined by <paramref name="IndexCollectionName"/>.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.GetCollectionNamesLocked(System.String)">
            <summary>
            Gets the database collections that get indexed into a given index colltion.
            </summary>
            <param name="IndexCollectionName">Index Collection Name</param>
            <returns>Collection Names indexed in the full-text-search index
            defined by <paramref name="IndexCollectionName"/>.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.SetFullTextSearchIndexCollection(System.String,System.String)">
            <summary>
            Defines the Full-text-search index collection name, for objects in a given collection.
            </summary>
            <param name="IndexCollection">Collection name for full-text-search index of objects in the given collection.</param>
            <param name="CollectionName">Collection of objects to index.</param>
            <returns>If the configuration was changed.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.AddFullTextSearch(System.String,Waher.Persistence.FullTextSearch.PropertyDefinition[])">
            <summary>
            Adds properties for full-text-search indexation.
            </summary>
            <param name="CollectionName">Collection name.</param>
            <param name="Properties">Properties to index.</param>
            <returns>If new property names were found and added.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.RemoveFullTextSearch(System.String,Waher.Persistence.FullTextSearch.PropertyDefinition[])">
            <summary>
            Removes properties from full-text-search indexation.
            </summary>
            <param name="CollectionName">Collection name.</param>
            <param name="Properties">Properties to remove from indexation.</param>
            <returns>If property names were found and removed.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.GetFullTextSearchIndexedProperties">
            <summary>
            Gets indexed properties for full-text-search indexation.
            </summary>
            <returns>Dictionary of indexed properties, per collection.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.GetFullTextSearchIndexedProperties(System.String)">
            <summary>
            Gets indexed properties for full-text-search indexation.
            </summary>
            <param name="CollectionName">Collection name.</param>
            <returns>Array of indexed properties.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.ParseKeywords(System.String,System.Boolean)">
            <summary>
            Parses a search string into keyworkds.
            </summary>
            <param name="Search">Search string.</param>
            <param name="TreatKeywordsAsPrefixes">If keywords should be treated as
            prefixes. Example: "test" would match "test", "tests" and "testing" if
            treated as a prefix, but also "tester", "testosterone", etc.</param>
            <returns>Keywords</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.ParseKeywords(System.String,System.Boolean,System.Boolean)">
            <summary>
            Parses a search string into keyworkds.
            </summary>
            <param name="Search">Search string.</param>
            <param name="TreatKeywordsAsPrefixes">If keywords should be treated as
            prefixes. Example: "test" would match "test", "tests" and "testing" if
            treated as a prefix, but also "tester", "testosterone", etc.</param>
            <param name="ParseQuotes">If quotes are to be processed.</param>
            <returns>Keywords</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.FullTextSearch``1(System.String,System.Int32,System.Int32,Waher.Persistence.FullTextSearch.FullTextSearchOrder,Waher.Persistence.FullTextSearch.PaginationStrategy,Waher.Persistence.FullTextSearch.Keywords.Keyword[])">
            <summary>
            Performs a Full-Text-Search
            </summary>
            <param name="IndexCollection">Index collection name.</param>
            <param name="Offset">Index of first object matching the keywords.</param>
            <param name="MaxCount">Maximum number of objects to return.</param>
            <param name="Order">The order of objects to return.</param>
            <param name="PaginationStrategy">How to handle pagination.</param>
            <param name="Keywords">Keywords to search for.</param>
            <returns>Array of objects. Depending on choice of
            <paramref name="PaginationStrategy"/>, null items may be returned
            if underlying object is not compatible with <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.ReindexCollection(System.String)">
            <summary>
            Reindexes the full-text-search index for a database collection.
            </summary>
            <param name="IndexCollectionName">Index Collection</param>
            <returns>Number of objects reindexed.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.RegisterStopWords(System.String[])">
            <summary>
            Registers stop-words with the search-engine.
            Stop-words are ignored in searches.
            </summary>
            <param name="StopWords">Stop words.</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.IsStopWord(System.String)">
            <summary>
            Checks if a word is a stop word.
            </summary>
            <param name="StopWord">Word to check.</param>
            <returns>If word is a stop word.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.Tokenize(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Tokenizes a set of objects using available tokenizers.
            Tokenizers are classes with a default contructor, implementing
            the <see cref="T:Waher.Persistence.FullTextSearch.ITokenizer"/> interface.
            </summary>
            <param name="Objects">Objects to tokenize.</param>
            <returns>Tokens</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.Tokenize(System.Collections.Generic.IEnumerable{System.Object},Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes a set of objects using available tokenizers.
            Tokenizers are classes with a default contructor, implementing
            the <see cref="T:Waher.Persistence.FullTextSearch.ITokenizer"/> interface.
            </summary>
            <param name="Objects">Objects to tokenize.</param>
            <param name="Process">Tokenization process.</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.Tokenize(Waher.Persistence.Serialization.GenericObject,Waher.Persistence.FullTextSearch.PropertyDefinition[])">
            <summary>
            Gets the indexable property values from an object. Property values will be returned in lower-case.
            </summary>
            <param name="Obj">Generic object.</param>
            <param name="Properties">Indexable properties.</param>
            <returns>Indexable property values found.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.Tokenize(Waher.Persistence.Serialization.GenericObject,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess,Waher.Persistence.FullTextSearch.PropertyDefinition[])">
            <summary>
            Gets the indexable property values from an object. Property values will be returned in lower-case.
            </summary>
            <param name="Obj">Generic object.</param>
            <param name="Process">Tokenization process.</param>
            <param name="Properties">Indexable properties.</param>
            <returns>Indexable property values found.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.GetValues(Waher.Persistence.Serialization.GenericObject,Waher.Persistence.FullTextSearch.PropertyDefinition[])">
            <summary>
            Gets object property values from a generic object.
            </summary>
            <param name="Obj">Generic object</param>
            <param name="Properties">Properties</param>
            <returns>Enumeration of property values.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.IndexFolder(System.String,System.String,System.Boolean,System.String[])">
            <summary>
            Indexes or reindexes files in a folder.
            </summary>
            <param name="IndexCollection">Name of index collection.</param>
            <param name="Folder">Folder name.</param>
            <param name="Recursive">If processing of files in subfolders should be performed.</param>
            <param name="ExcludeSubfolders">Any subfolders to exclude (in recursive mode).</param>
            <returns>Statistics about indexation process.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.FullTextSearchModule.IndexFile(System.String,System.String)">
            <summary>
            Indexes or reindexes a file.
            </summary>
            <param name="IndexCollection">Name of index collection.</param>
            <param name="FileName">File name.</param>
            <returns>If index was updated.</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.IPropertyEvaluator">
            <summary>
            Custom external property evaluator.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.IPropertyEvaluator.Prepare(System.String)">
            <summary>
            Prepares the evaluator with its definition.
            </summary>
            <param name="Definition">Property definition</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.IPropertyEvaluator.Evaluate(System.Object)">
            <summary>
            Evaluates the property evaluator, on an object instance.
            </summary>
            <param name="Instance">Object instance being indexed.</param>
            <returns>Property value.</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.ITokenizer">
            <summary>
            Interface for full-text-search tokenizers
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.ITokenizer.Tokenize(System.Object,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes an object.
            </summary>
            <param name="Value">Object to tokenize.</param>
            <param name="Process">Current tokenization process.</param>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Keywords.Keyword">
            <summary>
            Abstract base class for keywords.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.Keyword.#ctor">
            <summary>
            Abstract base class for keywords.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.Keyword.Optional">
            <summary>
            If keyword is optional
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.Keyword.Required">
            <summary>
            If keyword is required
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.Keyword.Prohibited">
            <summary>
            If keyword is prohibited
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.Keyword.OrderCategory">
            <summary>
            Order category of keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.Keyword.OrderComplexity">
            <summary>
            Order complexity (within category) of keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.Keyword.Ignore">
            <summary>
            If keyword should be ignored.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.Keyword.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.Keyword.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.Keyword.GetTokenReferences(Waher.Persistence.FullTextSearch.Keywords.SearchProcess)">
            <summary>
            Gets available token references.
            </summary>
            <param name="Process">Current search process.</param>
            <returns>Enumerable set of token references.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.Keyword.Process(Waher.Persistence.FullTextSearch.Keywords.SearchProcess)">
            <summary>
            Processes the keyword in a search process.
            </summary>
            <param name="Process">Current search process.</param>
            <returns>If the process can continue (true) or if an empty result is concluded (false).</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Keywords.OrderOfProcessing">
            <summary>
            Orders strings in descending length order
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.OrderOfProcessing.#ctor">
            <summary>
            Orders strings in descending length order
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.OrderOfProcessing.Compare(Waher.Persistence.FullTextSearch.Keywords.Keyword,Waher.Persistence.FullTextSearch.Keywords.Keyword)">
            <summary>
            <see cref="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)"/>
            </summary>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Keywords.PlainKeyword">
            <summary>
            Represents a plain text keyword.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.PlainKeyword.#ctor(System.String)">
            <summary>
            Represents a plain text keyword.
            </summary>
            <param name="Keyword">Keyword</param>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.PlainKeyword.Keyword">
            <summary>
            Keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.PlainKeyword.Ignore">
            <summary>
            If keyword should be ignored.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.PlainKeyword.OrderComplexity">
            <summary>
            Order complexity (within category) of keyword
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.PlainKeyword.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.PlainKeyword.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.PlainKeyword.GetTokenReferences(Waher.Persistence.FullTextSearch.Keywords.SearchProcess)">
            <summary>
            Gets available token references.
            </summary>
            <param name="Process">Current search process.</param>
            <returns>Enumerable set of token references.</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Keywords.ProhibitedKeyword">
            <summary>
            Represents a prohibited keyword.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.ProhibitedKeyword.#ctor(Waher.Persistence.FullTextSearch.Keywords.Keyword)">
            <summary>
            Represents a prohibited keyword.
            </summary>
            <param name="Keyword">Keyword</param>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.ProhibitedKeyword.Keyword">
            <summary>
            Keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.ProhibitedKeyword.Optional">
            <summary>
            If keyword is optional
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.ProhibitedKeyword.Prohibited">
            <summary>
            If keyword is prohibited
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.ProhibitedKeyword.OrderCategory">
            <summary>
            Order category of keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.ProhibitedKeyword.OrderComplexity">
            <summary>
            Order complexity (within category) of keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.ProhibitedKeyword.Ignore">
            <summary>
            If keyword should be ignored.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.ProhibitedKeyword.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.ProhibitedKeyword.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.ProhibitedKeyword.GetTokenReferences(Waher.Persistence.FullTextSearch.Keywords.SearchProcess)">
            <summary>
            Gets available token references.
            </summary>
            <param name="Process">Current search process.</param>
            <returns>Enumerable set of token references.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.ProhibitedKeyword.Process(Waher.Persistence.FullTextSearch.Keywords.SearchProcess)">
            <summary>
            Processes the keyword in a search process.
            </summary>
            <param name="Process"></param>
            <returns>If the process can continue (true) or if an empty result is concluded (false).</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Keywords.RegexKeyword">
            <summary>
            Represents a wildcard keyword.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.RegexKeyword.#ctor(System.String)">
            <summary>
            Represents a wildcard keyword.
            </summary>
            <param name="Expression">Keyword, as a regular expression.</param>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.RegexKeyword.Expression">
            <summary>
            String representation of regex expression.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.RegexKeyword.Parsed">
            <summary>
            Keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.RegexKeyword.OrderComplexity">
            <summary>
            Order complexity (within category) of keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.RegexKeyword.Ignore">
            <summary>
            If keyword should be ignored.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.RegexKeyword.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.RegexKeyword.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.RegexKeyword.GetTokenReferences(Waher.Persistence.FullTextSearch.Keywords.SearchProcess)">
            <summary>
            Gets available token references.
            </summary>
            <param name="Process">Current search process.</param>
            <returns>Enumerable set of token references.</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Keywords.RequiredKeyword">
            <summary>
            Represents a required keyword.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.RequiredKeyword.#ctor(Waher.Persistence.FullTextSearch.Keywords.Keyword)">
            <summary>
            Represents a required keyword.
            </summary>
            <param name="Keyword">Keyword</param>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.RequiredKeyword.Keyword">
            <summary>
            Keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.RequiredKeyword.Optional">
            <summary>
            If keyword is optional
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.RequiredKeyword.Required">
            <summary>
            If keyword is required
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.RequiredKeyword.OrderCategory">
            <summary>
            Order category of keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.RequiredKeyword.OrderComplexity">
            <summary>
            Order complexity (within category) of keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.RequiredKeyword.Ignore">
            <summary>
            If keyword should be ignored.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.RequiredKeyword.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.RequiredKeyword.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.RequiredKeyword.GetTokenReferences(Waher.Persistence.FullTextSearch.Keywords.SearchProcess)">
            <summary>
            Gets available token references.
            </summary>
            <param name="Process">Current search process.</param>
            <returns>Enumerable set of token references.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.RequiredKeyword.Process(Waher.Persistence.FullTextSearch.Keywords.SearchProcess)">
            <summary>
            Processes the keyword in a search process.
            </summary>
            <param name="Process"></param>
            <returns>If the process can continue (true) or if an empty result is concluded (false).</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Keywords.SearchProcess">
            <summary>
            Contains information about a search process.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.SearchProcess.#ctor(Waher.Persistence.IPersistentDictionary,System.String)">
            <summary>
            Contains information about a search process.
            </summary>
            <param name="Index">Index dictionary</param>
            <param name="IndexCollection">Index collection name</param>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.SearchProcess.Index">
            <summary>
            Index dictionary
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.SearchProcess.ReferencesByObject">
            <summary>
            References found.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.SearchProcess.IsRestricted">
            <summary>
            If the search process is restricted.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.SearchProcess.Found">
            <summary>
            Objects found during the processing of the current keyword.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.SearchProcess.IncRestricted">
            <summary>
            Increments counter of number of restricted keywords.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.SearchProcess.TryGetObjectReference(System.UInt64,System.Boolean)">
            <summary>
            Tries to get an object reference.
            </summary>
            <param name="ObjectIndex">Object index.</param>
            <param name="CanLoadFromDatabase">If the object can be loaded
            from the database if not found in the cache.</param>
            <returns>Object reference, if found, null otherwise.</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Keywords.SequenceOfKeywords">
            <summary>
            Represents a sequence of keywords.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.SequenceOfKeywords.#ctor(Waher.Persistence.FullTextSearch.Keywords.Keyword[])">
            <summary>
            Represents a sequence of keywords.
            </summary>
            <param name="Keywords">Keywords</param>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.SequenceOfKeywords.Keywords">
            <summary>
            Keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.SequenceOfKeywords.Optional">
            <summary>
            If keyword is optional
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.SequenceOfKeywords.Required">
            <summary>
            If keyword is required
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.SequenceOfKeywords.OrderCategory">
            <summary>
            Order category of keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.SequenceOfKeywords.OrderComplexity">
            <summary>
            Order complexity (within category) of keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.SequenceOfKeywords.Ignore">
            <summary>
            If keyword should be ignored.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.SequenceOfKeywords.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.SequenceOfKeywords.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.SequenceOfKeywords.GetTokenReferences(Waher.Persistence.FullTextSearch.Keywords.SearchProcess)">
            <summary>
            Gets available token references.
            </summary>
            <param name="Process">Current search process.</param>
            <returns>Enumerable set of token references.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.SequenceOfKeywords.Process(Waher.Persistence.FullTextSearch.Keywords.SearchProcess)">
            <summary>
            Processes the keyword in a search process.
            </summary>
            <param name="Process"></param>
            <returns>If the process can continue (true) or if an empty result is concluded (false).</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Keywords.WildcardKeyword">
            <summary>
            Represents a wildcard keyword.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.WildcardKeyword.#ctor(System.String)">
            <summary>
            Represents a plain keyword, where keyword acts as a prefix.
            </summary>
            <param name="Keyword">Keyword</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.WildcardKeyword.#ctor(System.String,System.String)">
            <summary>
            Represents a wildcard keyword.
            </summary>
            <param name="Keyword">Keyword</param>
            <param name="Wildcard">Wildcard</param>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.WildcardKeyword.Keyword">
            <summary>
            Keyword
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.WildcardKeyword.Wildcard">
            <summary>
            Wildcard
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Keywords.WildcardKeyword.OrderComplexity">
            <summary>
            Order complexity (within category) of keyword
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.WildcardKeyword.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.WildcardKeyword.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Keywords.WildcardKeyword.GetTokenReferences(Waher.Persistence.FullTextSearch.Keywords.SearchProcess)">
            <summary>
            Gets available token references.
            </summary>
            <param name="Process">Current search process.</param>
            <returns>Enumerable set of token references.</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.ObjectReference">
            <summary>
            Contains a reference to an indexed object.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.ObjectReference.#ctor">
            <summary>
            Contains a reference to an indexed object.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.ObjectReference.ObjectId">
            <summary>
            Object ID of reference object.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.ObjectReference.IndexCollection">
            <summary>
            Collection of full-text-search index.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.ObjectReference.Collection">
            <summary>
            Name of collection hosting object.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.ObjectReference.ObjectInstanceId">
            <summary>
            Object ID of object instance.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.ObjectReference.Index">
            <summary>
            Reference number to use in full-text-index.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.ObjectReference.Tokens">
            <summary>
            Token count in document.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.ObjectReference.Indexed">
            <summary>
            When object was indexed.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.ObjectReference.TryGetCount(System.String,Waher.Persistence.FullTextSearch.TokenCount@)">
            <summary>
            Tries to get a specific token count.
            </summary>
            <param name="Token">Token</param>
            <param name="Count">Count, if found.</param>
            <returns>If the corresponding token was found.</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.ObjectReferenceEventHandler">
            <summary>
            Delegate for object reference event handlers.
            </summary>
            <param name="Sender">Sender of event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.ObjectReferenceEventArgs">
            <summary>
            Event arguments for object reference events.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.ObjectReferenceEventArgs.#ctor(Waher.Persistence.FullTextSearch.ObjectReference)">
            <summary>
            Event arguments for object reference events.
            </summary>
            <param name="Reference">Object reference.</param>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.ObjectReferenceEventArgs.Reference">
            <summary>
            Object reference.
            </summary>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Orders.MatchInformation">
            <summary>
            Contains matching information about a document in a search.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Orders.MatchInformation.#ctor">
            <summary>
            Contains matching information about a document in a search.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Orders.MatchInformation.NrDistinctTokens">
            <summary>
            Number of distinct tokens found.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Orders.MatchInformation.NrTokens">
            <summary>
            Number of tokens found.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Orders.MatchInformation.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Orders.MatchInformation.ObjectReference">
            <summary>
            Object reference.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Orders.MatchInformation.AddTokenReference(Waher.Persistence.FullTextSearch.TokenReference)">
            <summary>
            Adds a token reference.
            </summary>
            <param name="Reference">Token reference.</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Orders.MatchInformation.ToString">
            <see cref="M:System.Object.ToString"/>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Orders.NewestOrder">
            <summary>
            Orders entries from newest to oldest.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Orders.NewestOrder.#ctor">
            <summary>
            Orders entries from newest to oldest.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Orders.NewestOrder.Compare(Waher.Persistence.FullTextSearch.Orders.MatchInformation,Waher.Persistence.FullTextSearch.Orders.MatchInformation)">
            <summary>
            <see cref="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)"/>
            </summary>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Orders.OccurrencesOrder">
            <summary>
            Orders entries based on occurrences of keywords.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Orders.OccurrencesOrder.#ctor">
            <summary>
            Orders entries based on occurrences of keywords.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Orders.OccurrencesOrder.Compare(Waher.Persistence.FullTextSearch.Orders.MatchInformation,Waher.Persistence.FullTextSearch.Orders.MatchInformation)">
            <summary>
            <see cref="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)"/>
            </summary>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Orders.OldestOrder">
            <summary>
            Orders entries from oldest to newest.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Orders.OldestOrder.#ctor">
            <summary>
            Orders entries from oldest to newest.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Orders.OldestOrder.Compare(Waher.Persistence.FullTextSearch.Orders.MatchInformation,Waher.Persistence.FullTextSearch.Orders.MatchInformation)">
            <summary>
            <see cref="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)"/>
            </summary>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Orders.RelevanceOrder">
            <summary>
            Orders entries based on relevance.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Orders.RelevanceOrder.#ctor">
            <summary>
            Orders entries based on relevance.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Orders.RelevanceOrder.Compare(Waher.Persistence.FullTextSearch.Orders.MatchInformation,Waher.Persistence.FullTextSearch.Orders.MatchInformation)">
            <summary>
            <see cref="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)"/>
            </summary>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.PropertyType">
            <summary>
            Type of indexed property.
            </summary>
        </member>
        <member name="F:Waher.Persistence.FullTextSearch.PropertyType.Label">
            <summary>
            A label (field or property) containing the value to be tokenized.
            </summary>
        </member>
        <member name="F:Waher.Persistence.FullTextSearch.PropertyType.External">
            <summary>
            Reference to external evaluator, returning an object that is tokenized.
            </summary>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.PropertyDefinition">
            <summary>
            Defines an indexable property.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.PropertyDefinition.#ctor">
            <summary>
            Defines an indexable property.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.PropertyDefinition.#ctor(System.String)">
            <summary>
            Defines an indexable property.
            </summary>
            <param name="Label">Property of Field name.</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.PropertyDefinition.#ctor(System.String,System.String)">
            <summary>
            Defines an indexable property.
            </summary>
            <param name="ExternalSource">External Source</param>
            <param name="Definition">Definition</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.PropertyDefinition.ToArray(System.String[])">
            <summary>
            Creates an array of property definitions from an array of property names.
            </summary>
            <param name="PropertyNames">Property names</param>
            <returns>Array of property definitions</returns>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.PropertyDefinition.Definition">
            <summary>
            Definition, as a string.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.PropertyDefinition.ExternalSource">
            <summary>
            External source.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.PropertyDefinition.Type">
            <summary>
            
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.PropertyDefinition.GetValue(System.Object)">
            <summary>
            Gets the object to index.
            </summary>
            <param name="Instance">Object instance being indexed.</param>
            <returns>Property value to index.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.PropertyDefinition.GetValue(Waher.Persistence.Serialization.GenericObject)">
            <summary>
            Gets the object to index.
            </summary>
            <param name="Instance">Object instance being indexed.</param>
            <returns>Property value to index.</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.FullTextSearchOrder">
            <summary>
            Order in which results are returned.
            </summary>
        </member>
        <member name="F:Waher.Persistence.FullTextSearch.FullTextSearchOrder.Relevance">
            <summary>
            Relevant to keywords used.
            </summary>
        </member>
        <member name="F:Waher.Persistence.FullTextSearch.FullTextSearchOrder.Occurrences">
            <summary>
            Occurrences of keyworkds.
            </summary>
        </member>
        <member name="F:Waher.Persistence.FullTextSearch.FullTextSearchOrder.Newest">
            <summary>
            From newest to oldest
            </summary>
        </member>
        <member name="F:Waher.Persistence.FullTextSearch.FullTextSearchOrder.Oldest">
            <summary>
            From oldest to newest
            </summary>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.PaginationStrategy">
            <summary>
            How pagination in full-text-searches should be handled.
            </summary>
        </member>
        <member name="F:Waher.Persistence.FullTextSearch.PaginationStrategy.PaginateOverObjectsNullIfIncompatible">
            <summary>
            Pagination is done over objects found in search. Incompatible types
            are returned as null. Makes pagination quicker, as objects do not need
            to be preloaded, and can be skipped quicker.
            </summary>
        </member>
        <member name="F:Waher.Persistence.FullTextSearch.PaginationStrategy.PaginateOverObjectsOnlyCompatible">
            <summary>
            Pagination is done over objects found in search. Only compatible
            objects are returned. Amount of objects returned might be less than
            number of objects found, making evaluation of next offset in paginated
            search difficult.
            </summary>
        </member>
        <member name="F:Waher.Persistence.FullTextSearch.PaginationStrategy.PaginationOverCompatibleOnly">
            <summary>
            Pagination is done over compatible objects found in search. Pagination
            becomes more resource intensive, as all objects need to be loaded to be
            checked if they are compatible or not.
            </summary>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Search">
            <summary>
            Static class for access to Full-Text-Search
            </summary>
        </member>
        <member name="E:Waher.Persistence.FullTextSearch.Search.ObjectAddedToIndex">
            <summary>
            Event raised when a new object instance has been indexed in the
            full-text-search index.
            </summary>
        </member>
        <member name="E:Waher.Persistence.FullTextSearch.Search.ObjectRemovedFromIndex">
            <summary>
            Event raised when an object instance has been removed from the
            full-text-search index.
            </summary>
        </member>
        <member name="E:Waher.Persistence.FullTextSearch.Search.ObjectUpdatedInIndex">
            <summary>
            Event raised when an object instance has been updated in the
            full-text-search index.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.ParseKeywords(System.String)">
            <summary>
            Parses a search string into keyworkds.
            </summary>
            <param name="Search">Search string.</param>
            <returns>Keywords</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.ParseKeywords(System.String,System.Boolean)">
            <summary>
            Parses a search string into keyworkds.
            </summary>
            <param name="Search">Search string.</param>
            <param name="TreatKeywordsAsPrefixes">If keywords should be treated as
            prefixes. Example: "test" would match "test", "tests" and "testing" if
            treated as a prefix, but also "tester", "testosterone", etc.
            Default is false.</param>
            <returns>Keywords</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.FullTextSearch``1(System.String,System.Int32,System.Int32,Waher.Persistence.FullTextSearch.FullTextSearchOrder,Waher.Persistence.FullTextSearch.Keywords.Keyword[])">
            <summary>
            Performs a Full-Text-Search
            </summary>
            <param name="IndexCollection">Index collection name.</param>
            <param name="Offset">Index of first object matching the keywords.</param>
            <param name="MaxCount">Maximum number of objects to return.</param>
            <param name="Keywords">Keywords to search for.</param>
            <param name="Order">Sort order of result set.</param>
            <returns>Array of objects. Noncompatible (with <typeparamref name="T"/>) items are returned as null 
            in the array..</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.FullTextSearch``1(System.String,System.Int32,System.Int32,Waher.Persistence.FullTextSearch.FullTextSearchOrder,Waher.Persistence.FullTextSearch.PaginationStrategy,Waher.Persistence.FullTextSearch.Keywords.Keyword[])">
            <summary>
            Performs a Full-Text-Search
            </summary>
            <param name="IndexCollection">Index collection name.</param>
            <param name="Offset">Index of first object matching the keywords.</param>
            <param name="MaxCount">Maximum number of objects to return.</param>
            <param name="Keywords">Keywords to search for.</param>
            <param name="Order">Sort order of result set.</param>
            <param name="PaginationStrategy">How to handle noncompatible items.</param>
            <returns>Array of objects. Depending on choice of
            <paramref name="PaginationStrategy"/>, null items may be returned
            if underlying object is not compatible with <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.RegisterStopWords(System.String[])">
            <summary>
            Registers stop-words with the search-engine.
            Stop-words are ignored in searches.
            </summary>
            <param name="StopWords">Stop words.</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.IsStopWord(System.String)">
            <summary>
            Checks if a word is a stop word.
            </summary>
            <param name="StopWord">Word to check.</param>
            <returns>If word is a stop word.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.Tokenize(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Tokenizes a set of objects using available tokenizers.
            Tokenizers are classes with a default contructor, implementing
            the <see cref="T:Waher.Persistence.FullTextSearch.ITokenizer"/> interface.
            </summary>
            <param name="Objects">Objects to tokenize.</param>
            <returns>Tokens</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.Tokenize(System.Object[])">
            <summary>
            Tokenizes a set of objects using available tokenizers.
            Tokenizers are classes with a default contructor, implementing
            the <see cref="T:Waher.Persistence.FullTextSearch.ITokenizer"/> interface.
            </summary>
            <param name="Objects">Objects to tokenize.</param>
            <returns>Tokens</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.SetFullTextSearchIndexCollection(System.String,System.String)">
            <summary>
            Defines the Full-text-search index collection name, for objects in a given collection.
            </summary>
            <param name="IndexCollection">Collection name for full-text-search index of objects in the given collection.</param>
            <param name="CollectionName">Collection of objects to index.</param>
            <returns>If the configuration was changed.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.AddFullTextSearch(System.String,Waher.Persistence.FullTextSearch.PropertyDefinition[])">
            <summary>
            Adds properties for full-text-search indexation.
            </summary>
            <param name="CollectionName">Collection name.</param>
            <param name="Properties">Properties to index.</param>
            <returns>If new property names were found and added.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.RemoveFullTextSearch(System.String,Waher.Persistence.FullTextSearch.PropertyDefinition[])">
            <summary>
            Removes properties from full-text-search indexation.
            </summary>
            <param name="CollectionName">Collection name.</param>
            <param name="Properties">Properties to remove from indexation.</param>
            <returns>If property names were found and removed.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.GetFullTextSearchIndexedProperties">
            <summary>
            Gets indexed properties for full-text-search indexation.
            </summary>
            <returns>Dictionary of indexed properties, per collection.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.GetFullTextSearchIndexedProperties(System.String)">
            <summary>
            Gets indexed properties for full-text-search indexation.
            </summary>
            <param name="CollectionName">Collection name.</param>
            <returns>Array of indexed properties.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.GetCollectionNames">
            <summary>
            Gets the database collections that get indexed into a given index colltion.
            </summary>
            <returns>Collection Names indexed in the full-text-search index by index collection.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.GetCollectionNames(System.String)">
            <summary>
            Gets the database collections that get indexed into a given index colltion.
            </summary>
            <param name="IndexCollectionName">Index Collection Name</param>
            <returns>Collection Names indexed in the full-text-search index
            defined by <paramref name="IndexCollectionName"/>.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.ReindexCollection(System.String)">
            <summary>
            Reindexes the full-text-search index for a database collection.
            </summary>
            <param name="IndexCollectionName">Index Collection</param>
            <returns>Number of objects reindexed.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.IndexFolder(System.String,System.String,System.Boolean,System.String[])">
            <summary>
            Indexes or reindexes files in a folder.
            </summary>
            <param name="IndexCollection">Name of index collection.</param>
            <param name="Folder">Folder name.</param>
            <param name="Recursive">If processing of files in subfolders should be performed.</param>
            <param name="ExcludeSubfolders">Any subfolders to exclude (in recursive mode).</param>
            <returns>Statistics about indexation process.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Search.IndexFile(System.String,System.String)">
            <summary>
            Indexes or reindexes a file.
            </summary>
            <param name="IndexCollection">Name of index collection.</param>
            <param name="FileName">File name.</param>
            <returns>If index was updated.</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.TokenCount">
            <summary>
            Represents a token and a corresponding occurrence count.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.TokenCount.#ctor">
            <summary>
            Represents a token and a corresponding occurrence count.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.TokenCount.#ctor(System.String,System.UInt32[])">
            <summary>
            Represents a token and a corresponding occurrence count.
            </summary>
            <param name="Token">Token</param>
            <param name="DocIndex">Document indices for each occurrence of the token.</param>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TokenCount.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TokenCount.DocIndex">
            <summary>
            Index inside document of each occurrence.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TokenCount.Block">
            <summary>
            Reference is stored in this block in the full-text-search index.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.TokenCount.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.TokenCount.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.TokenCount.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Tokenizers.CaseInsensitiveStringCollectionTokenizer">
            <summary>
            Tokenizes a collection of case insensitive strings.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.CaseInsensitiveStringCollectionTokenizer.#ctor">
            <summary>
            Tokenizes a collection of case insensitive strings.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.CaseInsensitiveStringCollectionTokenizer.Supports(System.Type)">
            <summary>
            How well the tokenizer can tokenize objects of type <paramref name="Type"/>.
            </summary>
            <param name="Type">Type of object to tokenize</param>
            <returns>How well such objects are tokenized.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.CaseInsensitiveStringCollectionTokenizer.Tokenize(System.Object,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes an object.
            </summary>
            <param name="Value">Object to tokenize.</param>
            <param name="Process">Current tokenization process.</param>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Tokenizers.CaseInsensitiveStringTokenizer">
            <summary>
            Tokenizes case insensitive strings.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.CaseInsensitiveStringTokenizer.#ctor">
            <summary>
            Tokenizes case insensitive strings.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.CaseInsensitiveStringTokenizer.Supports(System.Type)">
            <summary>
            How well the tokenizer can tokenize objects of type <paramref name="Type"/>.
            </summary>
            <param name="Type">Type of object to tokenize</param>
            <returns>How well such objects are tokenized.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.CaseInsensitiveStringTokenizer.Tokenize(System.Object,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes an object.
            </summary>
            <param name="Value">Object to tokenize.</param>
            <param name="Process">Current tokenization process.</param>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Tokenizers.FileReferenceTokenizer">
            <summary>
            Tokenizes files via <see cref="T:Waher.Persistence.FullTextSearch.Files.FileReference"/> object references.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.FileReferenceTokenizer.#ctor">
            <summary>
            Tokenizes files via <see cref="T:Waher.Persistence.FullTextSearch.Files.FileReference"/> object references.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.FileReferenceTokenizer.Supports(System.Type)">
            <summary>
            If the interface understands objects such as <paramref name="Object"/>.
            </summary>
            <param name="Object">Object</param>
            <returns>How well objects of this type are supported.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.FileReferenceTokenizer.Tokenize(System.Object,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes an object.
            </summary>
            <param name="Value">Object to tokenize.</param>
            <param name="Process">Current tokenization process.</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.FileReferenceTokenizer.Tokenize(Waher.Persistence.FullTextSearch.Files.FileReference,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes a file, via its file reference object.
            </summary>
            <param name="Reference">File reference.</param>
            <param name="Process">Current tokenization process.</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.FileReferenceTokenizer.HasTokenizer(System.String)">
            <summary>
            Checks if a file has a file tokenizer associated with it.
            </summary>
            <param name="FileName">File Name</param>
            <returns>If a tokenizer was found.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.FileReferenceTokenizer.TryGetFileTokenizer(System.String,Waher.Persistence.FullTextSearch.Files.IFileTokenizer@)">
            <summary>
            Tries to get a file tokenizer for a given file.
            </summary>
            <param name="FileName">File Name</param>
            <param name="Tokenizer">Tokenizer, if found.</param>
            <returns>If a tokenizer was found.</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Tokenizers.StringCollectionTokenizer">
            <summary>
            Tokenizes a collection of strings.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.StringCollectionTokenizer.#ctor">
            <summary>
            Tokenizes a collection of strings.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.StringCollectionTokenizer.Supports(System.Type)">
            <summary>
            How well the tokenizer can tokenize objects of type <paramref name="Type"/>.
            </summary>
            <param name="Type">Type of object to tokenize</param>
            <returns>How well such objects are tokenized.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.StringCollectionTokenizer.Tokenize(System.Object,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes an object.
            </summary>
            <param name="Value">Object to tokenize.</param>
            <param name="Process">Current tokenization process.</param>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Tokenizers.StringTokenizer">
            <summary>
            Tokenizes strings.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.StringTokenizer.#ctor">
            <summary>
            Tokenizes strings.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.StringTokenizer.Supports(System.Type)">
            <summary>
            How well the tokenizer can tokenize objects of type <paramref name="Type"/>.
            </summary>
            <param name="Type">Type of object to tokenize</param>
            <returns>How well such objects are tokenized.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.StringTokenizer.Tokenize(System.Object,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes an object.
            </summary>
            <param name="Value">Object to tokenize.</param>
            <param name="Process">Current tokenization process.</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.StringTokenizer.Tokenize(System.String,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes a set of strings.
            </summary>
            <param name="Text">String to tokenize.</param>
            <param name="Process">Current tokenization process.</param>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess">
            <summary>
            Contains information about a tokenization process.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess.#ctor">
            <summary>
            Contains information about a tokenization process.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess.TokenCounts">
            <summary>
            Accumulated token counts.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess.DocumentIndexOffset">
            <summary>
            Document Index Offset. Used to identify sequences of tokens in a document.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess.ToArray">
            <summary>
            Generates an array of token counts.
            </summary>
            <returns>Token counts.</returns>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.Tokenizers.XmlTokenizer">
            <summary>
            Tokenizes an XML Document or XML Fragment.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.XmlTokenizer.#ctor">
            <summary>
            Tokenizes an XML Document or XML Fragment.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.XmlTokenizer.Supports(System.Type)">
            <summary>
            How well the tokenizer can tokenize objects of type <paramref name="Type"/>.
            </summary>
            <param name="Type">Type of object to tokenize</param>
            <returns>How well such objects are tokenized.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.XmlTokenizer.Tokenize(System.Object,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes an object.
            </summary>
            <param name="Value">Object to tokenize.</param>
            <param name="Process">Current tokenization process.</param>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.Tokenizers.XmlTokenizer.Tokenize(System.Xml.XmlNode,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess)">
            <summary>
            Tokenizes an XML Document or XML Fragment.
            </summary>
            <param name="Xml">XML to tokenize.</param>
            <param name="Process">Current tokenization process.</param>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.TokenReference">
            <summary>
            Contains a reference to a token.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.TokenReference.#ctor">
            <summary>
            Contains a reference to a token.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TokenReference.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TokenReference.LastBlock">
            <summary>
            Index to last block in index representing the same token.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TokenReference.ObjectReference">
            <summary>
            Reference to the object containing the token.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TokenReference.Count">
            <summary>
            Token count
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TokenReference.Timestamp">
            <summary>
            Timestamps when corresponding object refernce was indexed.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.TokenReference.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.TokenReferences">
            <summary>
            Contains a sequence of object references that include the token
            in its indexed text properties.
            </summary>
        </member>
        <member name="F:Waher.Persistence.FullTextSearch.TokenReferences.MaxReferences">
            <summary>
            Maximum amount of references in a block (100).
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.TokenReferences.#ctor">
            <summary>
            Contains a sequence of object references that include the token
            in its indexed text properties.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TokenReferences.LastBlock">
            <summary>
            Index to last block in index representing the same token.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TokenReferences.ObjectReferences">
            <summary>
            References to objects containing the token.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TokenReferences.Counts">
            <summary>
            Token counts for respective object reference.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TokenReferences.Timestamps">
            <summary>
            Timestamps when corresponding object refernces were indexed.
            </summary>
        </member>
        <member name="T:Waher.Persistence.FullTextSearch.TypeInformation">
            <summary>
            Contains information about a type, in relation to full-text-search.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.TypeInformation.#ctor(System.Type,System.Reflection.TypeInfo,System.String,Waher.Persistence.FullTextSearch.CollectionInformation,Waher.Persistence.FullTextSearch.ITokenizer,Waher.Persistence.FullTextSearch.FullTextSearchAttribute)">
            <summary>
            Contains information about a type, in relation to full-text-search.
            </summary>
            <param name="Type">Type</param>
            <param name="TypeInfo">Type information.</param>
            <param name="CollectionName">Collection name for objects of the corresponding type.</param>
            <param name="CollectionInformation">Indexing information for a collection.</param>
            <param name="CustomTokenizer">Optional custom tokenizer creating tokens for objects
            of this type.</param>
            <param name="SearchAttribute">Full-text-search attribute.</param>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TypeInformation.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TypeInformation.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TypeInformation.CollectionName">
            <summary>
            Collection name for objects of the corresponding type.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TypeInformation.HasCollection">
            <summary>
            If a collection-name is defined.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TypeInformation.CollectionInformation">
            <summary>
            Indexing information for a collection.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TypeInformation.CustomTokenizer">
            <summary>
            Optional custom tokenizer;
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TypeInformation.HasCustomTokenizer">
            <summary>
            If the type has a custom tokenizer.
            </summary>
        </member>
        <member name="P:Waher.Persistence.FullTextSearch.TypeInformation.DynamicIndexCollection">
            <summary>
            If the index collection is dynamic (i.e. depends on object instance).
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.TypeInformation.GetIndexCollection(System.Object)">
            <summary>
            Name of full-text-search index collection.
            </summary>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.TypeInformation.Tokenize(System.Object,Waher.Persistence.FullTextSearch.PropertyDefinition[])">
            <summary>
            Tokenizes properties in an object, given a set of property names.
            </summary>
            <param name="Obj">Object instance to tokenize.</param>
            <param name="Properties">Indexable properties.</param>
            <returns>Tokens found.</returns>
        </member>
        <member name="M:Waher.Persistence.FullTextSearch.TypeInformation.Tokenize(System.Object,Waher.Persistence.FullTextSearch.Tokenizers.TokenizationProcess,Waher.Persistence.FullTextSearch.PropertyDefinition[])">
            <summary>
            Tokenizes properties in an object, given a set of property names.
            </summary>
            <param name="Obj">Object instance to tokenize.</param>
            <param name="Process">Tokenization process.</param>
            <param name="Properties">Indexable properties.</param>
        </member>
    </members>
</doc>
