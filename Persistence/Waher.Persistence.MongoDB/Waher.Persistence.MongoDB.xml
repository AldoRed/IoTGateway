<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Waher.Persistence.MongoDB</name>
    </assembly>
    <members>
        <member name="T:Waher.Persistence.MongoDB.MongoDBProvider">
            <summary>
            MongoDB database provider.
            </summary>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.#ctor(System.String,System.String)">
            <summary>
            MongoDB database provider, for a local MongoDB database.
            </summary>
            <param name="DatabaseName">Name of database.</param>
            <param name="DefaultCollectionName">Default Collection Name.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.#ctor(System.String,System.String,System.String)">
            <summary>
            MongoDB database provider.
            </summary>
            <param name="HostName">Host name of MongoDB server.</param>
            <param name="DatabaseName">Name of database.</param>
            <param name="DefaultCollectionName">Name of default collection.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            MongoDB database provider.
            </summary>
            <param name="HostName">Host name of MongoDB server.</param>
            <param name="Port">Port number used to connect to MongoDB server.</param>
            <param name="DatabaseName">Name of database.</param>
            <param name="DefaultCollectionName">Name of default collection.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.#ctor(MongoDB.Driver.MongoClientSettings,System.String,System.String)">
            <summary>
            MongoDB database provider.
            </summary>
            <param name="Settings">Connection settings.</param>
            <param name="DatabaseName">Name of database.</param>
            <param name="DefaultCollectionName">Name of default collection.</param>
        </member>
        <member name="P:Waher.Persistence.MongoDB.MongoDBProvider.Id">
            <summary>
            An ID of the files provider. It's unique, and constant during the life-time of the FilesProvider class.
            </summary>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.GetCollection(System.String)">
            <summary>
            Gets a collection.
            </summary>
            <param name="CollectionName">Name of collection.</param>
            <returns></returns>
        </member>
        <member name="P:Waher.Persistence.MongoDB.MongoDBProvider.Client">
            <summary>
            Underlying MongoDB client.
            </summary>
        </member>
        <member name="P:Waher.Persistence.MongoDB.MongoDBProvider.DefaultCollectionName">
            <summary>
            Default collection name.
            </summary>
        </member>
        <member name="P:Waher.Persistence.MongoDB.MongoDBProvider.DefaultCollection">
            <summary>
            Default collection.
            </summary>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.GetObjectSerializer(System.Type)">
            <summary>
            Returns a serializer for a given type.
            </summary>
            <param name="Type">Type of objects to serialize.</param>
            <returns>Object serializer.</returns>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Insert(System.Object)">
            <summary>
            Inserts an object into the database.
            </summary>
            <param name="Object">Object to insert.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Insert(System.Object[])">
            <summary>
            Inserts a collection of objects into the database.
            </summary>
            <param name="Objects">Objects to insert.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Insert(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Inserts a collection of objects into the database.
            </summary>
            <param name="Objects">Objects to insert.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Find``1(System.Int32,System.Int32,System.String[])">
            <summary>
            Finds objects of a given class <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
            <param name="Offset">Result offset.</param>
            <param name="MaxCount">Maximum number of objects to return.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>Objects found.</returns>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Find``1(System.Int32,System.Int32,Waher.Persistence.Filters.Filter,System.String[])">
            <summary>
            Finds objects of a given class <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
            <param name="Offset">Result offset.</param>
            <param name="MaxCount">Maximum number of objects to return.</param>
            <param name="Filter">Optional filter. Can be null.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>Objects found.</returns>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Find``1(System.Int32,System.Int32,MongoDB.Driver.FilterDefinition{MongoDB.Bson.BsonDocument},System.String[])">
            <summary>
            Finds objects of a given class <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Class defining how to deserialize objects found.</typeparam>
            <param name="Offset">Result offset.</param>
            <param name="MaxCount">Maximum number of objects to return.</param>
            <param name="BsonFilter">Search filter.</param>
            <param name="SortOrder">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
            <returns>Objects found.</returns>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.LoadObject``1(System.Object)">
            <summary>
            Loads an object given its Object ID <paramref name="ObjectId"/> and its base type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Base type.</typeparam>
            <param name="ObjectId">Object ID</param>
            <returns>Loaded object.</returns>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.LoadObject``1(MongoDB.Bson.ObjectId)">
            <summary>
            Loads an object of a given type and Object ID.
            </summary>
            <typeparam name="T">Type of object to load.</typeparam>
            <param name="ObjectId">Object ID of object to load.</param>
            <returns>Loaded object.</returns>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Update(System.Object)">
            <summary>
            Updates an object in the database.
            </summary>
            <param name="Object">Object to insert.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Update(System.Object[])">
            <summary>
            Updates a collection of objects in the database.
            </summary>
            <param name="Objects">Objects to insert.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Update(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Updates a collection of objects in the database.
            </summary>
            <param name="Objects">Objects to insert.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Delete(System.Object)">
            <summary>
            Deletes an object in the database.
            </summary>
            <param name="Object">Object to insert.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Delete(System.Object[])">
            <summary>
            Deletes a collection of objects in the database.
            </summary>
            <param name="Objects">Objects to insert.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Delete(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Deletes a collection of objects in the database.
            </summary>
            <param name="Objects">Objects to insert.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Export(Waher.Persistence.Serialization.IDatabaseExport)">
            <summary>
            Performs an export of the entire database.
            </summary>
            <param name="Output">Database will be output to this interface.</param>
            <returns>Task object for synchronization purposes.</returns>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Clear(System.String)">
            <summary>
            Clears a collection of all objects.
            </summary>
            <param name="CollectionName">Name of collection to clear.</param>
            <returns>Task object for synchronization purposes.</returns>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Analyze(System.Xml.XmlWriter,System.String,System.String,System.Boolean)">
            <summary>
            Analyzes the database and exports findings to XML.
            </summary>
            <param name="Output">XML Output.</param>
            <param name="XsltPath">Optional XSLT to use to view the output.</param>
            <param name="ProgramDataFolder">Program data folder. Can be removed from filenames used, when referencing them in the report.</param>
            <param name="ExportData">If data in database is to be exported in output.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Repair(System.Xml.XmlWriter,System.String,System.String,System.Boolean)">
            <summary>
            Analyzes the database and repairs it if necessary. Results are exported to XML.
            </summary>
            <param name="Output">XML Output.</param>
            <param name="XsltPath">Optional XSLT to use to view the output.</param>
            <param name="ProgramDataFolder">Program data folder. Can be removed from filenames used, when referencing them in the report.</param>
            <param name="ExportData">If data in database is to be exported in output.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Analyze(System.Xml.XmlWriter,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Analyzes the database and exports findings to XML.
            </summary>
            <param name="Output">XML Output.</param>
            <param name="XsltPath">Optional XSLT to use to view the output.</param>
            <param name="ProgramDataFolder">Program data folder. Can be removed from filenames used, when referencing them in the report.</param>
            <param name="ExportData">If data in database is to be exported in output.</param>
            <param name="Repair">If files should be repaired if corruptions are detected.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.AddIndex(System.String,System.String[])">
            <summary>
            Adds an index to a collection, if one does not already exist.
            </summary>
            <param name="CollectionName">Name of collection.</param>
            <param name="FieldNames">Sort order. Each string represents a field name. By default, sort order is ascending.
            If descending sort order is desired, prefix the field name by a hyphen (minus) sign.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.StartBulk">
            <summary>
            Starts bulk-proccessing of data. Must be followed by a call to <see cref="M:Waher.Persistence.MongoDB.MongoDBProvider.EndBulk"/>.
            </summary>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.EndBulk">
            <summary>
            Ends bulk-processing of data. Must be called once for every call to <see cref="M:Waher.Persistence.MongoDB.MongoDBProvider.StartBulk"/>.
            </summary>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Start">
            <summary>
            Called when processing starts.
            </summary>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Stop">
            <summary>
            Called when processing ends.
            </summary>
        </member>
        <member name="M:Waher.Persistence.MongoDB.MongoDBProvider.Flush">
            <summary>
            Persists any pending changes.
            </summary>
        </member>
        <member name="T:Waher.Persistence.MongoDB.Serialization.ObjectSerializer">
            <summary>
            Serializes a type to BSON, taking into account attributes defined in <see cref="N:Waher.Persistence.Attributes"/>.
            </summary>
        </member>
        <member name="M:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.#ctor(System.Type,Waher.Persistence.MongoDB.MongoDBProvider)">
            <summary>
            Serializes a type to BSON, taking into account attributes defined in <see cref="N:Waher.Persistence.Attributes"/>.
            </summary>
            <param name="Type">Type to serialize.</param>
            <param name="Provider">MongoDB Provider object.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.Escape(System.String)">
            <summary>
            Escapes a string to be enclosed between double quotes.
            </summary>
            <param name="s"></param>
            <returns>String with special characters escaped.</returns>
        </member>
        <member name="F:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.UnixEpoch">
            <summary>
            UNIX Epoch, started at 1970-01-01, 00:00:00 (GMT)
            </summary>
        </member>
        <member name="P:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.CollectionName">
            <summary>
            Name of collection objects of this type is to be stored in, if available. If not available, this property returns null.
            </summary>
        </member>
        <member name="P:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.ValueType">
            <summary>
            Gets the type of the value.
            </summary>
        </member>
        <member name="M:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>A deserialized value.</returns>
        </member>
        <member name="M:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.ToShortName(System.String)">
            <summary>
            Converts a field name to its corresponding short name. If no explicit short name is available, the same field name is returned.
            </summary>
            <param name="FieldName">Field Name.</param>
            <returns>Short name, if found, or the field name itself, if not.</returns>
        </member>
        <member name="M:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.ToShortName(System.String,System.Object@)">
            <summary>
            Converts a field name to its corresponding short name. If no explicit short name is available, the same field name is returned.
            </summary>
            <param name="FieldName">Field Name.</param>
            <param name="Value">Field value.</param>
            <returns>Short name, if found, or the field name itself, if not.</returns>
        </member>
        <member name="P:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.ObjectIdMemberName">
            <summary>
            Mamber name of the field or property holding the Object ID, if any. If there are no such member, this property returns null.
            </summary>
        </member>
        <member name="P:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.HasObjectIdField">
            <summary>
            If the class has an Object ID field.
            </summary>
        </member>
        <member name="M:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.HasObjectId(System.Object)">
            <summary>
            If the class has an Object ID.
            </summary>
            <param name="Value">Object reference.</param>
        </member>
        <member name="M:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.GetObjectId(System.Object,System.Boolean)">
            <summary>
            Gets the Object ID for a given object.
            </summary>
            <param name="Value">Object reference.</param>
            <param name="InsertIfNotFound">Insert object into database with new Object ID, if no Object ID is set.</param>
            <returns>Object ID for <paramref name="Value"/>.</returns>
        </member>
        <member name="M:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.IsDefaultValue(System.String,System.Object)">
            <summary>
            Checks if a given field value corresponds to the default value for the corresponding field.
            </summary>
            <param name="FieldName">Name of field.</param>
            <param name="Value">Field value.</param>
            <returns>If the field value corresponds to the default value of the corresponding field.</returns>
        </member>
        <member name="M:Waher.Persistence.MongoDB.Serialization.ObjectSerializer.TryGetMemberSerializationInfo(System.String,MongoDB.Bson.Serialization.BsonSerializationInfo@)">
            <summary>
            Tries to get the serialization info for a member.
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="serializationInfo">The serialization information.</param>
            <returns>true if the serialization info exists; otherwise false.</returns>
        </member>
    </members>
</doc>
