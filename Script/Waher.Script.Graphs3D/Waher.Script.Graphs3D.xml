<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Waher.Script.Graphs3D</name>
    </assembly>
    <members>
        <member name="T:Waher.Script.Graphs3D.Canvas3D">
            <summary>
            3D drawing area.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.#ctor">
            <summary>
            3D drawing area.
            
            By default, the camera is looking along the z-axis, with no projection, and no scaling.
            The center of the canvas is located at origo.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.#ctor(System.Int32,System.Int32,System.Int32,SkiaSharp.SKColor)">
            <summary>
            3D drawing area.
            
            By default, the camera is looking along the z-axis, with no projection, and no scaling.
            The center of the canvas is located at origo.
            </summary>
            <param name="Width">Width of area, in pixels.</param>
            <param name="Height">Height of area, in pixels.</param>
            <param name="OverSampling">Number of subpixels for each generated pixel.
            Oversampling provides a means to achieve anti-aliasing in the rendered result.</param>
            <param name="BackgroundColor">Background color</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Clear">
            <summary>
            Clears the canvas.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.GetPixels">
            <summary>
            Creates a bitmap from the pixels in the canvas.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.CreatePixels(Waher.Script.Graphs.GraphSettings,System.Object[]@)">
            <summary>
            Creates a bitmap of the graph.
            </summary>
            <param name="Settings">Graph settings.</param>
            <param name="States">State objects that contain graph-specific information about its inner states.
            These can be used in calls back to the graph object to make actions on the generated graph.</param>
            <returns>Bitmap</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.GetBitmapClickScript(System.Double,System.Double,System.Object[])">
            <summary>
            Gets script corresponding to a point in a generated bitmap representation of the graph.
            </summary>
            <param name="X">X-Coordinate.</param>
            <param name="Y">Y-Coordinate.</param>
            <param name="States">State objects for the generated bitmap.</param>
            <returns>Script.</returns>
        </member>
        <member name="P:Waher.Script.Graphs3D.Canvas3D.RecommendedBitmapSize">
            <summary>
            The recommended bitmap size of the graph, if such is available, or null if not.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.AddLeft(Waher.Script.Abstraction.Elements.ISemiGroupElement)">
            <summary>
            Tries to add an element to the current element, from the left.
            </summary>
            <param name="Element">Element to add.</param>
            <returns>Result, if understood, null otherwise.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.AddRight(Waher.Script.Abstraction.Elements.ISemiGroupElement)">
            <summary>
            Tries to add an element to the current element, from the right.
            </summary>
            <param name="Element">Element to add.</param>
            <returns>Result, if understood, null otherwise.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Equals(System.Object)">
            <summary>
            Compares the element to another.
            </summary>
            <param name="obj">Other element to compare against.</param>
            <returns>If elements are equal.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.GetHashCode">
            <summary>
            Calculates a hash code of the element.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.ToPhongIntensity(System.Object)">
            <summary>
            Converts an object to a <see cref="T:Waher.Script.Graphs3D.PhongIntensity"/> object.
            </summary>
            <param name="Object">Object</param>
            <returns>Phong intensity object.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.ResetTransforms">
            <summary>
            Resets any transforms.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Canvas3D.ProjectionTransformation">
            <summary>
            Current projection transformation matrix.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Perspective(System.Single,System.Single)">
            <summary>
            Applies a perspective projection.
            </summary>
            <param name="NearPlaneDistance">Distance between near projection plane and camera.</param>
            <param name="FarPlaneDistance">Distance between far projection plane and camera.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="P:Waher.Script.Graphs3D.Canvas3D.ViewerPosition">
            <summary>
            Viewer position
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Project(System.Numerics.Vector4)">
            <summary>
            Transforms coordinates to screen coordinates.
            </summary>
            <param name="Point">Point.</param>
            <returns>Transformed point.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Project(System.Numerics.Vector3)">
            <summary>
            Transforms a world coordinate to a display coordinate.
            </summary>
            <param name="Point">Point.</param>
            <returns>Transformed point.</returns>
        </member>
        <member name="P:Waher.Script.Graphs3D.Canvas3D.ModelTransformation">
            <summary>
            Current model transformation matrix.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.ModelTransform(System.Numerics.Vector4)">
            <summary>
            Transforms a world coordinate to a display coordinate.
            </summary>
            <param name="Point">Point.</param>
            <returns>Transformed point.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.ModelTransform(System.Numerics.Vector3)">
            <summary>
            Transforms a world coordinate to a display coordinate.
            </summary>
            <param name="Point">Point.</param>
            <returns>Transformed point.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.RotateX(System.Single)">
            <summary>
            Rotates the world around the X-axis.
            </summary>
            <param name="Degrees">Degrees</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.RotateX(System.Single,System.Object)">
            <summary>
            Rotates the world around an axis parallel to the X-axis, going through
            the center point <paramref name="CenterPoint"/>.
            </summary>
            <param name="Degrees">Degrees</param>
            <param name="CenterPoint">Center point.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.RotateX(System.Single,System.Numerics.Vector3)">
            <summary>
            Rotates the world around an axis parallel to the X-axis, going through
            the center point <paramref name="CenterPoint"/>.
            </summary>
            <param name="Degrees">Degrees</param>
            <param name="CenterPoint">Center point.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.RotateY(System.Single)">
            <summary>
            Rotates the world around the Y-axis.
            </summary>
            <param name="Degrees">Degrees</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.RotateY(System.Single,System.Object)">
            <summary>
            Rotates the world around an axis parallel to the Y-axis, going through
            the center point <paramref name="CenterPoint"/>.
            </summary>
            <param name="Degrees">Degrees</param>
            <param name="CenterPoint">Center point.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.RotateY(System.Single,System.Numerics.Vector3)">
            <summary>
            Rotates the world around an axis parallel to the Y-axis, going through
            the center point <paramref name="CenterPoint"/>.
            </summary>
            <param name="Degrees">Degrees</param>
            <param name="CenterPoint">Center point.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.RotateZ(System.Single)">
            <summary>
            Rotates the world around the Z-axis.
            </summary>
            <param name="Degrees">Degrees</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.RotateZ(System.Single,System.Object)">
            <summary>
            Rotates the world around an axis parallel to the Z-axis, going through
            the center point <paramref name="CenterPoint"/>.
            </summary>
            <param name="Degrees">Degrees</param>
            <param name="CenterPoint">Center point.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.RotateZ(System.Single,System.Numerics.Vector3)">
            <summary>
            Rotates the world around an axis parallel to the Z-axis, going through
            the center point <paramref name="CenterPoint"/>.
            </summary>
            <param name="Degrees">Degrees</param>
            <param name="CenterPoint">Center point.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Scale(System.Single)">
            <summary>
            Scales the world
            </summary>
            <param name="Scale">Scale</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Scale(System.Single,System.Object)">
            <summary>
            Scales the world
            </summary>
            <param name="Scale">Scale</param>
            <param name="CenterPoint">Center point.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Scale(System.Single,System.Numerics.Vector3)">
            <summary>
            Scales the world
            </summary>
            <param name="Scale">Scale</param>
            <param name="CenterPoint">Center point.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Scale(System.Single,System.Single,System.Single)">
            <summary>
            Scales the world
            </summary>
            <param name="ScaleX">Scale along X-axis.</param>
            <param name="ScaleY">Scale along Y-axis.</param>
            <param name="ScaleZ">Scale along Z-axis.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Scale(System.Single,System.Single,System.Single,System.Object)">
            <summary>
            Scales the world
            </summary>
            <param name="ScaleX">Scale along X-axis.</param>
            <param name="ScaleY">Scale along Y-axis.</param>
            <param name="ScaleZ">Scale along Z-axis.</param>
            <param name="CenterPoint">Center point.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Scale(System.Single,System.Single,System.Single,System.Numerics.Vector3)">
            <summary>
            Scales the world
            </summary>
            <param name="ScaleX">Scale along X-axis.</param>
            <param name="ScaleY">Scale along Y-axis.</param>
            <param name="ScaleZ">Scale along Z-axis.</param>
            <param name="CenterPoint">Center point.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Translate(System.Numerics.Vector3)">
            <summary>
            Translates the world.
            </summary>
            <param name="Delta">Movement vector.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Translate(System.Single,System.Single,System.Single)">
            <summary>
            Translates the world.
            </summary>
            <param name="DeltaX">Movement along the X-axis.</param>
            <param name="DelayY">Movement along the Y-axis.</param>
            <param name="DeltaZ">Movement along the Z-axis.</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.LookAt(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Places the observer at the point (<paramref name="PositionX"/>, <paramref name="PositionY"/>, <paramref name="PositionZ"/>), looking at
            the point (<paramref name="TargetX"/>, <paramref name="TargetY"/>, <paramref name="TargetZ"/>), with upwards pointing in the direction of
            (<paramref name="UpX"/>, <paramref name="UpY"/>, <paramref name="UpZ"/>) (as a vector, from the position of the observer).
            </summary>
            <param name="PositionX">X-Coordinte of position point of the observer.</param>
            <param name="PositionY">Y-Coordinte of position point of the observer.</param>
            <param name="PositionZ">Z-Coordinte of position point of the observer.</param>
            <param name="TargetX">X-Coordinate of point being observed.</param>
            <param name="TargetY">Y-Coordinate of point being observed.</param>
            <param name="TargetZ">Z-Coordinate of point being observed.</param>
            <param name="UpX">X-Coordinate of vector pointing in the direction of up, from the 
            point of the observer (<paramref name="PositionX"/>).</param>
            <param name="UpY">Y-Coordinate of vector pointing in the direction of up, from the 
            point of the observer (<paramref name="PositionY"/>).</param>
            <param name="UpZ">Z-Coordinate of vector pointing in the direction of up, from the 
            point of the observer (<paramref name="PositionZ"/>).</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.LookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Places the observer at the point <paramref name="Position"/>, looking at
            the point <paramref name="Target"/>, with upwards pointing in the direction of
            <paramref name="Up"/> (as a vector, from the position of the observer).
            </summary>
            <param name="Position">Position point of the observer.</param>
            <param name="Target">Point being observed.</param>
            <param name="Up">Vector pointing in the direction of up, from the 
            point of the observer (<paramref name="Position"/>).</param>
            <returns>Previous model transformation matrix.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Plot(System.Numerics.Vector4,SkiaSharp.SKColor)">
            <summary>
            Plots a point on the 3D-canvas.
            </summary>
            <param name="Point">Point to plot.</param>
            <param name="Color">Color.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Plot(System.Numerics.Vector4,System.UInt32)">
            <summary>
            Plots a point on the 3D-canvas.
            </summary>
            <param name="Point">Point to plot.</param>
            <param name="Color">Color.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Line(System.Numerics.Vector4,System.Numerics.Vector4,SkiaSharp.SKColor)">
            <summary>
            Draws a line between P0 and P1.
            </summary>
            <param name="P0">Point 1.</param>
            <param name="P1">Point 2.</param>
            <param name="Color">Color</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Line(System.Numerics.Vector4,System.Numerics.Vector4,System.UInt32)">
            <summary>
            Draws a line between P0 and P1.
            </summary>
            <param name="P0">Point 1.</param>
            <param name="P1">Point 2.</param>
            <param name="Color">Color</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.MoveTo(System.Numerics.Vector4)">
            <summary>
            Moves to a point.
            </summary>
            <param name="Point">Point.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.LineTo(System.Numerics.Vector4,SkiaSharp.SKColor)">
            <summary>
            Draws a line to <paramref name="Point"/> from the last endpoint.
            </summary>
            <param name="Point">Point.</param>
            <param name="Color">Color</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.LineTo(System.Numerics.Vector4,System.UInt32)">
            <summary>
            Draws a line to <paramref name="Point"/> from the last endpoint.
            </summary>
            <param name="Point">Point.</param>
            <param name="Color">Color</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.PolyLine(System.Numerics.Vector4[],SkiaSharp.SKColor)">
            <summary>
            Draws lines between a set of nodes.
            </summary>
            <param name="Nodes">Nodes</param>
            <param name="Color">Color</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.PolyLine(System.Numerics.Vector4[],System.UInt32)">
            <summary>
            Draws lines between a set of nodes.
            </summary>
            <param name="Nodes">Nodes</param>
            <param name="Color">Color</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.ToVector3(System.Numerics.Vector4)">
            <summary>
            Converts a <see cref="T:System.Numerics.Vector4"/> to a <see cref="T:System.Numerics.Vector3"/>.
            </summary>
            <param name="P">Point, or vector.</param>
            <returns>Point or vector.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.ToVector3(System.Object)">
            <summary>
            Converts a <see cref="T:System.Numerics.Vector4"/> to a <see cref="T:System.Numerics.Vector3"/>.
            </summary>
            <param name="Object">Untyped point, or vector.</param>
            <returns>Point or vector.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.ToPoint(System.Numerics.Vector3)">
            <summary>
            Converts a <see cref="T:System.Numerics.Vector3"/> to a <see cref="T:System.Numerics.Vector4"/> point.
            </summary>
            <param name="P">Point, or vector.</param>
            <returns>Point.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.ToVector(System.Numerics.Vector3)">
            <summary>
            Converts a <see cref="T:System.Numerics.Vector3"/> to a <see cref="T:System.Numerics.Vector4"/> vector.
            </summary>
            <param name="P">Point, or vector.</param>
            <returns>Vector.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.CalcNormal(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Calculates a normal to the plane that goes through P0, P1 and P2.
            </summary>
            <param name="P0">Point 1</param>
            <param name="P1">Point 2</param>
            <param name="P2">Point 3</param>
            <returns>Normal</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.CalcNormal(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)">
            <summary>
            Calculates a normal to the plane that goes through P0, P1 and P2.
            </summary>
            <param name="P0">Point 1</param>
            <param name="P1">Point 2</param>
            <param name="P2">Point 3</param>
            <returns>Normal</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Polygon(System.Numerics.Vector4[],SkiaSharp.SKColor,System.Boolean)">
            <summary>
            Draws a closed polygon.
            </summary>
            <param name="Nodes">Nodes.</param>
            <param name="Color">Color</param>
            <param name="TwoSided">If the polygon is two-sided.
            If true, <paramref name="Color"/> is used on both sides.
            If false, <paramref name="Color"/> is only used on the front side.
            Which side is the front side, is determined from the Normal vector
            and viewing position. The Normal vector is determined from the order 
            of the nodes defining the polygon.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Polygon(System.Numerics.Vector4[],System.Numerics.Vector4[],SkiaSharp.SKColor,System.Boolean)">
            <summary>
            Draws a closed polygon.
            </summary>
            <param name="Nodes">Nodes.</param>
            <param name="Normals">Normals</param>
            <param name="Color">Color</param>
            <param name="TwoSided">If the polygon is two-sided.
            If true, <paramref name="Color"/> is used on both sides.
            If false, <paramref name="Color"/> is only used on the front side.
            Which side is the front side, is determined from the Normal vector
            and viewing position. The Normal vector is determined from the order 
            of the nodes defining the polygon.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Polygon(System.Numerics.Vector4[],Waher.Script.Graphs3D.I3DShader,System.Boolean)">
            <summary>
            Draws a closed polygon.
            </summary>
            <param name="Nodes">Nodes.</param>
            <param name="Shader">Shader.</param>
            <param name="TwoSided">If the polygon is two-sided.
            If true, <paramref name="Shader"/> is used on both sides.
            If false, <paramref name="Shader"/> is only used on the front side.
            Which side is the front side, is determined from the Normal vector
            and viewing position. The Normal vector is determined from the order 
            of the nodes defining the polygon.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Polygon(System.Numerics.Vector4[],System.Numerics.Vector4[],Waher.Script.Graphs3D.I3DShader,System.Boolean)">
            <summary>
            Draws a closed polygon.
            </summary>
            <param name="Nodes">Nodes.</param>
            <param name="Normals">Normals</param>
            <param name="Shader">Shader.</param>
            <param name="TwoSided">If the polygon is two-sided.
            If true, <paramref name="Shader"/> is used on both sides.
            If false, <paramref name="Shader"/> is only used on the front side.
            Which side is the front side, is determined from the Normal vector
            and viewing position. The Normal vector is determined from the order 
            of the nodes defining the polygon.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Polygons(System.Numerics.Vector4[][],SkiaSharp.SKColor,System.Boolean)">
            <summary>
            Draws a set of closed polygons. Interior polygons can be used to undraw the corresponding sections.
            </summary>
            <param name="Nodes">Nodes.</param>
            <param name="Color">Color</param>
            <param name="TwoSided">If the polygon is two-sided.
            If true, <paramref name="Color"/> is used on both sides.
            If false, <paramref name="Color"/> is only used on the front side.
            Which side is the front side, is determined from the Normal vector
            and viewing position. The Normal vector is determined from the order 
            of the nodes defining the polygon.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Polygons(System.Numerics.Vector4[][],System.Numerics.Vector4[][],SkiaSharp.SKColor,System.Boolean)">
            <summary>
            Draws a set of closed polygons. Interior polygons can be used to undraw the corresponding sections.
            </summary>
            <param name="Nodes">Nodes.</param>
            <param name="Normals">Normals</param>
            <param name="Color">Color</param>
            <param name="TwoSided">If the polygon is two-sided.
            If true, <paramref name="Color"/> is used on both sides.
            If false, <paramref name="Color"/> is only used on the front side.
            Which side is the front side, is determined from the Normal vector
            and viewing position. The Normal vector is determined from the order 
            of the nodes defining the polygon.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Polygons(System.Numerics.Vector4[][],Waher.Script.Graphs3D.I3DShader,System.Boolean)">
            <summary>
            Draws a set of closed polygons. Interior polygons can be used to undraw the corresponding sections.
            </summary>
            <param name="Nodes">Nodes.</param>
            <param name="Shader">Shader.</param>
            <param name="TwoSided">If the polygon is two-sided.
            If true, <paramref name="Shader"/> is used on both sides.
            If false, <paramref name="Shader"/> is only used on the front side.
            Which side is the front side, is determined from the Normal vector
            and viewing position. The Normal vector is determined from the order 
            of the nodes defining the polygon.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Polygons(System.Numerics.Vector4[][],System.Numerics.Vector4[][],Waher.Script.Graphs3D.I3DShader,System.Boolean)">
            <summary>
            Draws a set of closed polygons. Interior polygons can be used to undraw the corresponding sections.
            </summary>
            <param name="Nodes">Nodes.</param>
            <param name="Normals">Normals</param>
            <param name="Shader">Shader.</param>
            <param name="TwoSided">If the polygon is two-sided.
            If true, <paramref name="Shader"/> is used on both sides.
            If false, <paramref name="Shader"/> is only used on the front side.
            Which side is the front side, is determined from the Normal vector
            and viewing position. The Normal vector is determined from the order 
            of the nodes defining the polygon.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Polygons(System.Numerics.Vector4[][],Waher.Script.Graphs3D.I3DShader,Waher.Script.Graphs3D.I3DShader)">
            <summary>
            Draws a set of closed polygons. Interior polygons can be used to undraw the corresponding sections.
            </summary>
            <param name="Nodes">Nodes.</param>
            <param name="FrontShader">Front side Shader.</param>
            <param name="BackShader">Back side Shader.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Polygons(System.Numerics.Vector4[][],System.Numerics.Vector4[][],Waher.Script.Graphs3D.I3DShader,Waher.Script.Graphs3D.I3DShader)">
            <summary>
            Draws a set of closed polygons. Interior polygons can be used to undraw the corresponding sections.
            </summary>
            <param name="Nodes">Nodes.</param>
            <param name="Normals">Normals</param>
            <param name="FrontShader">Front side Shader.</param>
            <param name="BackShader">Back side Shader.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Text(System.String,System.Numerics.Vector4,System.String,System.Single,SkiaSharp.SKColor)">
            <summary>
            Draws text on the canvas.
            </summary>
            <param name="Text">Text to draw.</param>
            <param name="Start">Start position.</param>
            <param name="FontFamily">Font family.</param>
            <param name="TextSize">Text size.</param>
            <param name="Color">Text color.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Text(System.String,System.Numerics.Vector4,System.String,SkiaSharp.SKFontStyleWeight,System.Single,SkiaSharp.SKColor)">
            <summary>
            Draws text on the canvas.
            </summary>
            <param name="Text">Text to draw.</param>
            <param name="Start">Start position.</param>
            <param name="FontFamily">Font family.</param>
            <param name="Weight">Font weight.</param>
            <param name="TextSize">Text size.</param>
            <param name="Color">Text color.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Text(System.String,System.Numerics.Vector4,System.String,SkiaSharp.SKFontStyleWeight,SkiaSharp.SKFontStyleWidth,System.Single,SkiaSharp.SKColor)">
            <summary>
            Draws text on the canvas.
            </summary>
            <param name="Text">Text to draw.</param>
            <param name="Start">Start position.</param>
            <param name="FontFamily">Font family.</param>
            <param name="Weight">Font weight.</param>
            <param name="Width">Font width.</param>
            <param name="TextSize">Text size.</param>
            <param name="Color">Text color.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Text(System.String,System.Numerics.Vector4,System.String,SkiaSharp.SKFontStyleWeight,SkiaSharp.SKFontStyleWidth,SkiaSharp.SKFontStyleSlant,System.Single,SkiaSharp.SKColor)">
            <summary>
            Draws text on the canvas.
            </summary>
            <param name="Text">Text to draw.</param>
            <param name="Start">Start position.</param>
            <param name="FontFamily">Font family.</param>
            <param name="Weight">Font weight.</param>
            <param name="Width">Font width.</param>
            <param name="Slant">Font slant.</param>
            <param name="TextSize">Text size.</param>
            <param name="Color">Text color.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.TextDimensions(System.String,System.String,System.Single)">
            <summary>
            Measures the size of text to be output.
            </summary>
            <param name="Text">Text to draw.</param>
            <param name="FontFamily">Font family.</param>
            <param name="TextSize">Text size.</param>
            <returns>Size of text.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.TextDimensions(System.String,System.String,SkiaSharp.SKFontStyleWeight,System.Single)">
            <summary>
            Measures the size of text to be output.
            </summary>
            <param name="Text">Text to draw.</param>
            <param name="FontFamily">Font family.</param>
            <param name="Weight">Font weight.</param>
            <param name="TextSize">Text size.</param>
            <returns>Size of text.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.TextDimensions(System.String,System.String,SkiaSharp.SKFontStyleWeight,SkiaSharp.SKFontStyleWidth,System.Single)">
            <summary>
            Measures the size of text to be output.
            </summary>
            <param name="Text">Text to draw.</param>
            <param name="FontFamily">Font family.</param>
            <param name="Weight">Font weight.</param>
            <param name="Width">Font width.</param>
            <param name="TextSize">Text size.</param>
            <returns>Size of text.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.TextDimensions(System.String,System.String,SkiaSharp.SKFontStyleWeight,SkiaSharp.SKFontStyleWidth,SkiaSharp.SKFontStyleSlant,System.Single)">
            <summary>
            Measures the size of text to be output.
            </summary>
            <param name="Text">Text to draw.</param>
            <param name="FontFamily">Font family.</param>
            <param name="Weight">Font weight.</param>
            <param name="Width">Font width.</param>
            <param name="Slant">Font slant.</param>
            <param name="TextSize">Text size.</param>
            <returns>Size of text.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.TextWidth(System.String,System.String,System.Single)">
            <summary>
            Measures the width of text to be output.
            </summary>
            <param name="Text">Text to draw.</param>
            <param name="FontFamily">Font family.</param>
            <param name="TextSize">Text size.</param>
            <returns>Width of text.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.TextWidth(System.String,System.String,SkiaSharp.SKFontStyleWeight,System.Single)">
            <summary>
            Measures the width of text to be output.
            </summary>
            <param name="Text">Text to draw.</param>
            <param name="FontFamily">Font family.</param>
            <param name="Weight">Font weight.</param>
            <param name="TextSize">Text size.</param>
            <returns>Width of text.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.TextWidth(System.String,System.String,SkiaSharp.SKFontStyleWeight,SkiaSharp.SKFontStyleWidth,System.Single)">
            <summary>
            Measures the width of text to be output.
            </summary>
            <param name="Text">Text to draw.</param>
            <param name="FontFamily">Font family.</param>
            <param name="Weight">Font weight.</param>
            <param name="Width">Font width.</param>
            <param name="TextSize">Text size.</param>
            <returns>Width of text.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.TextWidth(System.String,System.String,SkiaSharp.SKFontStyleWeight,SkiaSharp.SKFontStyleWidth,SkiaSharp.SKFontStyleSlant,System.Single)">
            <summary>
            Measures the width of text to be output.
            </summary>
            <param name="Text">Text to draw.</param>
            <param name="FontFamily">Font family.</param>
            <param name="Weight">Font weight.</param>
            <param name="Width">Font width.</param>
            <param name="Slant">Font slant.</param>
            <param name="TextSize">Text size.</param>
            <returns>Width of text.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Box(System.Numerics.Vector4,System.Numerics.Vector4,Waher.Script.Graphs3D.I3DShader)">
            <summary>
            Draws a box, with sides parallell to the x, y and z axis.
            </summary>
            <param name="Corner1">First corner</param>
            <param name="Corner2">Second corner</param>
            <param name="Shader">Shader.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Box(System.Numerics.Vector3,System.Numerics.Vector3,Waher.Script.Graphs3D.I3DShader)">
            <summary>
            Draws a box, with sides parallell to the x, y and z axis.
            </summary>
            <param name="Corner1">First corner</param>
            <param name="Corner2">Second corner</param>
            <param name="Shader">Shader.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Box(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Waher.Script.Graphs3D.I3DShader)">
            <summary>
            Draws a box, with sides parallell to the x, y and z axis.
            </summary>
            <param name="x1">X-axis of first corner.</param>
            <param name="y1">Y-axis of first corner.</param>
            <param name="z1">Z-axis of first corner.</param>
            <param name="x2">X-axis of second corner.</param>
            <param name="y2">Y-axis of second corner.</param>
            <param name="z2">Z-axis of second corner.</param>
            <param name="Shader">Shader.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Ellipsoid(System.Numerics.Vector3,System.Numerics.Vector3,System.Int32,Waher.Script.Graphs3D.I3DShader)">
            <summary>
            Draws an ellipsoid, with axes parallell to the x, y and z axis.
            </summary>
            <param name="Center">Center-point</param>
            <param name="Radius">Radius vectors</param>
            <param name="Facets">Number of facets to use to (at least), to draw ellipsoid</param>
            <param name="Shader">Shader.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.Ellipsoid(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,Waher.Script.Graphs3D.I3DShader)">
            <summary>
            Draws an ellipsoid, with axes parallell to the x, y and z axis.
            </summary>
            <param name="cx">Center-point X-coordinate.</param>
            <param name="cy">Center-point Y-coordinate.</param>
            <param name="cz">Center-point Z-coordinate.</param>
            <param name="rx">Radius along X-axis.</param>
            <param name="ry">Radius along Y-axis.</param>
            <param name="rz">Radius along Z-axis.</param>
            <param name="Facets">Number of facets to use to (at least), to draw ellipsoid</param>
            <param name="Shader">Shader.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.ExportGraph(System.Xml.XmlWriter)">
            <summary>
            Exports graph specifics to XML.
            </summary>
            <param name="Output">XML output.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.ImportGraph(System.Xml.XmlElement)">
            <summary>
            Imports graph specifics from XML.
            </summary>
            <param name="Xml">XML input.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Canvas3D.UsesDefaultColor">
            <summary>
            If graph uses default color
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Canvas3D.TrySetDefaultColor(SkiaSharp.SKColor)">
            <summary>
            Tries to set the default color.
            </summary>
            <param name="Color">Default color.</param>
            <returns>If possible to set.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.ConstantColor">
            <summary>
            Shader returning a constant color.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.ConstantColor.#ctor(SkiaSharp.SKColor)">
            <summary>
            Shader returning a constant color.
            </summary>
            <param name="Color">Color</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.ConstantColor.Color">
            <summary>
            Constant color.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.ConstantColor.GetColor(System.Single,System.Single,System.Single,System.Numerics.Vector3,Waher.Script.Graphs3D.Canvas3D)">
            <summary>
            Gets a color for a position.
            </summary>
            <param name="X">X-coordinate.</param>
            <param name="Y">Y-coordinate.</param>
            <param name="Z">Z-coordinate.</param>
            <param name="Normal">Surface normal vector.</param>
            <param name="Canvas">Current canvas.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.ConstantColor.GetColors(System.Single[],System.Single[],System.Single[],System.Numerics.Vector3[],System.Int32,SkiaSharp.SKColor[],Waher.Script.Graphs3D.Canvas3D)">
            <summary>
            Gets an array of colors.
            </summary>
            <param name="X">X-coordinates.</param>
            <param name="Y">Y-coordinates.</param>
            <param name="Z">Z-coordinates.</param>
            <param name="Normals">Normal vectors.</param>
            <param name="N">Number of coordinates.</param>
            <param name="Colors">Where color values will be stored.</param>
            <param name="Canvas">Current canvas.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.ConstantColor.Opaque">
            <summary>
            If shader is 100% opaque.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.ConstantColor.ToScript">
            <summary>
            Exports shader specifics to script.
            </summary>
            <returns>Exports the shader to parsable script.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.DrawingVolume">
            <summary>
            Contains information about the current drawing area.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.DrawingVolume.#ctor(Waher.Script.Abstraction.Elements.IElement,Waher.Script.Abstraction.Elements.IElement,Waher.Script.Abstraction.Elements.IElement,Waher.Script.Abstraction.Elements.IElement,Waher.Script.Abstraction.Elements.IElement,Waher.Script.Abstraction.Elements.IElement,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Contains information about the current drawing area.
            </summary>
            <param name="MinX">Smallest value of X.</param>
            <param name="MaxX">Largest value of X.</param>
            <param name="MinY">Smallest value of Y.</param>
            <param name="MaxY">Largest value of Y.</param>
            <param name="MinZ">Smallest value of Z.</param>
            <param name="MaxZ">Largest value of Z.</param>
            <param name="OffsetX">X-offset of drawing area, relative to the canvas origin.</param>
            <param name="OffsetY">Y-offset of drawing area, relative to the canvas origin.</param>
            <param name="OffsetZ">Z-offset of drawing area, relative to the canvas origin.</param>
            <param name="Width">Width (x) of drawing area.</param>
            <param name="Height">Height (y) of drawing area.</param>
            <param name="Depth">Depth (z) of drawing area.</param>
            <param name="OrigoX">X-coordinate of the origo.</param>
            <param name="OrigoY">Y-coordinate of the origo.</param>
            <param name="OrigoZ">Z-coordinate of the origo.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.MinX">
            <summary>
            Smallest value of X.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.MaxX">
            <summary>
            Largest value of X.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.MinY">
            <summary>
            Smallest value of Y.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.MaxY">
            <summary>
            Largest value of Y.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.MinZ">
            <summary>
            Smallest value of Z.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.MaxZ">
            <summary>
            Largest value of Z.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.OffsetX">
            <summary>
            X-offset of drawing area, relative to the canvas origin.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.OffsetY">
            <summary>
            Y-offset of drawing area, relative to the canvas origin.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.OffsetZ">
            <summary>
            Z-offset of drawing area, relative to the canvas origin.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.Width">
            <summary>
            Width of drawing area.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.Height">
            <summary>
            Height of drawing area.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.Depth">
            <summary>
            Depth of drawing area.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.OrigoX">
            <summary>
            X-coordinate for the origo.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.OrigoY">
            <summary>
            Y-coordinate for the origo.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.DrawingVolume.OrigoZ">
            <summary>
            Z-coordinate for the origo.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.DrawingVolume.Scale(Waher.Script.Abstraction.Elements.IMatrix,Waher.Script.Abstraction.Elements.IMatrix,Waher.Script.Abstraction.Elements.IMatrix)">
            <summary>
            Scales three matrices of equal size to point vectors in space.
            </summary>
            <param name="MatrixX">X-matrix.</param>
            <param name="MatrixY">Y-matrix.</param>
            <param name="MatrixZ">Z-matrix.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.DrawingVolume.ScaleX(Waher.Script.Abstraction.Elements.IMatrix)">
            <summary>
            Scales a matrix with x-coordinates to fit a given volume.
            </summary>
            <param name="Matrix">Matrix.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.DrawingVolume.ScaleX(Waher.Script.Abstraction.Elements.IVector)">
            <summary>
            Scales a vector of x-coordinates to fit a given volume.
            </summary>
            <param name="Vector">Vector.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.DrawingVolume.ScaleY(Waher.Script.Abstraction.Elements.IMatrix)">
            <summary>
            Scales a matrix with y-coordinates to fit a given volume.
            </summary>
            <param name="Matrix">Matrix.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.DrawingVolume.ScaleY(Waher.Script.Abstraction.Elements.IVector)">
            <summary>
            Scales a vector of y-coordinates to fit a given volume.
            </summary>
            <param name="Vector">Vector.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.DrawingVolume.ScaleZ(Waher.Script.Abstraction.Elements.IMatrix)">
            <summary>
            Scales a matrix with z-coordinates to fit a given volume.
            </summary>
            <param name="Matrix">Matrix.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.DrawingVolume.ScaleZ(Waher.Script.Abstraction.Elements.IVector)">
            <summary>
            Scales a vector of z-coordinates to fit a given volume.
            </summary>
            <param name="Vector">Vector.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.DrawingVolume.DescaleX(System.Double)">
            <summary>
            Descales a scaled value along the X-axis.
            </summary>
            <param name="Value">Scaled value.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.DrawingVolume.DescaleY(System.Double)">
            <summary>
            Descales a scaled value along the Y-axis.
            </summary>
            <param name="Value">Scaled value.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.DrawingVolume.DescaleZ(System.Double)">
            <summary>
            Descales a scaled value along the Z-axis.
            </summary>
            <param name="Value">Scaled value.</param>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Canvas3D">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.Canvas3D"/> object.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Canvas3D.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.Canvas3D"/> object.
            </summary>
            <param name="Width">Width of canvas.</param>
            <param name="Height">Height of canvas.</param>
            <param name="Oversampling">Oversampling.</param>
            <param name="BackgroupColor">Background color.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Canvas3D.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Canvas3D.DefaultArgumentNames">
            <summary>
            Default Argument names
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Canvas3D.Evaluate(Waher.Script.Abstraction.Elements.IElement[],Waher.Script.Variables)">
            <summary>
            Evaluates the function.
            </summary>
            <param name="Arguments">Function arguments.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Matrices.Columns">
            <summary>
            Creates a matrix whose columns have elements of the same value, each defined by 
            the corresponding element in the input vector.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Matrices.Columns.#ctor(Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Creates a matrix whose columns have elements of the same value, each defined by 
            the corresponding element in the input vector.
            </summary>
            <param name="Argument">Argument.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression containing script.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Matrices.Columns.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Matrices.Columns.EvaluateVector(Waher.Script.Objects.VectorSpaces.DoubleVector,Waher.Script.Variables)">
            <summary>
            Evaluates the function on a vector argument.
            </summary>
            <param name="Argument">Function argument.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Matrices.Columns.EvaluateVector(Waher.Script.Objects.VectorSpaces.ComplexVector,Waher.Script.Variables)">
            <summary>
            Evaluates the function on a vector argument.
            </summary>
            <param name="Argument">Function argument.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Matrices.Columns.EvaluateVector(Waher.Script.Objects.VectorSpaces.BooleanVector,Waher.Script.Variables)">
            <summary>
            Evaluates the function on a vector argument.
            </summary>
            <param name="Argument">Function argument.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Matrices.Columns.EvaluateVector(Waher.Script.Abstraction.Elements.IVector,Waher.Script.Variables)">
            <summary>
            Evaluates the function on a vector argument.
            </summary>
            <param name="Argument">Function argument.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Matrices.Matrix4x4">
            <summary>
            Generates a <see cref="T:System.Numerics.Matrix4x4"/> object.
            </summary>
        </member>
        <member name="F:Waher.Script.Graphs3D.Functions.Matrices.Matrix4x4.argumentTypes16Scalar">
            <summary>
            Sixteen scalar parameters.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Matrices.Matrix4x4.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Generates a <see cref="T:System.Numerics.Matrix4x4"/> object.
            </summary>
            <param name="M11">Element for row 1, column 1.</param>
            <param name="M12">Element for row 1, column 2.</param>
            <param name="M13">Element for row 1, column 3.</param>
            <param name="M14">Element for row 1, column 4.</param>
            <param name="M21">Element for row 2, column 1.</param>
            <param name="M22">Element for row 2, column 2.</param>
            <param name="M23">Element for row 2, column 3.</param>
            <param name="M24">Element for row 2, column 4.</param>
            <param name="M31">Element for row 3, column 1.</param>
            <param name="M32">Element for row 3, column 2.</param>
            <param name="M33">Element for row 3, column 3.</param>
            <param name="M34">Element for row 3, column 4.</param>
            <param name="M41">Element for row 4, column 1.</param>
            <param name="M42">Element for row 4, column 2.</param>
            <param name="M43">Element for row 4, column 3.</param>
            <param name="M44">Element for row 4, column 4.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Matrices.Matrix4x4.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Matrices.Matrix4x4.DefaultArgumentNames">
            <summary>
            Default Argument names
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Matrices.Matrix4x4.Evaluate(Waher.Script.Abstraction.Elements.IElement[],Waher.Script.Variables)">
            <summary>
            Evaluates the function.
            </summary>
            <param name="Arguments">Function arguments.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Matrices.Rows">
            <summary>
            Creates a matrix whose rows have elements of the same value, each defined by 
            the corresponding element in the input vector.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Matrices.Rows.#ctor(Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Creates a matrix whose rows have elements of the same value, each defined by 
            the corresponding element in the input vector.
            </summary>
            <param name="Argument">Argument.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression containing script.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Matrices.Rows.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Matrices.Rows.EvaluateVector(Waher.Script.Objects.VectorSpaces.DoubleVector,Waher.Script.Variables)">
            <summary>
            Evaluates the function on a vector argument.
            </summary>
            <param name="Argument">Function argument.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Matrices.Rows.EvaluateVector(Waher.Script.Objects.VectorSpaces.ComplexVector,Waher.Script.Variables)">
            <summary>
            Evaluates the function on a vector argument.
            </summary>
            <param name="Argument">Function argument.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Matrices.Rows.EvaluateVector(Waher.Script.Objects.VectorSpaces.BooleanVector,Waher.Script.Variables)">
            <summary>
            Evaluates the function on a vector argument.
            </summary>
            <param name="Argument">Function argument.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Matrices.Rows.EvaluateVector(Waher.Script.Abstraction.Elements.IVector,Waher.Script.Variables)">
            <summary>
            Evaluates the function on a vector argument.
            </summary>
            <param name="Argument">Function argument.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Plots.LineMesh3D">
            <summary>
            Plots a three-dimensional line mesh.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.LineMesh3D.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Plots a three-dimensional line mesh.
            </summary>
            <param name="X">X-axis.</param>
            <param name="Y">Y-axis.</param>
            <param name="Z">Z-axis.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression containing script.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.LineMesh3D.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Plots a three-dimensional line mesh.
            </summary>
            <param name="X">X-axis.</param>
            <param name="Y">Y-axis.</param>
            <param name="Z">Z-axis.</param>
            <param name="Color">Color.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression containing script.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Plots.LineMesh3D.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Plots.LineMesh3D.DefaultArgumentNames">
            <summary>
            Default Argument names
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.LineMesh3D.Evaluate(Waher.Script.Abstraction.Elements.IElement[],Waher.Script.Variables)">
            <summary>
            Evaluates the function.
            </summary>
            <param name="Arguments">Function arguments.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Plots.LineMesh3DPainter">
            <summary>
            Plots a three-dimensional line mesh.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.LineMesh3DPainter.DrawGraph(Waher.Script.Graphs3D.Canvas3D,System.Numerics.Vector4[0:,0:],System.Numerics.Vector4[0:,0:],System.Object[],System.Numerics.Vector4[0:,0:],System.Numerics.Vector4[0:,0:],System.Object[],Waher.Script.Graphs3D.DrawingVolume)">
            <summary>
            Draws the graph on a canvas.
            </summary>
            <param name="Canvas">Canvas to draw on.</param>
            <param name="Points">Points to draw.</param>
            <param name="Normals">Optional normals.</param>
            <param name="Parameters">Graph-specific parameters.</param>
            <param name="PrevPoints">Points of previous graph of same type (if available), null (if not available).</param>
            <param name="PrevNormals">Optional normals of previous graph of same type (if available), null (if not available).</param>
            <param name="PrevParameters">Parameters of previous graph of same type (if available), null (if not available).</param>
            <param name="DrawingVolume">Current drawing volume.</param>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Plots.PolygonMesh3D">
            <summary>
            Plots a three-dimensional surface mesh.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.PolygonMesh3D.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Plots a three-dimensional surface mesh.
            </summary>
            <param name="X">X-axis.</param>
            <param name="Y">Y-axis.</param>
            <param name="Z">Z-axis.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression containing script.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.PolygonMesh3D.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Plots a three-dimensional surface mesh.
            </summary>
            <param name="X">X-axis.</param>
            <param name="Y">Y-axis.</param>
            <param name="Z">Z-axis.</param>
            <param name="Shader">Color or shader.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression containing script.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.PolygonMesh3D.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Plots a three-dimensional surface mesh.
            </summary>
            <param name="X">X-axis.</param>
            <param name="Y">Y-axis.</param>
            <param name="Z">Z-axis.</param>
            <param name="Shader">Color or shader.</param>
            <param name="TwoSided">If the surface is two-sided.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression containing script.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Plots.PolygonMesh3D.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Plots.PolygonMesh3D.DefaultArgumentNames">
            <summary>
            Default Argument names
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.PolygonMesh3D.Evaluate(Waher.Script.Abstraction.Elements.IElement[],Waher.Script.Variables)">
            <summary>
            Evaluates the function.
            </summary>
            <param name="Arguments">Function arguments.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Plots.PolygonMesh3DPainter">
            <summary>
            Plots a three-dimensional surface mesh.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.PolygonMesh3DPainter.DrawGraph(Waher.Script.Graphs3D.Canvas3D,System.Numerics.Vector4[0:,0:],System.Numerics.Vector4[0:,0:],System.Object[],System.Numerics.Vector4[0:,0:],System.Numerics.Vector4[0:,0:],System.Object[],Waher.Script.Graphs3D.DrawingVolume)">
            <summary>
            Draws the graph on a canvas.
            </summary>
            <param name="Canvas">Canvas to draw on.</param>
            <param name="Points">Points to draw.</param>
            <param name="Normals">Optional normals.</param>
            <param name="Parameters">Graph-specific parameters.</param>
            <param name="PrevPoints">Points of previous graph of same type (if available), null (if not available).</param>
            <param name="PrevNormals">Optional normals of previous graph of same type (if available), null (if not available).</param>
            <param name="PrevParameters">Parameters of previous graph of same type (if available), null (if not available).</param>
            <param name="DrawingVolume">Current drawing volume.</param>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Plots.Surface3D">
            <summary>
            Plots a three-dimensional surface.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.Surface3D.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Plots a three-dimensional surface.
            </summary>
            <param name="X">X-axis.</param>
            <param name="Y">Y-axis.</param>
            <param name="Z">Z-axis.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression containing script.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.Surface3D.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Plots a three-dimensional surface.
            </summary>
            <param name="X">X-axis.</param>
            <param name="Y">Y-axis.</param>
            <param name="Z">Z-axis.</param>
            <param name="Color">Color or shader.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression containing script.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.Surface3D.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Plots a three-dimensional surface.
            </summary>
            <param name="X">X-axis.</param>
            <param name="Y">Y-axis.</param>
            <param name="Z">Z-axis.</param>
            <param name="Color">Color or shader.</param>
            <param name="TwoSided">If the surface is two-sided.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression containing script.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Plots.Surface3D.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Plots.Surface3D.DefaultArgumentNames">
            <summary>
            Default Argument names
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.Surface3D.Evaluate(Waher.Script.Abstraction.Elements.IElement[],Waher.Script.Variables)">
            <summary>
            Evaluates the function.
            </summary>
            <param name="Arguments">Function arguments.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Plots.Surface3DPainter">
            <summary>
            Plots a three-dimensional surface.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.Surface3DPainter.DrawGraph(Waher.Script.Graphs3D.Canvas3D,System.Numerics.Vector4[0:,0:],System.Numerics.Vector4[0:,0:],System.Object[],System.Numerics.Vector4[0:,0:],System.Numerics.Vector4[0:,0:],System.Object[],Waher.Script.Graphs3D.DrawingVolume)">
            <summary>
            Draws the graph on a canvas.
            </summary>
            <param name="Canvas">Canvas to draw on.</param>
            <param name="Points">Points to draw.</param>
            <param name="Normals">Optional normals.</param>
            <param name="Parameters">Graph-specific parameters.</param>
            <param name="PrevPoints">Points of previous graph of same type (if available), null (if not available).</param>
            <param name="PrevNormals">Optional normals of previous graph of same type (if available), null (if not available).</param>
            <param name="PrevParameters">Parameters of previous graph of same type (if available), null (if not available).</param>
            <param name="DrawingVolume">Current drawing volume.</param>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Plots.VerticalBars3D">
            <summary>
            Plots a three-dimensional vertical bars chart.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.VerticalBars3D.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Plots a three-dimensional vertical bars chart.
            </summary>
            <param name="X">X-axis.</param>
            <param name="Y">Y-axis.</param>
            <param name="Z">Z-axis.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression containing script.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.VerticalBars3D.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Plots a three-dimensional surface.
            </summary>
            <param name="X">X-axis.</param>
            <param name="Y">Y-axis.</param>
            <param name="Z">Z-axis.</param>
            <param name="Color">Color or shader.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression containing script.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Plots.VerticalBars3D.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Plots.VerticalBars3D.DefaultArgumentNames">
            <summary>
            Default Argument names
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.VerticalBars3D.Evaluate(Waher.Script.Abstraction.Elements.IElement[],Waher.Script.Variables)">
            <summary>
            Evaluates the function.
            </summary>
            <param name="Arguments">Function arguments.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Plots.VerticalBars3DPainter">
            <summary>
            Plots a three-dimensional vertical bars chart.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Plots.VerticalBars3DPainter.DrawGraph(Waher.Script.Graphs3D.Canvas3D,System.Numerics.Vector4[0:,0:],System.Numerics.Vector4[0:,0:],System.Object[],System.Numerics.Vector4[0:,0:],System.Numerics.Vector4[0:,0:],System.Object[],Waher.Script.Graphs3D.DrawingVolume)">
            <summary>
            Draws the graph on a canvas.
            </summary>
            <param name="Canvas">Canvas to draw on.</param>
            <param name="Points">Points to draw.</param>
            <param name="Normals">Optional normals.</param>
            <param name="Parameters">Graph-specific parameters.</param>
            <param name="PrevPoints">Points of previous graph of same type (if available), null (if not available).</param>
            <param name="PrevNormals">Optional normals of previous graph of same type (if available), null (if not available).</param>
            <param name="PrevParameters">Parameters of previous graph of same type (if available), null (if not available).</param>
            <param name="DrawingVolume">Current drawing volume.</param>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Shading.ConstantColor">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.ConstantColor"/> object.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.ConstantColor.#ctor(Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.PhongIntensity"/> object.
            </summary>
            <param name="Color">Color tha will be converted to an intensity object.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.ConstantColor.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.ConstantColor"/> object.
            </summary>
            <param name="Red">Ratio of reflection of the ambient term present in all points in the scene rendered.</param>
            <param name="Green">Ratio of reflection of the diffuse term of incoming light.</param>
            <param name="Blue">Ratio of reflection of the specular term of incoming light.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.ConstantColor.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.ConstantColor"/> object.
            </summary>
            <param name="Red">Ratio of reflection of the ambient term present in all points in the scene rendered.</param>
            <param name="Green">Ratio of reflection of the diffuse term of incoming light.</param>
            <param name="Blue">Ratio of reflection of the specular term of incoming light.</param>
            <param name="Alpha">Larger for surfaces that are smoother and more mirror-like.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Shading.ConstantColor.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Shading.ConstantColor.DefaultArgumentNames">
            <summary>
            Default Argument names
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.ConstantColor.Evaluate(Waher.Script.Abstraction.Elements.IElement[],Waher.Script.Variables)">
            <summary>
            Evaluates the function.
            </summary>
            <param name="Arguments">Function arguments.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Shading.PhongIntensity">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.PhongIntensity"/> object.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.PhongIntensity.#ctor(Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.PhongIntensity"/> object.
            </summary>
            <param name="Color">Color tha will be converted to an intensity object.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.PhongIntensity.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.PhongIntensity"/> object.
            </summary>
            <param name="Red">Ratio of reflection of the ambient term present in all points in the scene rendered.</param>
            <param name="Green">Ratio of reflection of the diffuse term of incoming light.</param>
            <param name="Blue">Ratio of reflection of the specular term of incoming light.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.PhongIntensity.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.PhongIntensity"/> object.
            </summary>
            <param name="Red">Ratio of reflection of the ambient term present in all points in the scene rendered.</param>
            <param name="Green">Ratio of reflection of the diffuse term of incoming light.</param>
            <param name="Blue">Ratio of reflection of the specular term of incoming light.</param>
            <param name="Alpha">Larger for surfaces that are smoother and more mirror-like.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Shading.PhongIntensity.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Shading.PhongIntensity.DefaultArgumentNames">
            <summary>
            Default Argument names
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.PhongIntensity.Evaluate(Waher.Script.Abstraction.Elements.IElement[],Waher.Script.Variables)">
            <summary>
            Evaluates the function.
            </summary>
            <param name="Arguments">Function arguments.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Shading.PhongLightSource">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.PhongLightSource"/> object.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.PhongLightSource.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.PhongIntensity"/> object.
            </summary>
            <param name="Diffuse">Diffuse light.</param>
            <param name="Specular">Specular light.</param>
            <param name="Position">Light source position.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Shading.PhongLightSource.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Shading.PhongLightSource.DefaultArgumentNames">
            <summary>
            Default Argument names
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.PhongLightSource.Evaluate(Waher.Script.Abstraction.Elements.IElement[],Waher.Script.Variables)">
            <summary>
            Evaluates the function.
            </summary>
            <param name="Arguments">Function arguments.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Shading.PhongMaterial">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.PhongMaterial"/> object.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.PhongMaterial.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.PhongMaterial"/> object.
            </summary>
            <param name="AmbientReflectionConstant">Ratio of reflection of the ambient term present in all points in the scene rendered.</param>
            <param name="DiffuseReflectionConstant">Ratio of reflection of the diffuse term of incoming light.</param>
            <param name="SpecularReflectionConstant">Ratio of reflection of the specular term of incoming light.</param>
            <param name="Shininess">Larger for surfaces that are smoother and more mirror-like.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Shading.PhongMaterial.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Shading.PhongMaterial.DefaultArgumentNames">
            <summary>
            Default Argument names
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.PhongMaterial.Evaluate(Waher.Script.Abstraction.Elements.IElement[],Waher.Script.Variables)">
            <summary>
            Evaluates the function.
            </summary>
            <param name="Arguments">Function arguments.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Shading.PhongShader">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.PhongShader"/> object.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.PhongShader.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Generates a <see cref="T:Waher.Script.Graphs3D.PhongIntensity"/> object.
            </summary>
            <param name="Diffuse">Diffuse light.</param>
            <param name="Specular">Specular light.</param>
            <param name="Position">Light source position.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Shading.PhongShader.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Shading.PhongShader.DefaultArgumentNames">
            <summary>
            Default Argument names
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Shading.PhongShader.Evaluate(Waher.Script.Abstraction.Elements.IElement[],Waher.Script.Variables)">
            <summary>
            Evaluates the function.
            </summary>
            <param name="Arguments">Function arguments.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Vectors.Vector3">
            <summary>
            Generates a <see cref="T:System.Numerics.Vector3"/> object.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Vectors.Vector3.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Generates a <see cref="T:System.Numerics.Vector3"/> object.
            </summary>
            <param name="X">X-coordinate.</param>
            <param name="Y">Y-coordinate.</param>
            <param name="Z">Z-coordinate.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Vectors.Vector3.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Vectors.Vector3.DefaultArgumentNames">
            <summary>
            Default Argument names
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Vectors.Vector3.Evaluate(Waher.Script.Abstraction.Elements.IElement[],Waher.Script.Variables)">
            <summary>
            Evaluates the function.
            </summary>
            <param name="Arguments">Function arguments.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Functions.Vectors.Vector4">
            <summary>
            Generates a <see cref="T:System.Numerics.Vector4"/> object.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Vectors.Vector4.#ctor(Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,Waher.Script.Model.ScriptNode,System.Int32,System.Int32,Waher.Script.Expression)">
            <summary>
            Generates a <see cref="T:System.Numerics.Vector4"/> object.
            </summary>
            <param name="X">Homogeneous X-coordinate.</param>
            <param name="Y">Homogeneous Y-coordinate.</param>
            <param name="Z">Homogeneous Z-coordinate.</param>
            <param name="W">Homogeneous W-coordinate.</param>
            <param name="Start">Start position in script expression.</param>
            <param name="Length">Length of expression covered by node.</param>
            <param name="Expression">Expression.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Vectors.Vector4.FunctionName">
            <summary>
            Name of the function
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Functions.Vectors.Vector4.DefaultArgumentNames">
            <summary>
            Default Argument names
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Functions.Vectors.Vector4.Evaluate(Waher.Script.Abstraction.Elements.IElement[],Waher.Script.Variables)">
            <summary>
            Evaluates the function.
            </summary>
            <param name="Arguments">Function arguments.</param>
            <param name="Variables">Variables collection.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Graph3D">
            <summary>
            Handles three-dimensional graphs.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.#ctor">
            <summary>
            Base class for two-dimensional graphs.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.#ctor(Waher.Script.Abstraction.Elements.IMatrix,Waher.Script.Abstraction.Elements.IMatrix,Waher.Script.Abstraction.Elements.IMatrix,System.Numerics.Vector4[0:,0:],Waher.Script.Graphs3D.IPainter3D,System.Boolean,System.Boolean,System.Boolean,Waher.Script.Model.ScriptNode,System.Object[])">
            <summary>
            Base class for two-dimensional graphs.
            </summary>
            <param name="X">X-axis</param>
            <param name="Y">Y-axis</param>
            <param name="Z">Z-axis</param>
            <param name="Normals">Optional Normals</param>
            <param name="Painter">Painter of graph.</param>
            <param name="ShowZeroX">If the y-axis (x=0) should always be shown.</param>
            <param name="ShowZeroY">If the x-axis (y=0) should always be shown.</param>
            <param name="ShowZeroZ">If the z-axis (z=0) should always be shown.</param>
            <param name="Node">Node creating the graph.</param>
            <param name="Parameters">Graph-specific parameters.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.X">
            <summary>
            X-axis series.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.Y">
            <summary>
            Y-axis series.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.Z">
            <summary>
            Z-axis series.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.Normals">
            <summary>
            Optional normals.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.Parameters">
            <summary>
            Parameters.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.MinX">
            <summary>
            Smallest X-value.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.MaxX">
            <summary>
            Largest X-value.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.MinY">
            <summary>
            Smallest Y-value.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.MaxY">
            <summary>
            Largest Y-value.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.MinZ">
            <summary>
            Smallest Z-value.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.MaxZ">
            <summary>
            Largest Z-value.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.Title">
            <summary>
            Title for graph.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.LabelX">
            <summary>
            Label for x-axis.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.LabelY">
            <summary>
            Label for y-axis.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.LabelZ">
            <summary>
            Label for z-axis.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.ShowXAxis">
            <summary>
            If the X-axis is to be displayed.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.ShowYAxis">
            <summary>
            If the Y-axis is to be displayed.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.ShowZAxis">
            <summary>
            If the Z-axis is to be displayed.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.ShowGrid">
            <summary>
            If the grid is to be displayed.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.Angle">
            <summary>
            Rotation angle, in degrees, around the Y-axis.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.Inclination">
            <summary>
            Inclination, in degrees (rotation angle, around the X-axis).
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.Oversampling">
            <summary>
            Oversampling (for anti-aliasing-purposes).
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.AddLeft(Waher.Script.Abstraction.Elements.ISemiGroupElement)">
            <summary>
            Tries to add an element to the current element, from the left.
            </summary>
            <param name="Element">Element to add.</param>
            <returns>Result, if understood, null otherwise.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.AddRight(Waher.Script.Abstraction.Elements.ISemiGroupElement)">
            <summary>
            Tries to add an element to the current element, from the right.
            </summary>
            <param name="Element">Element to add.</param>
            <returns>Result, if understood, null otherwise.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.CreatePixels(Waher.Script.Graphs.GraphSettings,System.Object[]@)">
            <summary>
            Creates a bitmap of the graph.
            </summary>
            <param name="Settings">Graph settings.</param>
            <param name="States">State object(s) that contain graph-specific information about its inner states.
            These can be used in calls back to the graph object to make actions on the generated graph.</param>
            <returns>Bitmap</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.GetLabels(Waher.Script.Abstraction.Elements.IElement@,Waher.Script.Abstraction.Elements.IElement@,System.Collections.Generic.IEnumerable{Waher.Script.Abstraction.Elements.IMatrix},System.Int32,Waher.Script.Graphs.LabelType@)">
            <summary>
            Gets label values for a series vector.
            </summary>
            <param name="Min">Smallest value.</param>
            <param name="Max">Largest value.</param>
            <param name="Series">Series to draw.</param>
            <param name="ApproxNrLabels">Number of labels.</param>
            <param name="LabelType">Type of labels produced.</param>
            <returns>Vector of labels.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.Scale(Waher.Script.Abstraction.Elements.IMatrix,Waher.Script.Abstraction.Elements.IMatrix,Waher.Script.Abstraction.Elements.IMatrix,Waher.Script.Abstraction.Elements.IElement,Waher.Script.Abstraction.Elements.IElement,Waher.Script.Abstraction.Elements.IElement,Waher.Script.Abstraction.Elements.IElement,Waher.Script.Abstraction.Elements.IElement,Waher.Script.Abstraction.Elements.IElement,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Scales three matrices of equal size to point vectors in space.
            </summary>
            <param name="MatrixX">X-matrix.</param>
            <param name="MatrixY">Y-matrix.</param>
            <param name="MatrixZ">Z-matrix.</param>
            <param name="MinX">Smallest X-value.</param>
            <param name="MaxX">Largest X-value.</param>
            <param name="MinY">Smallest Y-value.</param>
            <param name="MaxY">Largest Y-value.</param>
            <param name="MinZ">Smallest Z-value.</param>
            <param name="MaxZ">Largest Z-value.</param>
            <param name="OffsetX">X-offset to volume.</param>
            <param name="OffsetY">Y-offset to volume.</param>
            <param name="OffsetZ">Z-offset to volume.</param>
            <param name="Width">Width of volume.</param>
            <param name="Height">Height of volume.</param>
            <param name="Depth">Depth of volume.</param>
            <returns>Mesh of point vectors.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.Scale(Waher.Script.Abstraction.Elements.IMatrix,Waher.Script.Abstraction.Elements.IElement,Waher.Script.Abstraction.Elements.IElement,System.Double,System.Double)">
            <summary>
            Scales a matrix to fit a given volume.
            </summary>
            <param name="Matrix">Matrix.</param>
            <param name="Min">Smallest value.</param>
            <param name="Max">Largest value.</param>
            <param name="Offset">Offset to volume.</param>
            <param name="Size">Size of volume.</param>
            <returns>Matrix distributed in the available volume.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.Scale(System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Scales a matrix to fit a given volume.
            </summary>
            <param name="Matrix">Matrix.</param>
            <param name="Min">Smallest value.</param>
            <param name="Max">Largest value.</param>
            <param name="Offset">Offset to volume.</param>
            <param name="Size">Size of area.</param>
            <returns>Matrix distributed in the available volume.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.Scale(System.DateTime[0:,0:],System.DateTime,System.DateTime,System.Double,System.Double)">
            <summary>
            Scales a matrix to fit a given volume.
            </summary>
            <param name="Matrix">Matrix.</param>
            <param name="Min">Smallest value.</param>
            <param name="Max">Largest value.</param>
            <param name="Offset">Offset to volume.</param>
            <param name="Size">Size of area.</param>
            <returns>Matrix distributed in the available volume.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.Scale(Waher.Script.Objects.PhysicalQuantity[0:,0:],System.Double,System.Double,Waher.Script.Units.Unit,System.Double,System.Double)">
            <summary>
            Scales a matrix to fit a given volume.
            </summary>
            <param name="Matrix">Matrix.</param>
            <param name="Min">Smallest value.</param>
            <param name="Max">Largest value.</param>
            <param name="Unit">Unit.</param>
            <param name="Offset">Offset to volume.</param>
            <param name="Size">Size of area.</param>
            <returns>Matrix distributed in the available volume.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.Scale(System.Object[0:,0:],System.Double,System.Double)">
            <summary>
            Scales a matrix to fit a given volume.
            </summary>
            <param name="Matrix">Matrix.</param>
            <param name="Offset">Offset to volume.</param>
            <param name="Size">Size of area.</param>
            <returns>Matrix distributed in the available volume.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.GetBitmapClickScript(System.Double,System.Double,System.Object[])">
            <summary>
            Gets script corresponding to a point in a generated bitmap representation of the graph.
            </summary>
            <param name="X">X-Coordinate.</param>
            <param name="Y">Y-Coordinate.</param>
            <param name="States">State objects for the generated bitmap.</param>
            <returns>Script.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.ToShader(System.Object)">
            <summary>
            Gets a shader object from an argument.
            </summary>
            <param name="Argument">Argument value.</param>
            <returns>Shader object</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.ExportGraph(System.Xml.XmlWriter)">
            <summary>
            Exports graph specifics to XML.
            </summary>
            <param name="Output">XML output.</param>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.ImportGraph(System.Xml.XmlElement)">
            <summary>
            Imports graph specifics from XML.
            </summary>
            <param name="Xml">XML input.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.Graph3D.UsesDefaultColor">
            <summary>
            If graph uses default color
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Graph3D.TrySetDefaultColor(SkiaSharp.SKColor)">
            <summary>
            Tries to set the default color.
            </summary>
            <param name="Color">Default color.</param>
            <returns>If possible to set.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.I3DShader">
            <summary>
            Interface for 3D shaders.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.I3DShader.GetColor(System.Single,System.Single,System.Single,System.Numerics.Vector3,Waher.Script.Graphs3D.Canvas3D)">
            <summary>
            Gets a color for a position.
            </summary>
            <param name="X">X-coordinate.</param>
            <param name="Y">Y-coordinate.</param>
            <param name="Z">Z-coordinate.</param>
            <param name="Normal">Surface normal vector.</param>
            <param name="Canvas">Current canvas.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.I3DShader.GetColors(System.Single[],System.Single[],System.Single[],System.Numerics.Vector3[],System.Int32,SkiaSharp.SKColor[],Waher.Script.Graphs3D.Canvas3D)">
            <summary>
            Gets an array of colors.
            </summary>
            <param name="X">X-coordinates.</param>
            <param name="Y">Y-coordinates.</param>
            <param name="Z">Z-coordinates.</param>
            <param name="Normals">Normal vectors.</param>
            <param name="N">Number of coordinates.</param>
            <param name="Colors">Where color values will be stored.</param>
            <param name="Canvas">Current canvas.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.I3DShader.Opaque">
            <summary>
            If shader is 100% opaque.
            </summary>
        </member>
        <member name="T:Waher.Script.Graphs3D.IPainter3D">
            <summary>
            Interface for 3D graph drawing functions.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.IPainter3D.DrawGraph(Waher.Script.Graphs3D.Canvas3D,System.Numerics.Vector4[0:,0:],System.Numerics.Vector4[0:,0:],System.Object[],System.Numerics.Vector4[0:,0:],System.Numerics.Vector4[0:,0:],System.Object[],Waher.Script.Graphs3D.DrawingVolume)">
            <summary>
            Draws the graph on a canvas.
            </summary>
            <param name="Canvas">Canvas to draw on.</param>
            <param name="Points">Points to draw.</param>
            <param name="Normals">Optional normals.</param>
            <param name="Parameters">Graph-specific parameters.</param>
            <param name="PrevPoints">Points of previous graph of same type (if available), null (if not available).</param>
            <param name="PrevNormals">Optional normals of previous graph of same type (if available), null (if not available).</param>
            <param name="PrevParameters">Parameters of previous graph of same type (if available), null (if not available).</param>
            <param name="DrawingVolume">Current drawing volume.</param>
        </member>
        <member name="T:Waher.Script.Graphs3D.Output.ConstantColorOutput">
            <summary>
            Converts values of type <see cref="T:Waher.Script.Graphs3D.ConstantColor"/> to expression strings.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.ConstantColorOutput.Supports(System.Type)">
            <summary>
            If the interface understands objects such as <paramref name="Object"/>.
            </summary>
            <param name="Object">Object</param>
            <returns>How well objects of this type are supported.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.ConstantColorOutput.GetString(System.Object)">
            <summary>
            Gets a string representing a value.
            </summary>
            <param name="Value">Value</param>
            <returns>Expression string.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Output.Matrix4x4Output">
            <summary>
            Converts values of type <see cref="T:System.Numerics.Matrix4x4"/> to expression strings.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.Matrix4x4Output.Supports(System.Type)">
            <summary>
            If the interface understands objects such as <paramref name="Object"/>.
            </summary>
            <param name="Object">Object</param>
            <returns>How well objects of this type are supported.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.Matrix4x4Output.GetString(System.Object)">
            <summary>
            Gets a string representing a value.
            </summary>
            <param name="Value">Value</param>
            <returns>Expression string.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Output.PhongIntensityOutput">
            <summary>
            Converts values of type <see cref="T:Waher.Script.Graphs3D.PhongIntensity"/> to expression strings.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.PhongIntensityOutput.Supports(System.Type)">
            <summary>
            If the interface understands objects such as <paramref name="Object"/>.
            </summary>
            <param name="Object">Object</param>
            <returns>How well objects of this type are supported.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.PhongIntensityOutput.GetString(System.Object)">
            <summary>
            Gets a string representing a value.
            </summary>
            <param name="Value">Value</param>
            <returns>Expression string.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Output.PhongLightSourceOutput">
            <summary>
            Converts values of type <see cref="T:Waher.Script.Graphs3D.PhongLightSource"/> to expression strings.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.PhongLightSourceOutput.Supports(System.Type)">
            <summary>
            If the interface understands objects such as <paramref name="Object"/>.
            </summary>
            <param name="Object">Object</param>
            <returns>How well objects of this type are supported.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.PhongLightSourceOutput.GetString(System.Object)">
            <summary>
            Gets a string representing a value.
            </summary>
            <param name="Value">Value</param>
            <returns>Expression string.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Output.PhongMaterialOutput">
            <summary>
            Converts values of type <see cref="T:Waher.Script.Graphs3D.PhongMaterial"/> to expression strings.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.PhongMaterialOutput.Supports(System.Type)">
            <summary>
            If the interface understands objects such as <paramref name="Object"/>.
            </summary>
            <param name="Object">Object</param>
            <returns>How well objects of this type are supported.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.PhongMaterialOutput.GetString(System.Object)">
            <summary>
            Gets a string representing a value.
            </summary>
            <param name="Value">Value</param>
            <returns>Expression string.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Output.PhongShaderOutput">
            <summary>
            Converts values of type <see cref="T:Waher.Script.Graphs3D.PhongShader"/> to expression strings.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.PhongShaderOutput.Supports(System.Type)">
            <summary>
            If the interface understands objects such as <paramref name="Object"/>.
            </summary>
            <param name="Object">Object</param>
            <returns>How well objects of this type are supported.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.PhongShaderOutput.GetString(System.Object)">
            <summary>
            Gets a string representing a value.
            </summary>
            <param name="Value">Value</param>
            <returns>Expression string.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Output.Vector3Output">
            <summary>
            Converts values of type <see cref="T:System.Numerics.Vector3"/> to expression strings.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.Vector3Output.Supports(System.Type)">
            <summary>
            If the interface understands objects such as <paramref name="Object"/>.
            </summary>
            <param name="Object">Object</param>
            <returns>How well objects of this type are supported.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.Vector3Output.GetString(System.Object)">
            <summary>
            Gets a string representing a value.
            </summary>
            <param name="Value">Value</param>
            <returns>Expression string.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.Output.Vector4Output">
            <summary>
            Converts values of type <see cref="T:System.Numerics.Vector4"/> to expression strings.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.Vector4Output.Supports(System.Type)">
            <summary>
            If the interface understands objects such as <paramref name="Object"/>.
            </summary>
            <param name="Object">Object</param>
            <returns>How well objects of this type are supported.</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.Output.Vector4Output.GetString(System.Object)">
            <summary>
            Gets a string representing a value.
            </summary>
            <param name="Value">Value</param>
            <returns>Expression string.</returns>
        </member>
        <member name="T:Waher.Script.Graphs3D.PhongIntensity">
            <summary>
            Contains information about the intensity of a light component, as used in the Phong reflection model.
            https://en.wikipedia.org/wiki/Phong_reflection_model
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.PhongIntensity.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Contains information about the intensity of a light component, as used in the Phong reflection model.
            https://en.wikipedia.org/wiki/Phong_reflection_model
            </summary>
            <param name="Red">Red intensity.</param>
            <param name="Green">Green intensity.</param>
            <param name="Blue">Blue intensity.</param>
            <param name="Alpha">Alpha intensity.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongIntensity.Red">
            <summary>
            Red intensity.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongIntensity.Green">
            <summary>
            Green intensity.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongIntensity.Blue">
            <summary>
            Blue intensity.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongIntensity.Alpha">
            <summary>
            Alpha intensity.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongIntensity.Opaque">
            <summary>
            If shader is 100% opaque.
            </summary>
        </member>
        <member name="T:Waher.Script.Graphs3D.PhongLightSource">
            <summary>
            Contains information about a light source, as used in the Phong reflection model.
            https://en.wikipedia.org/wiki/Phong_reflection_model
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.PhongLightSource.#ctor(Waher.Script.Graphs3D.PhongIntensity,Waher.Script.Graphs3D.PhongIntensity,System.Numerics.Vector3)">
            <summary>
            Contains information about a light source, as used in the Phong reflection model.
            https://en.wikipedia.org/wiki/Phong_reflection_model
            </summary>
            <param name="Diffuse">Diffuse intensity.</param>
            <param name="Specular">Specular intensity.</param>
            <param name="Position">Position of light source.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongLightSource.Diffuse">
            <summary>
            Diffuse intensity.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongLightSource.Specular">
            <summary>
            Specular intensity.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongLightSource.Position">
            <summary>
            Position of light source..
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongLightSource.Opaque">
            <summary>
            If shader is 100% opaque.
            </summary>
        </member>
        <member name="T:Waher.Script.Graphs3D.PhongMaterial">
            <summary>
            Contains information about a material, as used in the Phong reflection model.
            https://en.wikipedia.org/wiki/Phong_reflection_model
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.PhongMaterial.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Contains information about a material, as used in the Phong reflection model.
            https://en.wikipedia.org/wiki/Phong_reflection_model
            </summary>
            <param name="AmbientReflectionConstant">Ratio of reflection of the ambient term present in all points in the scene rendered.</param>
            <param name="DiffuseReflectionConstant">Ratio of reflection of the diffuse term of incoming light.</param>
            <param name="SpecularReflectionConstant">Ratio of reflection of the specular term of incoming light.</param>
            <param name="Shininess">Larger for surfaces that are smoother and more mirror-like.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongMaterial.AmbientReflectionConstant">
            <summary>
            Ratio of reflection of the ambient term present in all points in the scene rendered.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongMaterial.DiffuseReflectionConstant">
            <summary>
            Ratio of reflection of the diffuse term of incoming light.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongMaterial.SpecularReflectionConstant">
            <summary>
            Ratio of reflection of the specular term of incoming light.
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongMaterial.Shininess">
            <summary>
            Shininess coefficient.
            </summary>
        </member>
        <member name="T:Waher.Script.Graphs3D.PhongShader">
            <summary>
            The Phong Shader uses the Phong Reflection model to generate colors.
            https://en.wikipedia.org/wiki/Phong_reflection_model
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.PhongShader.#ctor(Waher.Script.Graphs3D.PhongMaterial,Waher.Script.Graphs3D.PhongIntensity,Waher.Script.Graphs3D.PhongLightSource[])">
            <summary>
            The Phong Shader uses the Phong Reflection model to generate colors.
            https://en.wikipedia.org/wiki/Phong_reflection_model
            </summary>
            <param name="Material">Surface material.</param>
            <param name="Ambient">Ambient intensity.</param>
            <param name="LightSources">Light sources.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongShader.Sources">
            <summary>
            Light Sources
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongShader.Ambient">
            <summary>
            Ambient settings
            </summary>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongShader.Material">
            <summary>
            Material settings.
            </summary>
        </member>
        <member name="M:Waher.Script.Graphs3D.PhongShader.GetColor(System.Single,System.Single,System.Single,System.Numerics.Vector3,Waher.Script.Graphs3D.Canvas3D)">
            <summary>
            Gets a color for a position.
            </summary>
            <param name="X">X-coordinate.</param>
            <param name="Y">Y-coordinate.</param>
            <param name="Z">Z-coordinate.</param>
            <param name="Normal">Surface normal vector.</param>
            <param name="Canvas">Current canvas.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Waher.Script.Graphs3D.PhongShader.GetColors(System.Single[],System.Single[],System.Single[],System.Numerics.Vector3[],System.Int32,SkiaSharp.SKColor[],Waher.Script.Graphs3D.Canvas3D)">
            <summary>
            Gets an array of colors.
            </summary>
            <param name="X">X-coordinates.</param>
            <param name="Y">Y-coordinates.</param>
            <param name="Z">Z-coordinates.</param>
            <param name="Normals">Normal vectors.</param>
            <param name="N">Number of coordinates.</param>
            <param name="Colors">Where color values will be stored.</param>
            <param name="Canvas">Current canvas.</param>
        </member>
        <member name="P:Waher.Script.Graphs3D.PhongShader.Opaque">
            <summary>
            If shader is 100% opaque.
            </summary>
        </member>
    </members>
</doc>
