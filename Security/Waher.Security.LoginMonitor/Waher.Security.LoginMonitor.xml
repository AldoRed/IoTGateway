<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Waher.Security.LoginMonitor</name>
    </assembly>
    <members>
        <member name="T:Waher.Security.LoginMonitor.AnnotateEndpointEventArgs">
            <summary>
            Event arguments for endpoint annotation events.
            </summary>
        </member>
        <member name="M:Waher.Security.LoginMonitor.AnnotateEndpointEventArgs.#ctor(System.String)">
            <summary>
            Event arguments for endpoint annotation events.
            </summary>
            <param name="RemoteEndpoint">Remote endpoint.</param>
        </member>
        <member name="P:Waher.Security.LoginMonitor.AnnotateEndpointEventArgs.RemoteEndpoint">
            <summary>
            Remote endpoint.
            </summary>
        </member>
        <member name="M:Waher.Security.LoginMonitor.AnnotateEndpointEventArgs.GetTags">
            <summary>
            Gets annotations, in the form of an array of tags.
            </summary>
            <returns>Array of tags.</returns>
        </member>
        <member name="M:Waher.Security.LoginMonitor.AnnotateEndpointEventArgs.AddTag(System.String,System.Object)">
            <summary>
            Adds a tag to the list of tags.
            </summary>
            <param name="Key">Tag key name.</param>
            <param name="Value">Tag value.</param>
        </member>
        <member name="T:Waher.Security.LoginMonitor.AnnotateEndpointEventHandler">
            <summary>
            Delegate for endpoint annotation event handlers.
            </summary>
            <param name="Sender">Sender of event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:Waher.Security.LoginMonitor.LoginAuditor">
            <summary>
            Class that monitors login events, and help applications determine malicious intent. 
            Register instance of class with <see cref="M:Waher.Events.Log.Register(Waher.Events.IEventSink)"/> to activate it.
            Call its <see cref="M:Waher.Security.LoginMonitor.LoginAuditor.GetEarliestLoginOpportunity(System.String,System.String)"/> method to get information about 
            when a remote endpoint can login.
            
            Stream of events are analyzed, to detect events with Event ID "LoginSuccessful" and "LoginFailure". Individual state objects 
            are maintained for each remote endpoint, allowing services to query the LoginAuditor class (using its 
            <see cref="M:Waher.Security.LoginMonitor.LoginAuditor.GetEarliestLoginOpportunity(System.String,System.String)"/> method) about the current state of each remote endpoint trying to login.
            </summary>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.#ctor(System.String,Waher.Security.LoginMonitor.LoginInterval[])">
            <summary>
            Class that monitors login events, and help applications determine malicious intent. 
            Register instance of class with <see cref="M:Waher.Events.Log.Register(Waher.Events.IEventSink)"/> to activate it.
            Call its <see cref="M:Waher.Security.LoginMonitor.LoginAuditor.GetEarliestLoginOpportunity(System.String,System.String)"/> method to get information about 
            when a remote endpoint can login.
            
            Stream of events are analyzed, to detect events with Event ID "LoginSuccessful" and "LoginFailure". Individual state objects 
            are maintained for each remote endpoint, allowing services to query the LoginAuditor class (using its 
            <see cref="M:Waher.Security.LoginMonitor.LoginAuditor.GetEarliestLoginOpportunity(System.String,System.String)"/> method) about the current state of each remote endpoint trying to login.
            </summary>
            <param name="ObjectID">Log Object ID</param>
            <param name="LoginIntervals">Number of login attempts possible during given time period. Numbers must be positive, and
            interval ascending. If continually failing past accepted intervals, remote endpoint will be registered as malicious.</param>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.Queue(Waher.Events.Event)">
            <summary>
            Queues an event to be output.
            </summary>
            <param name="Event">Event to queue.</param>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.GetAnnotatedStateObject(System.String)">
            <summary>
            Gets an annotated Remote endpoint state object, if one is available.
            </summary>
            <param name="RemoteEndpoint">Remote Endpoint.</param>
            <returns>Annotated state object, if available. Null otherwise.</returns>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.ProcessLoginSuccessful(System.String,System.String)">
            <summary>
            Processes a successful login attempt.
            
            NOTE: Typically, logins are audited by listening on logged events.
            This method should only be called directly when such events are not logged.
            </summary>
            <param name="RemoteEndpoint">String-representation of remote endpoint.</param>
            <param name="Protocol">Protocol used to log in.</param>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.ProcessLoginFailure(System.String,System.String,System.DateTime,System.String)">
            <summary>
            Processes a failed login attempt.
            
            NOTE: Typically, logins are audited by listening on logged events.
            This method should only be called directly when such events are not logged.
            </summary>
            <param name="RemoteEndpoint">String-representation of remote endpoint.</param>
            <param name="Protocol">Protocol used to log in.</param>
            <param name="Timestamp">Timestamp of event.</param>
            <param name="Reason">Reason for the failure. Will be logged with the state object, in case the remote endpoint
            gets blocked.</param>
            <returns>If the remote endpoint was or has been blocked as a result of the failure.</returns>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.GetEarliestLoginOpportunity(System.String,System.String)">
            <summary>
            Checks when a remote endpoint can login.
            </summary>
            <param name="RemoteEndpoint">String-representation of remote endpoint.</param>
            <param name="Protocol">Protocol used to log in.</param>
            <returns>When the remote endpoint is allowed to login:
            
            null = Remote endpoint can login now.
            <see cref="F:System.DateTime.MaxValue"/> = Remote endpoint has been blocked and cannot login.
            Other <see cref="T:System.DateTime"/> values indicate when, at the earliest, the remote endpoint
            is allowed to login again.
            </returns>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.AppendWhoIsInfo(System.Text.StringBuilder,System.String)">
            <summary>
            Appends WHOIS information to a Markdown document.
            </summary>
            <param name="Markdown">Markdown being built.</param>
            <param name="RemoteEndpoint">Remote Endpoint.</param>
            <returns>WHOIS information found, or <see cref="F:System.String.Empty"/> if no information found.</returns>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.Annotate(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Annotates a remote endpoint.
            </summary>
            <param name="RemoteEndpoint">String-representation of remote endpoint.</param>
            <param name="Tags">Predefined tags.</param>
            <returns>Tags, including tags provided by external annotation.</returns>
        </member>
        <member name="E:Waher.Security.LoginMonitor.LoginAuditor.AnnotateEndpoint">
            <summary>
            Event raised when an endpoint is to be annotated. Can be used to add additional information about an endpoint.
            </summary>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.UnblockAndReset(System.String)">
            <summary>
            Unblocks a remote endpoint and resets counters for it.
            </summary>
            <param name="RemoteEndpoint">String-representation of remote endpoint.</param>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.UnblockAndReset(System.String,System.String)">
            <summary>
            Unblocks a remote endpoint and resets counters for it.
            </summary>
            <param name="RemoteEndpoint">String-representation of remote endpoint.</param>
            <param name="Protocol">Protocol used to log in.</param>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.Fail(System.String,System.String,System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Handles a failed login attempt.
            </summary>
            <param name="Message">Log message</param>
            <param name="UserName">Attempted user name.</param>
            <param name="RemoteEndpoint">String representation of remote endpoint</param>
            <param name="Protocol">Protocol</param>
            <param name="Tags">Any informative tags.</param>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.Success(System.String,System.String,System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Handles a successful login attempt.
            </summary>
            <param name="Message">Log message</param>
            <param name="UserName">Attempted user name.</param>
            <param name="RemoteEndpoint">String representation of remote endpoint</param>
            <param name="Protocol">Protocol</param>
            <param name="Tags">Any informative tags.</param>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.ReportTlsHackAttempt(System.String,System.String,System.String)">
            <summary>
            Reports a TLS hacking attempt from an endpoint. Can be used to deny TLS negotiation to proceed, and conserving resources
            through use of <see cref="M:Waher.Security.LoginMonitor.LoginAuditor.CanStartTls(System.String)"/>.
            </summary>
            <param name="RemoteEndpoint">Remote endpoint performing the attack.</param>
            <param name="Message">Message to log.</param>
            <param name="Protocoll">Protocol used.</param>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginAuditor.CanStartTls(System.String)">
            <summary>
            Checks if TLS negotiation can start, for a given endpoint. If the endpoint has tries a TLS hack attempt during the
            last hour, the answer will be no.
            </summary>
            <param name="RemoteEndpoint">Remote endpoint wishing to start TLS.</param>
            <returns>If TLS-negotiation can proceed.</returns>
        </member>
        <member name="T:Waher.Security.LoginMonitor.LoginInterval">
            <summary>
            Number of failing login attempts possible during given time period.
            </summary>
        </member>
        <member name="M:Waher.Security.LoginMonitor.LoginInterval.#ctor(System.Int32,System.TimeSpan)">
            <summary>
            Number of failing login attempts possible during given time period.
            </summary>
            <param name="NrAttempts">Number of allowed login attempts.</param>
            <param name="Interval">Time period during which failing attempts can be made.</param>
        </member>
        <member name="P:Waher.Security.LoginMonitor.LoginInterval.Interval">
            <summary>
            Number of allowed login attempts.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.LoginInterval.NrAttempts">
            <summary>
            Time period during which failing attempts can be made.
            </summary>
        </member>
        <member name="T:Waher.Security.LoginMonitor.RemoteEndpoint">
            <summary>
            Login state information relating to a remote endpoint
            </summary>
        </member>
        <member name="M:Waher.Security.LoginMonitor.RemoteEndpoint.#ctor">
            <summary>
            Login state information relating to a remote endpoint
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.ObjectId">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.Endpoint">
            <summary>
            String-representation of remote endpoint.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.Created">
            <summary>
            When record was created.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.LastProtocol">
            <summary>
            Last protocol used.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.Blocked">
            <summary>
            If endpoint is blocked or not.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.State">
            <summary>
            Current login state. Null represents no login attempts have been made, or last one successfull.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.Timestamps">
            <summary>
            Timestamps of first attempt in each interval. Null represents no login attempts have been made, or last one successfull.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.Reason">
            <summary>
            Reason for blocking the endpoint.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.WhoIs">
            <summary>
            WHOIS information about the remote endpoint.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.City">
            <summary>
            City related to the endpoint.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.Region">
            <summary>
            Region related to the endpoint.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.Country">
            <summary>
            Country related to the endpoint.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.Code">
            <summary>
            Country Code related to the endpoint.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.Flag">
            <summary>
            Flag related to the endpoint.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.LastFailed">
            <summary>
            Checks if last login attempt was a failed login attempt.
            </summary>
        </member>
        <member name="P:Waher.Security.LoginMonitor.RemoteEndpoint.ArchiveDays">
            <summary>
            Number of days to archive field.
            </summary>
        </member>
    </members>
</doc>
